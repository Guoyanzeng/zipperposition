
# expect: unsat

val i : type.

val map : (i -> i) -> i.

val f : i -> i.
val g : i -> i.

val a : i.
val b : i.

assert f = g.

val f1: i->i.
val f2: i->i.

assert f1 != f2.

goal exists (F:(i->i)->i->i).
  map (F f) = map (F g) &&
  F f a = f (f a) &&
  F g b = g (g b) &&
  F f1 != F f2. # not identity


