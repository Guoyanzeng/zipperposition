# expect: unsat
val term : type.
data nat := z | s nat.
val p : nat -> prop.
val q : nat -> prop.
assert p z.
assert q z.
assert forall (N:nat). (((q N) && (p N)) => (q (s N))).
assert forall (N:nat). (((q (s N)) && (p N)) => (p (s N))).
goal forall (N:nat). (p N).
