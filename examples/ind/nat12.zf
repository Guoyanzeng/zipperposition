# expect: unsat
include "nat.zf".

# p(n) & q(n) => q(n+1)
# p(n) & q(n+1) => p(n+1)
# p0 et q0
# prove:  !n: p(n)

val p : nat -> prop.
val q : nat -> prop.
assert p z.
assert q z.
assert forall (N:nat). (((q N) && (p N)) => (q (s N))).
assert forall (N:nat). (((q (s N)) && (p N)) => (p (s N))).
goal forall (N:nat). (p N).
