#use "topfind";;
#require "num";;
#require "unix";;
#require "datalog";;
#directory "_build/src/";;
#directory "_build/src/meta/";;
#load "logtk.cma";;
#load "logtk_meta.cma";;
#install_printer Logtk.Symbol.fmt;;
#install_printer Logtk.Type.fmt;;
#install_printer Logtk.Term.fmt;;
#install_printer Logtk.Formula.fmt;;
#install_printer Logtk.Signature.fmt;;
#install_printer Logtk.Substs.fmt;;
#install_printer Logtk.Symbol.fmt;;
#install_printer Logtk.Precedence.fmt;;
#install_printer Logtk.Ordering.fmt;;
#install_printer Logtk.Ast_tptp.fmt_general;;
#install_printer Logtk.Ast_tptp.fmt_role;;
#install_printer Logtk.Ast_tptp.fmt_declaration;;
#install_printer Logtk.Formula.FSet.fmt;;
#install_printer Logtk.Transform.fmt;;
#install_printer Logtk_meta.MetaPattern.fmt;;
#install_printer Logtk_meta.MetaPattern.Set.fmt;;
#install_printer Logtk_meta.MetaKB.fmt;;
open Logtk.Sequence.Infix;;
open Logtk.Type.Infix;;
module T = Logtk.Term;;
module F = Logtk.Formula;;
let pterm s = Logtk.Parse_tptp.parse_term Logtk.Lex_tptp.token (Lexing.from_string s);;
let pform s = Logtk.Parse_tptp.parse_formula Logtk.Lex_tptp.token (Lexing.from_string s);;
open Logtk;;
(* vim:syntax=ocaml
*)
