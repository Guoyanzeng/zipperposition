[zip] terminate phase parse_cli
[zip] start phase load_extensions
[zip] register extension `superposition`...
[zip] register extension `ac`...
[zip] register extension `heuristics`...
[zip] register extension `avatar`...
[zip] register extension `induction_simple`...
[zip] register extension `rewriting`...
[zip] register extension `arith_int`...
[zip] register extension `arith_rat`...
[zip] register extension `ind_types`...
[zip] terminate phase load_extensions
[zip] start phase parse_prelude
[zip] terminate phase parse_prelude
[zip] start phase start_file
[zip] ### process file `../hoe.extra/tests/agt035.p` ###
[zip] terminate phase start_file
[zip] start phase parse_file
[] search `../hoe.extra/tests/agt035.p`
    as `../hoe.extra/tests/../hoe.extra/tests/agt035.p`
[] search `../hoe.extra/tests/agt035.p`
    as `../hoe.extra/../hoe.extra/tests/agt035.p`
[zip] terminate phase parse_file
[zip] start phase typing
[ty-infer] infer types for statement `val [name mu_type] mu : type.`
[ty-infer] declare mu: type
[ty-infer]
    infer types for statement
      `val [name mand_type] mand :
         (ι → prop) → ((ι → prop) → (ι → prop)).`
[ty-infer] declare mand: (ι → prop) → (ι → prop) → ι → prop
[ty-infer]
    infer types for statement
      `val [name mimplies_type] mimplies :
         (ι → prop) → ((ι → prop) → (ι → prop)).`
[ty-infer] declare mimplies:
    (ι → prop) → (ι → prop) → ι → prop
[ty-infer]
    infer types for statement
      `val [name mforall_ind_type] mforall_ind :
         (mu → (ι → prop)) → (ι → prop).`
[ty-infer] unify types `type` and `type`
[ty-infer] declare mforall_ind: (mu → ι → prop) → ι → prop
[ty-infer]
    infer types for statement
      `val [name mbox_type] mbox :
         (ι → (ι → prop)) → ((ι → prop) → (ι → prop)).`
[ty-infer] declare mbox:
    (ι → ι → prop) → (ι → prop) → ι → prop
[ty-infer]
    infer types for statement
      `val [name mdia_type] mdia :
         (ι → (ι → prop)) → ((ι → prop) → (ι → prop)).`
[ty-infer] declare mdia:
    (ι → ι → prop) → (ι → prop) → ι → prop
[ty-infer]
    infer types for statement
      `val [name mvalid_type] mvalid : (ι → prop) → prop.`
[ty-infer] declare mvalid: (ι → prop) → prop
[ty-infer]
    infer types for statement `val [name a1_type] a1 : ι → (ι → prop).`
[ty-infer] declare a1: ι → ι → prop
[ty-infer]
    infer types for statement `val [name a2_type] a2 : ι → (ι → prop).`
[ty-infer] declare a2: ι → ι → prop
[ty-infer]
    infer types for statement `val [name a3_type] a3 : ι → (ι → prop).`
[ty-infer] declare a3: ι → ι → prop
[ty-infer] infer types for statement `val [name jan_type] jan : mu.`
[ty-infer] unify types `type` and `type`
[ty-infer] declare jan: mu
[ty-infer] infer types for statement `val [name piotr_type] piotr : mu.`
[ty-infer] unify types `type` and `type`
[ty-infer] declare piotr: mu
[ty-infer] infer types for statement `val [name cola_type] cola : mu.`
[ty-infer] unify types `type` and `type`
[ty-infer] declare cola: mu
[ty-infer] infer types for statement `val [name pepsi_type] pepsi : mu.`
[ty-infer] unify types `type` and `type`
[ty-infer] declare pepsi: mu
[ty-infer] infer types for statement `val [name beer_type] beer : mu.`
[ty-infer] unify types `type` and `type`
[ty-infer] declare beer: mu
[ty-infer]
    infer types for statement
      `val [name likes_type] likes : mu → (mu → (ι → prop)).`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] declare likes: mu → mu → ι → prop
[ty-infer]
    infer types for statement
      `val [name very_much_likes_type] very_much_likes :
         mu → (mu → (ι → prop)).`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] declare very_much_likes: mu → mu → ι → prop
[ty-infer]
    infer types for statement
      `val [name possibly_likes_type] possibly_likes :
         mu → (mu → (ι → prop)).`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] declare possibly_likes: mu → mu → ι → prop
[ty-infer]
    infer types for statement
      `assert [name 56]
         ∀ A:ι B:mu C:mu.
           (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (likes B C D)))
           ∨ (possibly_likes B C A).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu.
         (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (likes B C D)))
         ∨ (possibly_likes B C A)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/23` : `ι`
[ty-infer] typing of `D` yields `D/26` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/23, D/26]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/23, D/26]
[ty-infer] typing of `a3 A D` yields `a3 A/23 D/26` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A D)` yields `¬ (a3 A/23 D/26)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/24` : `mu`
[ty-infer] typing of `C` yields `C/25` : `mu`
[ty-infer] typing of `D` yields `D/26` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/24, C/25, D/26]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/24, C/25, D/26]
[ty-infer]
    typing of `likes B C D` yields `likes B/24 C/25 D/26` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B C D)` yields `¬ (likes B/24 C/25 D/26)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A D)) ∨ (¬ (likes B C D))`
    yields `(¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a3 A D)) ∨ (¬ (likes B C D))`
    yields `∀ D/26. ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/24` : `mu`
[ty-infer] typing of `C` yields `C/25` : `mu`
[ty-infer] typing of `A` yields `A/23` : `ι`
[ty-infer]
    apply possibly_likes:mu → mu → ι → prop
      to [B/24, C/25, A/23]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/24, C/25, A/23]
[ty-infer]
    typing of `possibly_likes B C A`
    yields `possibly_likes B/24 C/25 A/23` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(∀ D:ι. (¬ (a3 A D)) ∨ (¬ (likes B C D)))
               ∨ (possibly_likes B C A)`
    yields `(possibly_likes B/24 C/25 A/23)
            ∨ (∀ D/26.
                   ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu.
                 (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (likes B C D)))
                 ∨ (possibly_likes B C A)`
    yields `∀ A/23 B/24:mu C/25:mu.
              ((possibly_likes B/24 C/25 A/23)
               ∨ (∀ D/26.
                      ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 37] ∀ A:ι B:ι. (¬ (a2 A B)) ∨ (likes jan pepsi B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a2 A B)) ∨ (likes jan pepsi B)`
[ty-infer] typing of `A` yields `A/27` : `ι`
[ty-infer] typing of `B` yields `B/28` : `ι`
[ty-infer] apply a2:ι → ι → prop to [A/27, B/28]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/27, B/28]
[ty-infer] typing of `a2 A B` yields `a2 A/27 B/28` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a2 A B)` yields `¬ (a2 A/27 B/28)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `jan` yields `jan` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `B` yields `B/28` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [jan, pepsi, B/28]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [jan, pepsi, B/28]
[ty-infer]
    typing of `likes jan pepsi B` yields `likes jan pepsi B/28` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a2 A B)) ∨ (likes jan pepsi B)`
    yields `(likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a2 A B)) ∨ (likes jan pepsi B)`
    yields `∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 25] ∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr cola B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr cola B)`
[ty-infer] typing of `A` yields `A/29` : `ι`
[ty-infer] typing of `B` yields `B/30` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/29, B/30]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/29, B/30]
[ty-infer] typing of `a1 A B` yields `a1 A/29 B/30` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A B)` yields `¬ (a1 A/29 B/30)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `piotr` yields `piotr` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `B` yields `B/30` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [piotr, cola, B/30]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [piotr, cola, B/30]
[ty-infer]
    typing of `likes piotr cola B` yields `likes piotr cola B/30` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A B)) ∨ (likes piotr cola B)`
    yields `(likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr cola B)`
    yields `∀ A/29 B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 29]
         ∀ A:ι B:mu C:ι.
           (¬ (a2 A C)) ∨ (¬ (likes B pepsi C)) ∨ (likes B cola C).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:ι.
         (¬ (a2 A C)) ∨ (¬ (likes B pepsi C)) ∨ (likes B cola C)`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/31` : `ι`
[ty-infer] typing of `C` yields `C/33` : `ι`
[ty-infer] apply a2:ι → ι → prop to [A/31, C/33]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/31, C/33]
[ty-infer] typing of `a2 A C` yields `a2 A/31 C/33` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a2 A C)` yields `¬ (a2 A/31 C/33)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/32` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `C` yields `C/33` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/32, pepsi, C/33]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/32, pepsi, C/33]
[ty-infer]
    typing of `likes B pepsi C` yields `likes B/32 pepsi C/33` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B pepsi C)`
    yields `¬ (likes B/32 pepsi C/33)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/32` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `C` yields `C/33` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/32, cola, C/33]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/32, cola, C/33]
[ty-infer]
    typing of `likes B cola C` yields `likes B/32 cola C/33` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a2 A C)) ∨ (¬ (likes B pepsi C)) ∨ (likes B cola C)`
    yields `(likes B/32 cola C/33)
            ∨ (¬ (likes B/32 pepsi C/33))
            ∨ (¬ (a2 A/31 C/33))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:ι.
                 (¬ (a2 A C))
                 ∨ (¬ (likes B pepsi C)) ∨ (likes B cola C)`
    yields `∀ A/31 B/32:mu C/33.
              ((likes B/32 cola C/33)
               ∨ (¬ (likes B/32 pepsi C/33))
               ∨ (¬ (a2 A/31 C/33)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 60]
         ∀ A:ι B:mu C:mu.
           (¬ (∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D)))
           ∨ (very_much_likes B C A).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu.
         (¬ (∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D)))
         ∨ (very_much_likes B C A)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/34` : `ι`
[ty-infer] typing of `D` yields `D/37` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/34, D/37]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/34, D/37]
[ty-infer] typing of `a3 A D` yields `a3 A/34 D/37` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A D)` yields `¬ (a3 A/34 D/37)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/35` : `mu`
[ty-infer] typing of `C` yields `C/36` : `mu`
[ty-infer] typing of `D` yields `D/37` : `ι`
[ty-infer]
    apply very_much_likes:mu → mu → ι → prop
      to [B/35, C/36, D/37]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/35, C/36, D/37]
[ty-infer]
    typing of `very_much_likes B C D`
    yields `very_much_likes B/35 C/36 D/37` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A D)) ∨ (very_much_likes B C D)`
    yields `(very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D)`
    yields `∀ D/37.
              ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D))`
    yields `¬ (∀ D/37.
                  ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/35` : `mu`
[ty-infer] typing of `C` yields `C/36` : `mu`
[ty-infer] typing of `A` yields `A/34` : `ι`
[ty-infer]
    apply very_much_likes:mu → mu → ι → prop
      to [B/35, C/36, A/34]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/35, C/36, A/34]
[ty-infer]
    typing of `very_much_likes B C A`
    yields `very_much_likes B/35 C/36 A/34` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D)))
               ∨ (very_much_likes B C A)`
    yields `(very_much_likes B/35 C/36 A/34)
            ∨ (¬ (∀ D/37.
                       ((very_much_likes B/35 C/36 D/37)
                        ∨ (¬ (a3 A/34 D/37)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu.
                 (¬ (∀ D:ι. (¬ (a3 A D)) ∨ (very_much_likes B C D)))
                 ∨ (very_much_likes B C A)`
    yields `∀ A/34 B/35:mu C/36:mu.
              ((very_much_likes B/35 C/36 A/34)
               ∨ (¬ (∀ D/37.
                          ((very_much_likes B/35 C/36 D/37)
                           ∨ (¬ (a3 A/34 D/37))))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `goal [name 2] ¬ (¬ (mvalid (likes jan cola))).`
[ty-infer] infer type of `¬ (¬ (mvalid (likes jan cola)))`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `jan` yields `jan` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] apply likes:mu → mu → ι → prop to [jan, cola]:[mu, mu]
[typedSTerm] apply `mu → mu → ι → prop` to [jan, cola]
[ty-infer]
    typing of `likes jan cola` yields `likes jan cola` : `ι → prop`
[ty-infer]
    apply mvalid:(ι → prop) → prop to [likes jan cola]:[ι → prop]
[typedSTerm] apply `(ι → prop) → prop` to [likes jan cola]
[ty-infer]
    typing of `mvalid (likes jan cola)`
    yields `mvalid (likes jan cola)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (mvalid (likes jan cola))`
    yields `¬ (mvalid (likes jan cola))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (¬ (mvalid (likes jan cola)))`
    yields `mvalid (likes jan cola)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 21] ¬ (∀ A:ι. likes jan cola A).`
[ty-infer] infer type of `¬ (∀ A:ι. likes jan cola A)`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `jan` yields `jan` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `A` yields `A/38` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [jan, cola, A/38]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [jan, cola, A/38]
[ty-infer]
    typing of `likes jan cola A` yields `likes jan cola A/38` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι. likes jan cola A`
    yields `∀ A/38. (likes jan cola A/38)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ A:ι. likes jan cola A)`
    yields `¬ (∀ A/38. (likes jan cola A/38))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 33]
         ∀ A:ι. ¬ (∀ B:ι. (¬ (a1 A B)) ∨ (¬ (likes piotr beer B))).`
[ty-infer]
    infer type of
      `∀ A:ι. ¬ (∀ B:ι. (¬ (a1 A B)) ∨ (¬ (likes piotr beer B)))`
[ty-infer] typing of `A` yields `A/39` : `ι`
[ty-infer] typing of `B` yields `B/40` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/39, B/40]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/39, B/40]
[ty-infer] typing of `a1 A B` yields `a1 A/39 B/40` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A B)` yields `¬ (a1 A/39 B/40)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `piotr` yields `piotr` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `beer` yields `beer` : `mu`
[ty-infer] typing of `B` yields `B/40` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [piotr, beer, B/40]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [piotr, beer, B/40]
[ty-infer]
    typing of `likes piotr beer B` yields `likes piotr beer B/40` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes piotr beer B)`
    yields `¬ (likes piotr beer B/40)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A B)) ∨ (¬ (likes piotr beer B))`
    yields `(¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ B:ι. (¬ (a1 A B)) ∨ (¬ (likes piotr beer B))`
    yields `∀ B/40. ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ B:ι. (¬ (a1 A B)) ∨ (¬ (likes piotr beer B)))`
    yields `¬ (∀ B/40.
                  ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι.
                 ¬ (∀ B:ι. (¬ (a1 A B)) ∨ (¬ (likes piotr beer B)))`
    yields `∀ A/39.
              (¬ (∀ B/40.
                     ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 65] ∀ A:ι B:ι. (¬ (a3 A B)) ∨ (likes jan cola B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a3 A B)) ∨ (likes jan cola B)`
[ty-infer] typing of `A` yields `A/41` : `ι`
[ty-infer] typing of `B` yields `B/42` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/41, B/42]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/41, B/42]
[ty-infer] typing of `a3 A B` yields `a3 A/41 B/42` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A B)` yields `¬ (a3 A/41 B/42)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `jan` yields `jan` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `B` yields `B/42` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [jan, cola, B/42]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [jan, cola, B/42]
[ty-infer]
    typing of `likes jan cola B` yields `likes jan cola B/42` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A B)) ∨ (likes jan cola B)`
    yields `(likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a3 A B)) ∨ (likes jan cola B)`
    yields `∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 41]
         ∀ A:ι B:mu C:mu.
           (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (very_much_likes B C D)))
           ∨ (likes B C A).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu.
         (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (very_much_likes B C D)))
         ∨ (likes B C A)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/43` : `ι`
[ty-infer] typing of `D` yields `D/46` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/43, D/46]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/43, D/46]
[ty-infer] typing of `a3 A D` yields `a3 A/43 D/46` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A D)` yields `¬ (a3 A/43 D/46)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/44` : `mu`
[ty-infer] typing of `C` yields `C/45` : `mu`
[ty-infer] typing of `D` yields `D/46` : `ι`
[ty-infer]
    apply very_much_likes:mu → mu → ι → prop
      to [B/44, C/45, D/46]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/44, C/45, D/46]
[ty-infer]
    typing of `very_much_likes B C D`
    yields `very_much_likes B/44 C/45 D/46` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (very_much_likes B C D)`
    yields `¬ (very_much_likes B/44 C/45 D/46)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A D)) ∨ (¬ (very_much_likes B C D))`
    yields `(¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a3 A D)) ∨ (¬ (very_much_likes B C D))`
    yields `∀ D/46.
              ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/44` : `mu`
[ty-infer] typing of `C` yields `C/45` : `mu`
[ty-infer] typing of `A` yields `A/43` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/44, C/45, A/43]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/44, C/45, A/43]
[ty-infer]
    typing of `likes B C A` yields `likes B/44 C/45 A/43` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(∀ D:ι. (¬ (a3 A D)) ∨ (¬ (very_much_likes B C D)))
               ∨ (likes B C A)`
    yields `(likes B/44 C/45 A/43)
            ∨ (∀ D/46.
                   ((¬ (very_much_likes B/44 C/45 D/46))
                    ∨ (¬ (a3 A/43 D/46))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu.
                 (∀ D:ι. (¬ (a3 A D)) ∨ (¬ (very_much_likes B C D)))
                 ∨ (likes B C A)`
    yields `∀ A/43 B/44:mu C/45:mu.
              ((likes B/44 C/45 A/43)
               ∨ (∀ D/46.
                      ((¬ (very_much_likes B/44 C/45 D/46))
                       ∨ (¬ (a3 A/43 D/46)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 45]
         ∀ A:ι B:mu C:mu D:ι.
           (¬ (a3 A D))
           ∨
           (¬ (likes B C D))
           ∨
           (¬ (∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E)))
           ∨
           (¬ (∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E)))
           ∨ (very_much_likes B C D).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu D:ι.
         (¬ (a3 A D))
         ∨
         (¬ (likes B C D))
         ∨
         (¬ (∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E)))
         ∨
         (¬ (∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E)))
         ∨ (very_much_likes B C D)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/47` : `ι`
[ty-infer] typing of `D` yields `D/50` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/47, D/50]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/47, D/50]
[ty-infer] typing of `a3 A D` yields `a3 A/47 D/50` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A D)` yields `¬ (a3 A/47 D/50)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/48` : `mu`
[ty-infer] typing of `C` yields `C/49` : `mu`
[ty-infer] typing of `D` yields `D/50` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/48, C/49, D/50]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/48, C/49, D/50]
[ty-infer]
    typing of `likes B C D` yields `likes B/48 C/49 D/50` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B C D)` yields `¬ (likes B/48 C/49 D/50)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `D` yields `D/50` : `ι`
[ty-infer] typing of `E` yields `E/51` : `ι`
[ty-infer] apply a1:ι → ι → prop to [D/50, E/51]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [D/50, E/51]
[ty-infer] typing of `a1 D E` yields `a1 D/50 E/51` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 D E)` yields `¬ (a1 D/50 E/51)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/48` : `mu`
[ty-infer] typing of `C` yields `C/49` : `mu`
[ty-infer] typing of `E` yields `E/51` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/48, C/49, E/51]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/48, C/49, E/51]
[ty-infer]
    typing of `likes B C E` yields `likes B/48 C/49 E/51` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 D E)) ∨ (likes B C E)`
    yields `(likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E)`
    yields `∀ E/51. ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E))`
    yields `¬ (∀ E/51. ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `D` yields `D/50` : `ι`
[ty-infer] typing of `E` yields `E/52` : `ι`
[ty-infer] apply a2:ι → ι → prop to [D/50, E/52]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [D/50, E/52]
[ty-infer] typing of `a2 D E` yields `a2 D/50 E/52` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a2 D E)` yields `¬ (a2 D/50 E/52)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/48` : `mu`
[ty-infer] typing of `C` yields `C/49` : `mu`
[ty-infer] typing of `E` yields `E/52` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/48, C/49, E/52]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/48, C/49, E/52]
[ty-infer]
    typing of `likes B C E` yields `likes B/48 C/49 E/52` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a2 D E)) ∨ (likes B C E)`
    yields `(likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E)`
    yields `∀ E/52. ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E))`
    yields `¬ (∀ E/52. ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/48` : `mu`
[ty-infer] typing of `C` yields `C/49` : `mu`
[ty-infer] typing of `D` yields `D/50` : `ι`
[ty-infer]
    apply very_much_likes:mu → mu → ι → prop
      to [B/48, C/49, D/50]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/48, C/49, D/50]
[ty-infer]
    typing of `very_much_likes B C D`
    yields `very_much_likes B/48 C/49 D/50` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A D))
               ∨
               (¬ (likes B C D))
               ∨
               (¬ (∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E)))
               ∨
               (¬ (∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E)))
               ∨ (very_much_likes B C D)`
    yields `(very_much_likes B/48 C/49 D/50)
            ∨ (¬ (∀ E/52.
                       ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))))
            ∨ (¬ (∀ E/51.
                       ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))))
            ∨ (¬ (likes B/48 C/49 D/50))
            ∨ (¬ (a3 A/47 D/50))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu D:ι.
                 (¬ (a3 A D))
                 ∨
                 (¬ (likes B C D))
                 ∨
                 (¬ (∀ E:ι. (¬ (a1 D E)) ∨ (likes B C E)))
                 ∨
                 (¬ (∀ E:ι. (¬ (a2 D E)) ∨ (likes B C E)))
                 ∨ (very_much_likes B C D)`
    yields `∀ A/47 B/48:mu C/49:mu D/50.
              ((very_much_likes B/48 C/49 D/50)
               ∨ (¬ (∀ E/52.
                          ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))))
               ∨ (¬ (∀ E/51.
                          ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))))
               ∨ (¬ (likes B/48 C/49 D/50))
               ∨ (¬ (a3 A/47 D/50)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 27] ∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr beer B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr beer B)`
[ty-infer] typing of `A` yields `A/53` : `ι`
[ty-infer] typing of `B` yields `B/54` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/53, B/54]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/53, B/54]
[ty-infer] typing of `a1 A B` yields `a1 A/53 B/54` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A B)` yields `¬ (a1 A/53 B/54)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `piotr` yields `piotr` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `beer` yields `beer` : `mu`
[ty-infer] typing of `B` yields `B/54` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [piotr, beer, B/54]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [piotr, beer, B/54]
[ty-infer]
    typing of `likes piotr beer B` yields `likes piotr beer B/54` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A B)) ∨ (likes piotr beer B)`
    yields `(likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr beer B)`
    yields `∀ A/53 B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 54]
         ∀ A:ι B:mu C:ι.
           (¬ (a1 A C))
           ∨
           (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B pepsi D)))
           ∨ (likes B cola C).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:ι.
         (¬ (a1 A C))
         ∨
         (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B pepsi D)))
         ∨ (likes B cola C)`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/55` : `ι`
[ty-infer] typing of `C` yields `C/57` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/55, C/57]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/55, C/57]
[ty-infer] typing of `a1 A C` yields `a1 A/55 C/57` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A C)` yields `¬ (a1 A/55 C/57)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `C` yields `C/57` : `ι`
[ty-infer] typing of `D` yields `D/58` : `ι`
[ty-infer] apply a1:ι → ι → prop to [C/57, D/58]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [C/57, D/58]
[ty-infer] typing of `a1 C D` yields `a1 C/57 D/58` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 C D)` yields `¬ (a1 C/57 D/58)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/56` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `D` yields `D/58` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/56, pepsi, D/58]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/56, pepsi, D/58]
[ty-infer]
    typing of `likes B pepsi D` yields `likes B/56 pepsi D/58` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B pepsi D)`
    yields `¬ (likes B/56 pepsi D/58)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 C D)) ∨ (¬ (likes B pepsi D))`
    yields `(¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B pepsi D))`
    yields `∀ D/58. ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/56` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `C` yields `C/57` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/56, cola, C/57]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/56, cola, C/57]
[ty-infer]
    typing of `likes B cola C` yields `likes B/56 cola C/57` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A C))
               ∨
               (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B pepsi D)))
               ∨ (likes B cola C)`
    yields `(likes B/56 cola C/57)
            ∨ (∀ D/58.
                   ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
            ∨ (¬ (a1 A/55 C/57))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:ι.
                 (¬ (a1 A C))
                 ∨
                 (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B pepsi D)))
                 ∨ (likes B cola C)`
    yields `∀ A/55 B/56:mu C/57.
              ((likes B/56 cola C/57)
               ∨ (∀ D/58.
                      ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
               ∨ (¬ (a1 A/55 C/57)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 39]
         ∀ A:ι B:mu C:ι.
           (¬ (a2 A C)) ∨ (¬ (likes B cola C)) ∨ (likes B pepsi C).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:ι.
         (¬ (a2 A C)) ∨ (¬ (likes B cola C)) ∨ (likes B pepsi C)`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/59` : `ι`
[ty-infer] typing of `C` yields `C/61` : `ι`
[ty-infer] apply a2:ι → ι → prop to [A/59, C/61]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/59, C/61]
[ty-infer] typing of `a2 A C` yields `a2 A/59 C/61` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a2 A C)` yields `¬ (a2 A/59 C/61)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/60` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `C` yields `C/61` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/60, cola, C/61]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/60, cola, C/61]
[ty-infer]
    typing of `likes B cola C` yields `likes B/60 cola C/61` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B cola C)`
    yields `¬ (likes B/60 cola C/61)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/60` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `C` yields `C/61` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/60, pepsi, C/61]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/60, pepsi, C/61]
[ty-infer]
    typing of `likes B pepsi C` yields `likes B/60 pepsi C/61` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a2 A C)) ∨ (¬ (likes B cola C)) ∨ (likes B pepsi C)`
    yields `(likes B/60 pepsi C/61)
            ∨ (¬ (likes B/60 cola C/61))
            ∨ (¬ (a2 A/59 C/61))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:ι.
                 (¬ (a2 A C))
                 ∨ (¬ (likes B cola C)) ∨ (likes B pepsi C)`
    yields `∀ A/59 B/60:mu C/61.
              ((likes B/60 pepsi C/61)
               ∨ (¬ (likes B/60 cola C/61))
               ∨ (¬ (a2 A/59 C/61)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 63]
         ∀ A:ι B:mu C:mu.
           (∀ D:ι. (¬ (a1 A D)) ∨ (¬ (likes B C D)))
           ∨ (possibly_likes B C A).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu.
         (∀ D:ι. (¬ (a1 A D)) ∨ (¬ (likes B C D)))
         ∨ (possibly_likes B C A)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/62` : `ι`
[ty-infer] typing of `D` yields `D/65` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/62, D/65]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/62, D/65]
[ty-infer] typing of `a1 A D` yields `a1 A/62 D/65` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A D)` yields `¬ (a1 A/62 D/65)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/63` : `mu`
[ty-infer] typing of `C` yields `C/64` : `mu`
[ty-infer] typing of `D` yields `D/65` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/63, C/64, D/65]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/63, C/64, D/65]
[ty-infer]
    typing of `likes B C D` yields `likes B/63 C/64 D/65` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B C D)` yields `¬ (likes B/63 C/64 D/65)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A D)) ∨ (¬ (likes B C D))`
    yields `(¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a1 A D)) ∨ (¬ (likes B C D))`
    yields `∀ D/65. ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/63` : `mu`
[ty-infer] typing of `C` yields `C/64` : `mu`
[ty-infer] typing of `A` yields `A/62` : `ι`
[ty-infer]
    apply possibly_likes:mu → mu → ι → prop
      to [B/63, C/64, A/62]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/63, C/64, A/62]
[ty-infer]
    typing of `possibly_likes B C A`
    yields `possibly_likes B/63 C/64 A/62` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(∀ D:ι. (¬ (a1 A D)) ∨ (¬ (likes B C D)))
               ∨ (possibly_likes B C A)`
    yields `(possibly_likes B/63 C/64 A/62)
            ∨ (∀ D/65.
                   ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu.
                 (∀ D:ι. (¬ (a1 A D)) ∨ (¬ (likes B C D)))
                 ∨ (possibly_likes B C A)`
    yields `∀ A/62 B/63:mu C/64:mu.
              ((possibly_likes B/63 C/64 A/62)
               ∨ (∀ D/65.
                      ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 50]
         ∀ A:ι.
           ¬ (∀ B:ι. (¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B))).`
[ty-infer]
    infer type of
      `∀ A:ι. ¬ (∀ B:ι. (¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B)))`
[ty-infer] typing of `A` yields `A/66` : `ι`
[ty-infer] typing of `B` yields `B/67` : `ι`
[ty-infer] apply a3:ι → ι → prop to [A/66, B/67]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/66, B/67]
[ty-infer] typing of `a3 A B` yields `a3 A/66 B/67` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a3 A B)` yields `¬ (a3 A/66 B/67)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `piotr` yields `piotr` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `B` yields `B/67` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop
      to [piotr, pepsi, B/67]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [piotr, pepsi, B/67]
[ty-infer]
    typing of `likes piotr pepsi B` yields `likes piotr pepsi B/67` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes piotr pepsi B)`
    yields `¬ (likes piotr pepsi B/67)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B))`
    yields `(¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ B:ι. (¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B))`
    yields `∀ B/67. ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (∀ B:ι. (¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B)))`
    yields `¬ (∀ B/67.
                  ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι.
                 ¬ (∀ B:ι. (¬ (a3 A B)) ∨ (¬ (likes piotr pepsi B)))`
    yields `∀ A/66.
              (¬ (∀ B/67.
                     ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 31]
         ∀ A:ι B:mu C:ι.
           (¬ (a1 A C))
           ∨
           (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B cola D)))
           ∨ (likes B pepsi C).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:ι.
         (¬ (a1 A C))
         ∨
         (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B cola D)))
         ∨ (likes B pepsi C)`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/68` : `ι`
[ty-infer] typing of `C` yields `C/70` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/68, C/70]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/68, C/70]
[ty-infer] typing of `a1 A C` yields `a1 A/68 C/70` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A C)` yields `¬ (a1 A/68 C/70)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `C` yields `C/70` : `ι`
[ty-infer] typing of `D` yields `D/71` : `ι`
[ty-infer] apply a1:ι → ι → prop to [C/70, D/71]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [C/70, D/71]
[ty-infer] typing of `a1 C D` yields `a1 C/70 D/71` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 C D)` yields `¬ (a1 C/70 D/71)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/69` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `D` yields `D/71` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/69, cola, D/71]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/69, cola, D/71]
[ty-infer]
    typing of `likes B cola D` yields `likes B/69 cola D/71` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B cola D)`
    yields `¬ (likes B/69 cola D/71)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 C D)) ∨ (¬ (likes B cola D))`
    yields `(¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B cola D))`
    yields `∀ D/71. ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/69` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `C` yields `C/70` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/69, pepsi, C/70]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/69, pepsi, C/70]
[ty-infer]
    typing of `likes B pepsi C` yields `likes B/69 pepsi C/70` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A C))
               ∨
               (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B cola D)))
               ∨ (likes B pepsi C)`
    yields `(likes B/69 pepsi C/70)
            ∨ (∀ D/71.
                   ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
            ∨ (¬ (a1 A/68 C/70))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:ι.
                 (¬ (a1 A C))
                 ∨
                 (∀ D:ι. (¬ (a1 C D)) ∨ (¬ (likes B cola D)))
                 ∨ (likes B pepsi C)`
    yields `∀ A/68 B/69:mu C/70.
              ((likes B/69 pepsi C/70)
               ∨ (∀ D/71.
                      ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
               ∨ (¬ (a1 A/68 C/70)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 43]
         ∀ A:ι B:mu C:mu.
           (∀ D:ι. (¬ (a2 A D)) ∨ (¬ (likes B C D)))
           ∨ (possibly_likes B C A).`
[ty-infer]
    infer type of
      `∀ A:ι B:mu C:mu.
         (∀ D:ι. (¬ (a2 A D)) ∨ (¬ (likes B C D)))
         ∨ (possibly_likes B C A)`
[ty-infer] unify types `type` and `type`
[ty-infer] unify types `type` and `type`
[ty-infer] typing of `A` yields `A/72` : `ι`
[ty-infer] typing of `D` yields `D/75` : `ι`
[ty-infer] apply a2:ι → ι → prop to [A/72, D/75]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/72, D/75]
[ty-infer] typing of `a2 A D` yields `a2 A/72 D/75` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a2 A D)` yields `¬ (a2 A/72 D/75)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/73` : `mu`
[ty-infer] typing of `C` yields `C/74` : `mu`
[ty-infer] typing of `D` yields `D/75` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [B/73, C/74, D/75]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/73, C/74, D/75]
[ty-infer]
    typing of `likes B C D` yields `likes B/73 C/74 D/75` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `¬ (likes B C D)` yields `¬ (likes B/73 C/74 D/75)` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a2 A D)) ∨ (¬ (likes B C D))`
    yields `(¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ D:ι. (¬ (a2 A D)) ∨ (¬ (likes B C D))`
    yields `∀ D/75. ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `B` yields `B/73` : `mu`
[ty-infer] typing of `C` yields `C/74` : `mu`
[ty-infer] typing of `A` yields `A/72` : `ι`
[ty-infer]
    apply possibly_likes:mu → mu → ι → prop
      to [B/73, C/74, A/72]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [B/73, C/74, A/72]
[ty-infer]
    typing of `possibly_likes B C A`
    yields `possibly_likes B/73 C/74 A/72` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(∀ D:ι. (¬ (a2 A D)) ∨ (¬ (likes B C D)))
               ∨ (possibly_likes B C A)`
    yields `(possibly_likes B/73 C/74 A/72)
            ∨ (∀ D/75.
                   ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:mu C:mu.
                 (∀ D:ι. (¬ (a2 A D)) ∨ (¬ (likes B C D)))
                 ∨ (possibly_likes B C A)`
    yields `∀ A/72 B/73:mu C/74:mu.
              ((possibly_likes B/73 C/74 A/72)
               ∨ (∀ D/75.
                      ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 23]
         ∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr pepsi B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr pepsi B)`
[ty-infer] typing of `A` yields `A/76` : `ι`
[ty-infer] typing of `B` yields `B/77` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/76, B/77]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/76, B/77]
[ty-infer] typing of `a1 A B` yields `a1 A/76 B/77` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A B)` yields `¬ (a1 A/76 B/77)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `piotr` yields `piotr` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `pepsi` yields `pepsi` : `mu`
[ty-infer] typing of `B` yields `B/77` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop
      to [piotr, pepsi, B/77]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [piotr, pepsi, B/77]
[ty-infer]
    typing of `likes piotr pepsi B` yields `likes piotr pepsi B/77` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A B)) ∨ (likes piotr pepsi B)`
    yields `(likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes piotr pepsi B)`
    yields `∀ A/76 B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    infer types for statement
      `assert [name 58] ∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes jan cola B).`
[ty-infer]
    infer type of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes jan cola B)`
[ty-infer] typing of `A` yields `A/78` : `ι`
[ty-infer] typing of `B` yields `B/79` : `ι`
[ty-infer] apply a1:ι → ι → prop to [A/78, B/79]:[ι, ι]
[typedSTerm] apply `ι → ι → prop` to [A/78, B/79]
[ty-infer] typing of `a1 A B` yields `a1 A/78 B/79` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer] typing of `¬ (a1 A B)` yields `¬ (a1 A/78 B/79)` : `prop`
[ty-infer] unify types `prop` and `prop`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `jan` yields `jan` : `mu`
[typedSTerm] apply `mu` to []
[ty-infer] typing of `cola` yields `cola` : `mu`
[ty-infer] typing of `B` yields `B/79` : `ι`
[ty-infer]
    apply likes:mu → mu → ι → prop to [jan, cola, B/79]:[mu, mu, ι]
[typedSTerm] apply `mu → mu → ι → prop` to [jan, cola, B/79]
[ty-infer]
    typing of `likes jan cola B` yields `likes jan cola B/79` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `(¬ (a1 A B)) ∨ (likes jan cola B)`
    yields `(likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))` : `prop`
[ty-infer] unify types `prop` and `prop`
[ty-infer]
    typing of `∀ A:ι B:ι. (¬ (a1 A B)) ∨ (likes jan cola B)`
    yields `∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79)))`
             : `prop`
[ty-infer] unify types `prop` and `prop`
[zip]
    typed statements
      val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type., 
      val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
        (ι → prop) → (ι → prop) → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
        (ι → prop) → (ι → prop) → ι → prop., 
      val
        [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
        (mu → ι → prop) → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
        (ι → ι → prop) → (ι → prop) → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
        (ι → ι → prop) → (ι → prop) → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
        (ι → prop) → prop., 
      val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
        ι → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
        ι → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
        ι → ι → prop., 
      val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu., 
      val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu., 
      val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu., 
      val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu., 
      val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu., 
      val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
        mu → mu → ι → prop., 
      val
        [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
        mu → mu → ι → prop., 
      val
        [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
        mu → mu → ι → prop., 
      assert [file "../hoe.extra/tests/agt035.p" "56"]
        ∀ A/23 B/24:mu C/25:mu.
          ((possibly_likes B/24 C/25 A/23)
           ∨ (∀ D/26.
                  ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "37"]
        ∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))., 
      assert [file "../hoe.extra/tests/agt035.p" "25"]
        ∀ A/29 B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))., 
      assert [file "../hoe.extra/tests/agt035.p" "29"]
        ∀ A/31 B/32:mu C/33.
          ((likes B/32 cola C/33)
           ∨ (¬ (likes B/32 pepsi C/33))
           ∨ (¬ (a2 A/31 C/33)))., 
      assert [file "../hoe.extra/tests/agt035.p" "60"]
        ∀ A/34 B/35:mu C/36:mu.
          ((very_much_likes B/35 C/36 A/34)
           ∨ (¬ (∀ D/37.
                      ((very_much_likes B/35 C/36 D/37)
                       ∨ (¬ (a3 A/34 D/37))))))., 
      goal [file "../hoe.extra/tests/agt035.p" "2"] mvalid (likes jan cola)., 
      assert [file "../hoe.extra/tests/agt035.p" "21"]
        ¬ (∀ A/38. (likes jan cola A/38))., 
      assert [file "../hoe.extra/tests/agt035.p" "33"]
        ∀ A/39.
          (¬ (∀ B/40.
                 ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "65"]
        ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))., 
      assert [file "../hoe.extra/tests/agt035.p" "41"]
        ∀ A/43 B/44:mu C/45:mu.
          ((likes B/44 C/45 A/43)
           ∨ (∀ D/46.
                  ((¬ (very_much_likes B/44 C/45 D/46))
                   ∨ (¬ (a3 A/43 D/46)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "45"]
        ∀ A/47 B/48:mu C/49:mu D/50.
          ((very_much_likes B/48 C/49 D/50)
           ∨ (¬ (∀ E/52.
                      ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))))
           ∨ (¬ (∀ E/51.
                      ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))))
           ∨ (¬ (likes B/48 C/49 D/50))
           ∨ (¬ (a3 A/47 D/50)))., 
      assert [file "../hoe.extra/tests/agt035.p" "27"]
        ∀ A/53 B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))., 
      assert [file "../hoe.extra/tests/agt035.p" "54"]
        ∀ A/55 B/56:mu C/57.
          ((likes B/56 cola C/57)
           ∨ (∀ D/58.
                  ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
           ∨ (¬ (a1 A/55 C/57)))., 
      assert [file "../hoe.extra/tests/agt035.p" "39"]
        ∀ A/59 B/60:mu C/61.
          ((likes B/60 pepsi C/61)
           ∨ (¬ (likes B/60 cola C/61))
           ∨ (¬ (a2 A/59 C/61)))., 
      assert [file "../hoe.extra/tests/agt035.p" "63"]
        ∀ A/62 B/63:mu C/64:mu.
          ((possibly_likes B/63 C/64 A/62)
           ∨ (∀ D/65.
                  ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "50"]
        ∀ A/66.
          (¬ (∀ B/67.
                 ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "31"]
        ∀ A/68 B/69:mu C/70.
          ((likes B/69 pepsi C/70)
           ∨ (∀ D/71.
                  ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
           ∨ (¬ (a1 A/68 C/70)))., 
      assert [file "../hoe.extra/tests/agt035.p" "43"]
        ∀ A/72 B/73:mu C/74:mu.
          ((possibly_likes B/73 C/74 A/72)
           ∨ (∀ D/75.
                  ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))., 
      assert [file "../hoe.extra/tests/agt035.p" "23"]
        ∀ A/76 B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))., 
      assert [file "../hoe.extra/tests/agt035.p" "58"]
        ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))).
[zip.int-arith] decision to register arith: false
[zip.rat-arith] decision to register rat-arith: false
[zip] terminate phase typing
[zip] parsed 38 declarations (some goal(s))
[zip] start phase cnf
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type.`
      into `val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
               ((ι → prop) → (ι → prop) → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
              ((ι → prop) → (ι → prop) → ι → prop).`
[cnf]
    flatten `val
               [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
               ((ι → prop) → (ι → prop) → ι → prop).`
      into `val
              [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
              ((ι → prop) → (ι → prop) → ι → prop).`
[cnf]
    flatten `val
               [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
               ((mu → ι → prop) → ι → prop).`
      into `val
              [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
              ((mu → ι → prop) → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
               ((ι → ι → prop) → (ι → prop) → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
              ((ι → ι → prop) → (ι → prop) → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
               ((ι → ι → prop) → (ι → prop) → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
              ((ι → ι → prop) → (ι → prop) → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
               ((ι → prop) → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
              ((ι → prop) → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
               (ι → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
              (ι → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
               (ι → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
              (ι → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
               (ι → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
              (ι → ι → prop).`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu.`
      into `val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu.`
      into `val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu.`
      into `val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu.`
      into `val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu.`
      into `val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu.`
[cnf]
    flatten `val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
               (mu → mu → ι → prop).`
      into `val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
              (mu → mu → ι → prop).`
[cnf]
    flatten `val
               [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
               (mu → mu → ι → prop).`
      into `val
              [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
              (mu → mu → ι → prop).`
[cnf]
    flatten `val
               [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
               (mu → mu → ι → prop).`
      into `val
              [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
              (mu → mu → ι → prop).`
[cnf]
    flatten_rec
      `(possibly_likes B/24 C/25 A/23)
       ∨ (∀ D/26. ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))))`
      vars: (A/23, B/24, C/25)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "56"]
               ∀ A/23 B/24:mu C/25:mu.
                 ((possibly_likes B/24 C/25 A/23)
                  ∨ (∀ D/26.
                         ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "56"]
              ∀ A/23 B/24:mu C/25:mu.
                ((∀ D/26.
                    ((¬ (a3 A/23 D/26)) ∨ (¬ (likes B/24 C/25 D/26))))
                 ∨ (possibly_likes B/24 C/25 A/23)).`
[cnf]
    simplify and rename
      `∀ A/23 B/24:mu C/25:mu.
         ((∀ D/26. ((¬ (a3 A/23 D/26)) ∨ (¬ (likes B/24 C/25 D/26))))
          ∨ (possibly_likes B/24 C/25 A/23))`
[cnf]
    flatten_rec `(likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))`
      vars: (A/27, B/28)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "37"]
               ∀ A/27 B/28.
                 ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "37"]
              ∀ A/27 B/28. ((¬ (a2 A/27 B/28)) ∨ (likes jan pepsi B/28)).`
[cnf]
    simplify and rename
      `∀ A/27 B/28. ((¬ (a2 A/27 B/28)) ∨ (likes jan pepsi B/28))`
[cnf]
    flatten_rec `(likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30))`
      vars: (A/29, B/30)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "25"]
               ∀ A/29 B/30.
                 ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "25"]
              ∀ A/29 B/30.
                ((¬ (a1 A/29 B/30)) ∨ (likes piotr cola B/30)).`
[cnf]
    simplify and rename
      `∀ A/29 B/30. ((¬ (a1 A/29 B/30)) ∨ (likes piotr cola B/30))`
[cnf]
    flatten_rec
      `(likes B/32 cola C/33)
       ∨ (¬ (likes B/32 pepsi C/33))
       ∨ (¬ (a2 A/31 C/33))`
      vars: (A/31, B/32, C/33)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "29"]
               ∀ A/31 B/32:mu C/33.
                 ((likes B/32 cola C/33)
                  ∨ (¬ (likes B/32 pepsi C/33))
                  ∨ (¬ (a2 A/31 C/33))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "29"]
              ∀ A/31 B/32:mu C/33.
                ((¬ (a2 A/31 C/33))
                 ∨ (¬ (likes B/32 pepsi C/33))
                 ∨ (likes B/32 cola C/33)).`
[cnf]
    simplify and rename
      `∀ A/31 B/32:mu C/33.
         ((¬ (a2 A/31 C/33))
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (likes B/32 cola C/33))`
[cnf]
    flatten_rec
      `(very_much_likes B/35 C/36 A/34)
       ∨ (¬ (∀ D/37.
                  ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37)))))`
      vars: (A/34, B/35, C/36)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "60"]
               ∀ A/34 B/35:mu C/36:mu.
                 ((very_much_likes B/35 C/36 A/34)
                  ∨ (¬ (∀ D/37.
                             ((very_much_likes B/35 C/36 D/37)
                              ∨ (¬ (a3 A/34 D/37)))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "60"]
              ∀ A/34 B/35:mu C/36:mu.
                ((¬ (∀ D/37.
                        ((¬ (a3 A/34 D/37))
                         ∨ (very_much_likes B/35 C/36 D/37))))
                 ∨ (very_much_likes B/35 C/36 A/34)).`
[cnf]
    simplify and rename
      `∀ A/34 B/35:mu C/36:mu.
         ((¬ (∀ D/37.
                 ((¬ (a3 A/34 D/37)) ∨ (very_much_likes B/35 C/36 D/37))))
          ∨ (very_much_likes B/35 C/36 A/34))`
[cnf] flatten_rec `mvalid (likes jan cola)` vars: ()
[cnf]
    flatten `goal [file "../hoe.extra/tests/agt035.p" "2"]
               mvalid (likes jan cola).`
      into `goal [file "../hoe.extra/tests/agt035.p" "2"]
              mvalid (likes jan cola).`
[cnf] simplify and rename `mvalid (likes jan cola)`
[cnf] flatten_rec `¬ (∀ A/38. (likes jan cola A/38))` vars: ()
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "21"]
               ¬ (∀ A/38. (likes jan cola A/38)).`
      into `assert [file "../hoe.extra/tests/agt035.p" "21"]
              ¬ (∀ A/38. (likes jan cola A/38)).`
[cnf] simplify and rename `¬ (∀ A/38. (likes jan cola A/38))`
[cnf]
    flatten_rec
      `¬ (∀ B/40. ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40))))`
      vars: (A/39)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "33"]
               ∀ A/39.
                 (¬ (∀ B/40.
                        ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "33"]
              ∀ A/39.
                (¬ (∀ B/40.
                       ((¬ (a1 A/39 B/40)) ∨ (¬ (likes piotr beer B/40))))).`
[cnf]
    simplify and rename
      `∀ A/39.
         (¬ (∀ B/40.
                ((¬ (a1 A/39 B/40)) ∨ (¬ (likes piotr beer B/40)))))`
[cnf]
    flatten_rec `(likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))`
      vars: (A/41, B/42)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "65"]
               ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "65"]
              ∀ A/41 B/42. ((¬ (a3 A/41 B/42)) ∨ (likes jan cola B/42)).`
[cnf]
    simplify and rename
      `∀ A/41 B/42. ((¬ (a3 A/41 B/42)) ∨ (likes jan cola B/42))`
[cnf]
    flatten_rec
      `(likes B/44 C/45 A/43)
       ∨ (∀ D/46.
              ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))))`
      vars: (A/43, B/44, C/45)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "41"]
               ∀ A/43 B/44:mu C/45:mu.
                 ((likes B/44 C/45 A/43)
                  ∨ (∀ D/46.
                         ((¬ (very_much_likes B/44 C/45 D/46))
                          ∨ (¬ (a3 A/43 D/46))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "41"]
              ∀ A/43 B/44:mu C/45:mu.
                ((∀ D/46.
                    ((¬ (a3 A/43 D/46))
                     ∨ (¬ (very_much_likes B/44 C/45 D/46))))
                 ∨ (likes B/44 C/45 A/43)).`
[cnf]
    simplify and rename
      `∀ A/43 B/44:mu C/45:mu.
         ((∀ D/46.
             ((¬ (a3 A/43 D/46)) ∨ (¬ (very_much_likes B/44 C/45 D/46))))
          ∨ (likes B/44 C/45 A/43))`
[cnf]
    flatten_rec
      `(very_much_likes B/48 C/49 D/50)
       ∨ (¬ (∀ E/52. ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))))
       ∨ (¬ (∀ E/51. ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (a3 A/47 D/50))`
      vars: (A/47, B/48, C/49, D/50)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "45"]
               ∀ A/47 B/48:mu C/49:mu D/50.
                 ((very_much_likes B/48 C/49 D/50)
                  ∨ (¬ (∀ E/52.
                             ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))))
                  ∨ (¬ (∀ E/51.
                             ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))))
                  ∨ (¬ (likes B/48 C/49 D/50))
                  ∨ (¬ (a3 A/47 D/50))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "45"]
              ∀ A/47 B/48:mu C/49:mu D/50.
                ((¬ (a3 A/47 D/50))
                 ∨ (¬ (likes B/48 C/49 D/50))
                 ∨ (¬ (∀ E/51.
                            ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
                 ∨ (¬ (∀ E/52.
                            ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
                 ∨ (very_much_likes B/48 C/49 D/50)).`
[cnf]
    simplify and rename
      `∀ A/47 B/48:mu C/49:mu D/50.
         ((¬ (a3 A/47 D/50))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (∀ E/51. ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
          ∨ (¬ (∀ E/52. ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
          ∨ (very_much_likes B/48 C/49 D/50))`
[skolem]
    define_form
      (def zip_tseitin0 E/51 D/50 C/49 B/48
       for: (likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))
       rw_rules: false
       polarity: -)
      :proof define zip_tseitin0 
               with assert [file "../hoe.extra/tests/agt035.p" "45"]
                      ∀ A/47 B/48:mu C/49:mu D/50.
                        ((¬ (a3 A/47 D/50))
                         ∨ (¬ (likes B/48 C/49 D/50))
                         ∨ (¬ (∀ E/51.
                                    ((¬ (a1 D/50 E/51))
                                     ∨ (likes B/48 C/49 E/51))))
                         ∨ (¬ (∀ E/52.
                                    ((¬ (a2 D/50 E/52))
                                     ∨ (likes B/48 C/49 E/52))))
                         ∨ (very_much_likes B/48 C/49 D/50)).
[cnf]
    introduce def. zip_tseitin0 E/51 D/50 C/49 B/48
      for subformula `(likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))`
      with pol -
[cnf] rename because pol=-, a=0, b=2, c1=4, c2=4
[skolem]
    define_form
      (def zip_tseitin1 E/52 D/50 C/49 B/48
       for: (likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))
       rw_rules: false
       polarity: -)
      :proof define zip_tseitin1 
               with assert [file "../hoe.extra/tests/agt035.p" "45"]
                      ∀ A/47 B/48:mu C/49:mu D/50.
                        ((¬ (a3 A/47 D/50))
                         ∨ (¬ (likes B/48 C/49 D/50))
                         ∨ (¬ (∀ E/51.
                                    ((¬ (a1 D/50 E/51))
                                     ∨ (likes B/48 C/49 E/51))))
                         ∨ (¬ (∀ E/52.
                                    ((¬ (a2 D/50 E/52))
                                     ∨ (likes B/48 C/49 E/52))))
                         ∨ (very_much_likes B/48 C/49 D/50)).
[cnf]
    introduce def. zip_tseitin1 E/52 D/50 C/49 B/48
      for subformula `(likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))`
      with pol -
[cnf] rename because pol=-, a=0, b=2, c1=4, c2=4
[cnf]
    flatten_rec `(likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54))`
      vars: (A/53, B/54)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "27"]
               ∀ A/53 B/54.
                 ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "27"]
              ∀ A/53 B/54.
                ((¬ (a1 A/53 B/54)) ∨ (likes piotr beer B/54)).`
[cnf]
    simplify and rename
      `∀ A/53 B/54. ((¬ (a1 A/53 B/54)) ∨ (likes piotr beer B/54))`
[cnf]
    flatten_rec
      `(likes B/56 cola C/57)
       ∨ (∀ D/58. ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
       ∨ (¬ (a1 A/55 C/57))`
      vars: (A/55, B/56, C/57)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "54"]
               ∀ A/55 B/56:mu C/57.
                 ((likes B/56 cola C/57)
                  ∨ (∀ D/58.
                         ((¬ (likes B/56 pepsi D/58))
                          ∨ (¬ (a1 C/57 D/58))))
                  ∨ (¬ (a1 A/55 C/57))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "54"]
              ∀ A/55 B/56:mu C/57.
                ((¬ (a1 A/55 C/57))
                 ∨ (∀ D/58.
                        ((¬ (a1 C/57 D/58)) ∨ (¬ (likes B/56 pepsi D/58))))
                 ∨ (likes B/56 cola C/57)).`
[cnf]
    simplify and rename
      `∀ A/55 B/56:mu C/57.
         ((¬ (a1 A/55 C/57))
          ∨ (∀ D/58.
                 ((¬ (a1 C/57 D/58)) ∨ (¬ (likes B/56 pepsi D/58))))
          ∨ (likes B/56 cola C/57))`
[cnf]
    flatten_rec
      `(likes B/60 pepsi C/61)
       ∨ (¬ (likes B/60 cola C/61))
       ∨ (¬ (a2 A/59 C/61))`
      vars: (A/59, B/60, C/61)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "39"]
               ∀ A/59 B/60:mu C/61.
                 ((likes B/60 pepsi C/61)
                  ∨ (¬ (likes B/60 cola C/61))
                  ∨ (¬ (a2 A/59 C/61))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "39"]
              ∀ A/59 B/60:mu C/61.
                ((¬ (a2 A/59 C/61))
                 ∨ (¬ (likes B/60 cola C/61))
                 ∨ (likes B/60 pepsi C/61)).`
[cnf]
    simplify and rename
      `∀ A/59 B/60:mu C/61.
         ((¬ (a2 A/59 C/61))
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (likes B/60 pepsi C/61))`
[cnf]
    flatten_rec
      `(possibly_likes B/63 C/64 A/62)
       ∨ (∀ D/65. ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))))`
      vars: (A/62, B/63, C/64)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "63"]
               ∀ A/62 B/63:mu C/64:mu.
                 ((possibly_likes B/63 C/64 A/62)
                  ∨ (∀ D/65.
                         ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "63"]
              ∀ A/62 B/63:mu C/64:mu.
                ((∀ D/65.
                    ((¬ (a1 A/62 D/65)) ∨ (¬ (likes B/63 C/64 D/65))))
                 ∨ (possibly_likes B/63 C/64 A/62)).`
[cnf]
    simplify and rename
      `∀ A/62 B/63:mu C/64:mu.
         ((∀ D/65. ((¬ (a1 A/62 D/65)) ∨ (¬ (likes B/63 C/64 D/65))))
          ∨ (possibly_likes B/63 C/64 A/62))`
[cnf]
    flatten_rec
      `¬ (∀ B/67. ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))`
      vars: (A/66)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "50"]
               ∀ A/66.
                 (¬ (∀ B/67.
                        ((¬ (likes piotr pepsi B/67))
                         ∨ (¬ (a3 A/66 B/67))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "50"]
              ∀ A/66.
                (¬ (∀ B/67.
                       ((¬ (a3 A/66 B/67)) ∨ (¬ (likes piotr pepsi B/67))))).`
[cnf]
    simplify and rename
      `∀ A/66.
         (¬ (∀ B/67.
                ((¬ (a3 A/66 B/67)) ∨ (¬ (likes piotr pepsi B/67)))))`
[cnf]
    flatten_rec
      `(likes B/69 pepsi C/70)
       ∨ (∀ D/71. ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
       ∨ (¬ (a1 A/68 C/70))`
      vars: (A/68, B/69, C/70)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "31"]
               ∀ A/68 B/69:mu C/70.
                 ((likes B/69 pepsi C/70)
                  ∨ (∀ D/71.
                         ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
                  ∨ (¬ (a1 A/68 C/70))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "31"]
              ∀ A/68 B/69:mu C/70.
                ((¬ (a1 A/68 C/70))
                 ∨ (∀ D/71.
                        ((¬ (a1 C/70 D/71)) ∨ (¬ (likes B/69 cola D/71))))
                 ∨ (likes B/69 pepsi C/70)).`
[cnf]
    simplify and rename
      `∀ A/68 B/69:mu C/70.
         ((¬ (a1 A/68 C/70))
          ∨ (∀ D/71.
                 ((¬ (a1 C/70 D/71)) ∨ (¬ (likes B/69 cola D/71))))
          ∨ (likes B/69 pepsi C/70))`
[cnf]
    flatten_rec
      `(possibly_likes B/73 C/74 A/72)
       ∨ (∀ D/75. ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))))`
      vars: (A/72, B/73, C/74)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "43"]
               ∀ A/72 B/73:mu C/74:mu.
                 ((possibly_likes B/73 C/74 A/72)
                  ∨ (∀ D/75.
                         ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "43"]
              ∀ A/72 B/73:mu C/74:mu.
                ((∀ D/75.
                    ((¬ (a2 A/72 D/75)) ∨ (¬ (likes B/73 C/74 D/75))))
                 ∨ (possibly_likes B/73 C/74 A/72)).`
[cnf]
    simplify and rename
      `∀ A/72 B/73:mu C/74:mu.
         ((∀ D/75. ((¬ (a2 A/72 D/75)) ∨ (¬ (likes B/73 C/74 D/75))))
          ∨ (possibly_likes B/73 C/74 A/72))`
[cnf]
    flatten_rec `(likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77))`
      vars: (A/76, B/77)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "23"]
               ∀ A/76 B/77.
                 ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "23"]
              ∀ A/76 B/77.
                ((¬ (a1 A/76 B/77)) ∨ (likes piotr pepsi B/77)).`
[cnf]
    simplify and rename
      `∀ A/76 B/77. ((¬ (a1 A/76 B/77)) ∨ (likes piotr pepsi B/77))`
[cnf]
    flatten_rec `(likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))`
      vars: (A/78, B/79)
[cnf]
    flatten `assert [file "../hoe.extra/tests/agt035.p" "58"]
               ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))).`
      into `assert [file "../hoe.extra/tests/agt035.p" "58"]
              ∀ A/78 B/79. ((¬ (a1 A/78 B/79)) ∨ (likes jan cola B/79)).`
[cnf]
    simplify and rename
      `∀ A/78 B/79. ((¬ (a1 A/78 B/79)) ∨ (likes jan cola B/79))`
[cnf]
    reduce
      `∀ A/23 B/24:mu C/25:mu.
         ((possibly_likes B/24 C/25 A/23)
          ∨ (∀ D/26.
                 ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/23 B/24:mu C/25:mu.
         ((possibly_likes B/24 C/25 A/23)
          ∨ (∀ D/26.
                 ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
[cnf]
    nnf of
      `∀ B/24:mu C/25:mu.
         ((possibly_likes B/24 C/25 A/23)
          ∨ (∀ D/26.
                 ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
[cnf]
    nnf of
      `∀ C/25:mu.
         ((possibly_likes B/24 C/25 A/23)
          ∨ (∀ D/26.
                 ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
[cnf]
    nnf of
      `(possibly_likes B/24 C/25 A/23)
       ∨ (∀ D/26. ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))))`
[cnf] nnf of `possibly_likes B/24 C/25 A/23`
[cnf]
    nnf of `∀ D/26. ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))`
[cnf] nnf of `(¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26))`
[cnf] nnf of `¬ (likes B/24 C/25 D/26)`
[cnf] nnf of `¬ (a3 A/23 D/26)`
[cnf]
    ... NNF:
      `∀ A/23 B/24:mu C/25:mu.
         ((∀ D/26. ((¬ (a3 A/23 D/26)) ∨ (¬ (likes B/24 C/25 D/26))))
          ∨ (possibly_likes B/24 C/25 A/23))`
[cnf]
    ... miniscoped:
      `∀ A/23 B/24:mu C/25:mu.
         ((possibly_likes B/24 C/25 A/23)
          ∨ (∀ D/26.
                 ((¬ (likes B/24 C/25 D/26)) ∨ (¬ (a3 A/23 D/26)))))`
[cnf] rename `A/23` to `A/82` :subst {}
[cnf] rename `B/24` to `B/83` :subst {A/23 → A/82}
[cnf] rename `C/25` to `C/84` :subst {A/23 → A/82, B/24 → B/83}
[cnf]
    rename `D/26` to `D/85`
      :subst {A/23 → A/82, B/24 → B/83, C/25 → C/84}
[cnf]
    ... skolemized:
      `(¬ (likes B/83 C/84 D/85))
       ∨ (¬ (a3 A/82 D/85))
       ∨ (possibly_likes B/83 C/84 A/82)`
[cnf]
    ... CNF:
      `possibly_likes B/83 C/84 A/82 ∨ ¬ a3 A/82 D/85 ∨ 
         ¬ likes B/83 C/84 D/85`
[cnf]
    reduce `∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))`
      to CNF
[cnf]
    nnf of `∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))`
[cnf]
    nnf of `∀ B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))`
[cnf] nnf of `(likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))`
[cnf] nnf of `likes jan pepsi B/28`
[cnf] nnf of `¬ (a2 A/27 B/28)`
[cnf]
    ... NNF:
      `∀ A/27 B/28. ((¬ (a2 A/27 B/28)) ∨ (likes jan pepsi B/28))`
[cnf]
    ... miniscoped:
      `∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28)))`
[cnf] rename `A/27` to `A/86` :subst {}
[cnf] rename `B/28` to `B/87` :subst {A/27 → A/86}
[cnf] ... skolemized: `(¬ (a2 A/86 B/87)) ∨ (likes jan pepsi B/87)`
[cnf] ... CNF: `likes jan pepsi B/87 ∨ ¬ a2 A/86 B/87`
[cnf]
    reduce `∀ A/29 B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))`
      to CNF
[cnf]
    nnf of `∀ A/29 B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))`
[cnf]
    nnf of `∀ B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))`
[cnf] nnf of `(likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30))`
[cnf] nnf of `likes piotr cola B/30`
[cnf] nnf of `¬ (a1 A/29 B/30)`
[cnf]
    ... NNF:
      `∀ A/29 B/30. ((¬ (a1 A/29 B/30)) ∨ (likes piotr cola B/30))`
[cnf]
    ... miniscoped:
      `∀ A/29 B/30. ((likes piotr cola B/30) ∨ (¬ (a1 A/29 B/30)))`
[cnf] rename `A/29` to `A/88` :subst {}
[cnf] rename `B/30` to `B/89` :subst {A/29 → A/88}
[cnf] ... skolemized: `(¬ (a1 A/88 B/89)) ∨ (likes piotr cola B/89)`
[cnf] ... CNF: `likes piotr cola B/89 ∨ ¬ a1 A/88 B/89`
[cnf]
    reduce
      `∀ A/31 B/32:mu C/33.
         ((likes B/32 cola C/33)
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (¬ (a2 A/31 C/33)))`
      to CNF
[cnf]
    nnf of
      `∀ A/31 B/32:mu C/33.
         ((likes B/32 cola C/33)
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (¬ (a2 A/31 C/33)))`
[cnf]
    nnf of
      `∀ B/32:mu C/33.
         ((likes B/32 cola C/33)
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (¬ (a2 A/31 C/33)))`
[cnf]
    nnf of
      `∀ C/33.
         ((likes B/32 cola C/33)
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (¬ (a2 A/31 C/33)))`
[cnf]
    nnf of
      `(likes B/32 cola C/33)
       ∨ (¬ (likes B/32 pepsi C/33))
       ∨ (¬ (a2 A/31 C/33))`
[cnf] nnf of `likes B/32 cola C/33`
[cnf] nnf of `¬ (likes B/32 pepsi C/33)`
[cnf] nnf of `¬ (a2 A/31 C/33)`
[cnf]
    ... NNF:
      `∀ A/31 B/32:mu C/33.
         ((¬ (a2 A/31 C/33))
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (likes B/32 cola C/33))`
[cnf]
    ... miniscoped:
      `∀ A/31 B/32:mu C/33.
         ((likes B/32 cola C/33)
          ∨ (¬ (likes B/32 pepsi C/33))
          ∨ (¬ (a2 A/31 C/33)))`
[cnf] rename `A/31` to `A/90` :subst {}
[cnf] rename `B/32` to `B/91` :subst {A/31 → A/90}
[cnf] rename `C/33` to `C/92` :subst {A/31 → A/90, B/32 → B/91}
[cnf]
    ... skolemized:
      `(¬ (a2 A/90 C/92))
       ∨ (¬ (likes B/91 pepsi C/92))
       ∨ (likes B/91 cola C/92)`
[cnf]
    ... CNF:
      `likes B/91 cola C/92 ∨ ¬ likes B/91 pepsi C/92 ∨ ¬ a2 A/90 C/92`
[cnf]
    reduce
      `∀ A/34 B/35:mu C/36:mu.
         ((very_much_likes B/35 C/36 A/34)
          ∨ (¬ (∀ D/37.
                     ((very_much_likes B/35 C/36 D/37)
                      ∨ (¬ (a3 A/34 D/37))))))`
      to CNF
[cnf]
    nnf of
      `∀ A/34 B/35:mu C/36:mu.
         ((very_much_likes B/35 C/36 A/34)
          ∨ (¬ (∀ D/37.
                     ((very_much_likes B/35 C/36 D/37)
                      ∨ (¬ (a3 A/34 D/37))))))`
[cnf]
    nnf of
      `∀ B/35:mu C/36:mu.
         ((very_much_likes B/35 C/36 A/34)
          ∨ (¬ (∀ D/37.
                     ((very_much_likes B/35 C/36 D/37)
                      ∨ (¬ (a3 A/34 D/37))))))`
[cnf]
    nnf of
      `∀ C/36:mu.
         ((very_much_likes B/35 C/36 A/34)
          ∨ (¬ (∀ D/37.
                     ((very_much_likes B/35 C/36 D/37)
                      ∨ (¬ (a3 A/34 D/37))))))`
[cnf]
    nnf of
      `(very_much_likes B/35 C/36 A/34)
       ∨ (¬ (∀ D/37.
                  ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37)))))`
[cnf] nnf of `very_much_likes B/35 C/36 A/34`
[cnf]
    nnf of
      `¬ (∀ D/37.
             ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37))))`
[cnf]
    nnf of `¬ ((very_much_likes B/35 C/36 D/37) ∨ (¬ (a3 A/34 D/37)))`
[cnf] nnf of `¬ (very_much_likes B/35 C/36 D/37)`
[cnf] nnf of `a3 A/34 D/37`
[cnf]
    ... NNF:
      `∀ A/34 B/35:mu C/36:mu.
         ((∃ D/37.
             ((a3 A/34 D/37) ∧ (¬ (very_much_likes B/35 C/36 D/37))))
          ∨ (very_much_likes B/35 C/36 A/34))`
[cnf]
    ... miniscoped:
      `∀ A/34 B/35:mu C/36:mu.
         ((very_much_likes B/35 C/36 A/34)
          ∨ (∃ D/37.
                 ((¬ (very_much_likes B/35 C/36 D/37)) ∧ (a3 A/34 D/37))))`
[cnf] rename `A/34` to `A/93` :subst {}
[cnf] rename `B/35` to `B/94` :subst {A/34 → A/93}
[cnf] rename `C/36` to `C/95` :subst {A/34 → A/93, B/35 → B/94}
[skolem]
    creating skolem for
      `∃ D/37. ((¬ (very_much_likes B/35 C/36 D/37)) ∧ (a3 A/34 D/37))`
      with tyvars=[], vars=[C/95, B/94, A/93],
      subst={A/34 → A/93, B/35 → B/94, C/36 → C/95}
[skolem] new skolem symbol `sk_D` with type `mu → mu → ι → ι`
[cnf]
    bind `D/37` to `sk_D C/95 B/94 A/93`
      :subst {A/34 → A/93, B/35 → B/94, C/36 → C/95}
[cnf]
    ... skolemized:
      `((a3 A/93 (sk_D C/95 B/94 A/93))
        ∧ (¬ (very_much_likes B/94 C/95 (sk_D C/95 B/94 A/93))))
       ∨ (very_much_likes B/94 C/95 A/93)`
[cnf]
    ... CNF:
      `very_much_likes B/94 C/95 A/93 ∨ 
         ¬ very_much_likes B/94 C/95 (sk_D C/95 B/94 A/93), 
       very_much_likes B/94 C/95 A/93 ∨ a3 A/93 (sk_D C/95 B/94 A/93)`
[cnf] reduce `¬ (mvalid (likes jan cola))` to CNF
[cnf] reduce `¬ (∀ A/38. (likes jan cola A/38))` to CNF
[cnf] nnf of `¬ (∀ A/38. (likes jan cola A/38))`
[cnf] nnf of `¬ (likes jan cola A/38)`
[cnf] ... NNF: `∃ A/38. (¬ (likes jan cola A/38))`
[cnf] ... miniscoped: `∃ A/38. (¬ (likes jan cola A/38))`
[skolem]
    creating skolem for `∃ A/38. (¬ (likes jan cola A/38))`
      with tyvars=[], vars=[], subst={}
[skolem] new skolem symbol `sk_A` with type `ι`
[cnf] bind `A/38` to `sk_A` :subst {}
[cnf] ... skolemized: `¬ (likes jan cola sk_A)`
[cnf] ... CNF: `¬ likes jan cola sk_A`
[cnf]
    reduce
      `∀ A/39.
         (¬ (∀ B/40.
                ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/39.
         (¬ (∀ B/40.
                ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))))`
[cnf]
    nnf of
      `¬ (∀ B/40. ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40))))`
[cnf] nnf of `¬ ((¬ (likes piotr beer B/40)) ∨ (¬ (a1 A/39 B/40)))`
[cnf] nnf of `likes piotr beer B/40`
[cnf] nnf of `a1 A/39 B/40`
[cnf]
    ... NNF:
      `∀ A/39. (∃ B/40. ((a1 A/39 B/40) ∧ (likes piotr beer B/40)))`
[cnf]
    ... miniscoped:
      `∀ A/39. (∃ B/40. ((likes piotr beer B/40) ∧ (a1 A/39 B/40)))`
[cnf] rename `A/39` to `A/98` :subst {}
[skolem]
    creating skolem for
      `∃ B/40. ((likes piotr beer B/40) ∧ (a1 A/39 B/40))`
      with tyvars=[], vars=[A/98], subst={A/39 → A/98}
[skolem] new skolem symbol `sk_B` with type `ι → ι`
[cnf] bind `B/40` to `sk_B A/98` :subst {A/39 → A/98}
[cnf]
    ... skolemized:
      `(a1 A/98 (sk_B A/98)) ∧ (likes piotr beer (sk_B A/98))`
[cnf] ... CNF: `a1 A/98 (sk_B A/98), likes piotr beer (sk_B A/98)`
[cnf]
    reduce `∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))`
      to CNF
[cnf]
    nnf of `∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))`
[cnf] nnf of `∀ B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))`
[cnf] nnf of `(likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))`
[cnf] nnf of `likes jan cola B/42`
[cnf] nnf of `¬ (a3 A/41 B/42)`
[cnf]
    ... NNF: `∀ A/41 B/42. ((¬ (a3 A/41 B/42)) ∨ (likes jan cola B/42))`
[cnf]
    ... miniscoped:
      `∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42)))`
[cnf] rename `A/41` to `A/100` :subst {}
[cnf] rename `B/42` to `B/101` :subst {A/41 → A/100}
[cnf] ... skolemized: `(¬ (a3 A/100 B/101)) ∨ (likes jan cola B/101)`
[cnf] ... CNF: `likes jan cola B/101 ∨ ¬ a3 A/100 B/101`
[cnf]
    reduce
      `∀ A/43 B/44:mu C/45:mu.
         ((likes B/44 C/45 A/43)
          ∨ (∀ D/46.
                 ((¬ (very_much_likes B/44 C/45 D/46))
                  ∨ (¬ (a3 A/43 D/46)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/43 B/44:mu C/45:mu.
         ((likes B/44 C/45 A/43)
          ∨ (∀ D/46.
                 ((¬ (very_much_likes B/44 C/45 D/46))
                  ∨ (¬ (a3 A/43 D/46)))))`
[cnf]
    nnf of
      `∀ B/44:mu C/45:mu.
         ((likes B/44 C/45 A/43)
          ∨ (∀ D/46.
                 ((¬ (very_much_likes B/44 C/45 D/46))
                  ∨ (¬ (a3 A/43 D/46)))))`
[cnf]
    nnf of
      `∀ C/45:mu.
         ((likes B/44 C/45 A/43)
          ∨ (∀ D/46.
                 ((¬ (very_much_likes B/44 C/45 D/46))
                  ∨ (¬ (a3 A/43 D/46)))))`
[cnf]
    nnf of
      `(likes B/44 C/45 A/43)
       ∨ (∀ D/46.
              ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))))`
[cnf] nnf of `likes B/44 C/45 A/43`
[cnf]
    nnf of
      `∀ D/46.
         ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46)))`
[cnf]
    nnf of `(¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))`
[cnf] nnf of `¬ (very_much_likes B/44 C/45 D/46)`
[cnf] nnf of `¬ (a3 A/43 D/46)`
[cnf]
    ... NNF:
      `∀ A/43 B/44:mu C/45:mu.
         ((∀ D/46.
             ((¬ (a3 A/43 D/46)) ∨ (¬ (very_much_likes B/44 C/45 D/46))))
          ∨ (likes B/44 C/45 A/43))`
[cnf]
    ... miniscoped:
      `∀ A/43 B/44:mu C/45:mu.
         ((likes B/44 C/45 A/43)
          ∨ (∀ D/46.
                 ((¬ (very_much_likes B/44 C/45 D/46))
                  ∨ (¬ (a3 A/43 D/46)))))`
[cnf] rename `A/43` to `A/102` :subst {}
[cnf] rename `B/44` to `B/103` :subst {A/43 → A/102}
[cnf] rename `C/45` to `C/104` :subst {A/43 → A/102, B/44 → B/103}
[cnf]
    rename `D/46` to `D/105`
      :subst {A/43 → A/102, B/44 → B/103, C/45 → C/104}
[cnf]
    ... skolemized:
      `(¬ (very_much_likes B/103 C/104 D/105))
       ∨ (¬ (a3 A/102 D/105))
       ∨ (likes B/103 C/104 A/102)`
[cnf]
    ... CNF:
      `likes B/103 C/104 A/102 ∨ ¬ a3 A/102 D/105 ∨ 
         ¬ very_much_likes B/103 C/104 D/105`
[cnf]
    reduce
      `((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
       (zip_tseitin0 E/51 D/50 C/49 B/48)`
      to CNF
[cnf]
    nnf of
      `((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
       (zip_tseitin0 E/51 D/50 C/49 B/48)`
[cnf]
    nnf of
      `(zip_tseitin0 E/51 D/50 C/49 B/48)
       ∨ (¬ ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))))`
[cnf] nnf of `zip_tseitin0 E/51 D/50 C/49 B/48`
[cnf] nnf of `¬ ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51)))`
[cnf] nnf of `¬ (likes B/48 C/49 E/51)`
[cnf] nnf of `a1 D/50 E/51`
[cnf]
    ... NNF:
      `((a1 D/50 E/51) ∧ (¬ (likes B/48 C/49 E/51)))
       ∨ (zip_tseitin0 E/51 D/50 C/49 B/48)`
[cnf]
    ... miniscoped:
      `(zip_tseitin0 E/51 D/50 C/49 B/48)
       ∨ ((¬ (likes B/48 C/49 E/51)) ∧ (a1 D/50 E/51))`
[cnf]
    ... skolemized:
      `((a1 D/50 E/51) ∧ (¬ (likes B/48 C/49 E/51)))
       ∨ (zip_tseitin0 E/51 D/50 C/49 B/48)`
[cnf]
    ... CNF:
      `zip_tseitin0 E/51 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/51, 
       zip_tseitin0 E/51 D/50 C/49 B/48 ∨ a1 D/50 E/51`
[cnf]
    reduce
      `((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
       (zip_tseitin1 E/52 D/50 C/49 B/48)`
      to CNF
[cnf]
    nnf of
      `((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
       (zip_tseitin1 E/52 D/50 C/49 B/48)`
[cnf]
    nnf of
      `(zip_tseitin1 E/52 D/50 C/49 B/48)
       ∨ (¬ ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))))`
[cnf] nnf of `zip_tseitin1 E/52 D/50 C/49 B/48`
[cnf] nnf of `¬ ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52)))`
[cnf] nnf of `¬ (likes B/48 C/49 E/52)`
[cnf] nnf of `a2 D/50 E/52`
[cnf]
    ... NNF:
      `((a2 D/50 E/52) ∧ (¬ (likes B/48 C/49 E/52)))
       ∨ (zip_tseitin1 E/52 D/50 C/49 B/48)`
[cnf]
    ... miniscoped:
      `(zip_tseitin1 E/52 D/50 C/49 B/48)
       ∨ ((¬ (likes B/48 C/49 E/52)) ∧ (a2 D/50 E/52))`
[cnf]
    ... skolemized:
      `((a2 D/50 E/52) ∧ (¬ (likes B/48 C/49 E/52)))
       ∨ (zip_tseitin1 E/52 D/50 C/49 B/48)`
[cnf]
    ... CNF:
      `zip_tseitin1 E/52 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/52, 
       zip_tseitin1 E/52 D/50 C/49 B/48 ∨ a2 D/50 E/52`
[cnf]
    reduce
      `∀ A/47 B/48:mu C/49:mu D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
      to CNF
[cnf]
    nnf of
      `∀ A/47 B/48:mu C/49:mu D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
[cnf]
    nnf of
      `∀ B/48:mu C/49:mu D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
[cnf]
    nnf of
      `∀ C/49:mu D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
[cnf]
    nnf of
      `∀ D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
[cnf]
    nnf of
      `(very_much_likes B/48 C/49 D/50)
       ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
       ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (a3 A/47 D/50))`
[cnf] nnf of `very_much_likes B/48 C/49 D/50`
[cnf] nnf of `¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48))`
[cnf] nnf of `¬ (zip_tseitin1 E/52 D/50 C/49 B/48)`
[cnf] nnf of `¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48))`
[cnf] nnf of `¬ (zip_tseitin0 E/51 D/50 C/49 B/48)`
[cnf] nnf of `¬ (likes B/48 C/49 D/50)`
[cnf] nnf of `¬ (a3 A/47 D/50)`
[cnf]
    ... NNF:
      `∀ A/47 B/48:mu C/49:mu D/50.
         ((¬ (a3 A/47 D/50))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (∃ E/51. (¬ (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (∃ E/52. (¬ (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (very_much_likes B/48 C/49 D/50))`
[cnf]
    ... miniscoped:
      `∀ A/47 B/48:mu C/49:mu D/50.
         ((very_much_likes B/48 C/49 D/50)
          ∨ (∃ E/52. (¬ (zip_tseitin1 E/52 D/50 C/49 B/48)))
          ∨ (∃ E/51. (¬ (zip_tseitin0 E/51 D/50 C/49 B/48)))
          ∨ (¬ (likes B/48 C/49 D/50))
          ∨ (¬ (a3 A/47 D/50)))`
[cnf] rename `A/47` to `A/106` :subst {}
[cnf] rename `B/48` to `B/107` :subst {A/47 → A/106}
[cnf] rename `C/49` to `C/108` :subst {A/47 → A/106, B/48 → B/107}
[cnf]
    rename `D/50` to `D/109`
      :subst {A/47 → A/106, B/48 → B/107, C/49 → C/108}
[skolem]
    creating skolem for `∃ E/52. (¬ (zip_tseitin1 E/52 D/50 C/49 B/48))`
      with tyvars=[], vars=[D/109, C/108, B/107],
      subst={A/47 → A/106, B/48 → B/107, C/49 → C/108, D/50 → D/109}
[skolem] new skolem symbol `sk_E` with type `ι → mu → mu → ι`
[cnf]
    bind `E/52` to `sk_E D/109 C/108 B/107`
      :subst {A/47 → A/106, B/48 → B/107, C/49 → C/108, D/50 → D/109}
[skolem]
    creating skolem for `∃ E/51. (¬ (zip_tseitin0 E/51 D/50 C/49 B/48))`
      with tyvars=[], vars=[D/109, C/108, B/107],
      subst={A/47 → A/106, B/48 → B/107, C/49 → C/108, D/50 → D/109}
[skolem] new skolem symbol `sk_E1` with type `ι → mu → mu → ι`
[cnf]
    bind `E/51` to `sk_E1 D/109 C/108 B/107`
      :subst {A/47 → A/106, B/48 → B/107, C/49 → C/108, D/50 → D/109}
[cnf]
    ... skolemized:
      `(¬ (a3 A/106 D/109))
       ∨ (¬ (likes B/107 C/108 D/109))
       ∨ (¬ (zip_tseitin0 (sk_E1 D/109 C/108 B/107) D/109 C/108 B/107))
       ∨ (¬ (zip_tseitin1 (sk_E D/109 C/108 B/107) D/109 C/108 B/107))
       ∨ (very_much_likes B/107 C/108 D/109)`
[cnf]
    ... CNF:
      `very_much_likes B/107 C/108 D/109 ∨ 
         ¬ zip_tseitin1 (sk_E D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ zip_tseitin0 (sk_E1 D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ likes B/107 C/108 D/109 ∨ ¬ a3 A/106 D/109`
[cnf]
    reduce `∀ A/53 B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))`
      to CNF
[cnf]
    nnf of `∀ A/53 B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))`
[cnf]
    nnf of `∀ B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))`
[cnf] nnf of `(likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54))`
[cnf] nnf of `likes piotr beer B/54`
[cnf] nnf of `¬ (a1 A/53 B/54)`
[cnf]
    ... NNF:
      `∀ A/53 B/54. ((¬ (a1 A/53 B/54)) ∨ (likes piotr beer B/54))`
[cnf]
    ... miniscoped:
      `∀ A/53 B/54. ((likes piotr beer B/54) ∨ (¬ (a1 A/53 B/54)))`
[cnf] rename `A/53` to `A/112` :subst {}
[cnf] rename `B/54` to `B/113` :subst {A/53 → A/112}
[cnf]
    ... skolemized: `(¬ (a1 A/112 B/113)) ∨ (likes piotr beer B/113)`
[cnf] ... CNF: `likes piotr beer B/113 ∨ ¬ a1 A/112 B/113`
[cnf]
    reduce
      `∀ A/55 B/56:mu C/57.
         ((likes B/56 cola C/57)
          ∨ (∀ D/58.
                 ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
          ∨ (¬ (a1 A/55 C/57)))`
      to CNF
[cnf]
    nnf of
      `∀ A/55 B/56:mu C/57.
         ((likes B/56 cola C/57)
          ∨ (∀ D/58.
                 ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
          ∨ (¬ (a1 A/55 C/57)))`
[cnf]
    nnf of
      `∀ B/56:mu C/57.
         ((likes B/56 cola C/57)
          ∨ (∀ D/58.
                 ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
          ∨ (¬ (a1 A/55 C/57)))`
[cnf]
    nnf of
      `∀ C/57.
         ((likes B/56 cola C/57)
          ∨ (∀ D/58.
                 ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
          ∨ (¬ (a1 A/55 C/57)))`
[cnf]
    nnf of
      `(likes B/56 cola C/57)
       ∨ (∀ D/58. ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
       ∨ (¬ (a1 A/55 C/57))`
[cnf] nnf of `likes B/56 cola C/57`
[cnf]
    nnf of `∀ D/58. ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58)))`
[cnf] nnf of `(¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))`
[cnf] nnf of `¬ (likes B/56 pepsi D/58)`
[cnf] nnf of `¬ (a1 C/57 D/58)`
[cnf] nnf of `¬ (a1 A/55 C/57)`
[cnf]
    ... NNF:
      `∀ A/55 B/56:mu C/57.
         ((¬ (a1 A/55 C/57))
          ∨ (∀ D/58.
                 ((¬ (a1 C/57 D/58)) ∨ (¬ (likes B/56 pepsi D/58))))
          ∨ (likes B/56 cola C/57))`
[cnf]
    ... miniscoped:
      `∀ A/55 B/56:mu C/57.
         ((likes B/56 cola C/57)
          ∨ (∀ D/58.
                 ((¬ (likes B/56 pepsi D/58)) ∨ (¬ (a1 C/57 D/58))))
          ∨ (¬ (a1 A/55 C/57)))`
[cnf] rename `A/55` to `A/114` :subst {}
[cnf] rename `B/56` to `B/115` :subst {A/55 → A/114}
[cnf] rename `C/57` to `C/116` :subst {A/55 → A/114, B/56 → B/115}
[cnf]
    rename `D/58` to `D/117`
      :subst {A/55 → A/114, B/56 → B/115, C/57 → C/116}
[cnf]
    ... skolemized:
      `(¬ (a1 A/114 C/116))
       ∨ (¬ (likes B/115 pepsi D/117))
       ∨ (¬ (a1 C/116 D/117))
       ∨ (likes B/115 cola C/116)`
[cnf]
    ... CNF:
      `likes B/115 cola C/116 ∨ ¬ a1 C/116 D/117 ∨ 
         ¬ likes B/115 pepsi D/117 ∨ ¬ a1 A/114 C/116`
[cnf]
    reduce
      `∀ A/59 B/60:mu C/61.
         ((likes B/60 pepsi C/61)
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (¬ (a2 A/59 C/61)))`
      to CNF
[cnf]
    nnf of
      `∀ A/59 B/60:mu C/61.
         ((likes B/60 pepsi C/61)
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (¬ (a2 A/59 C/61)))`
[cnf]
    nnf of
      `∀ B/60:mu C/61.
         ((likes B/60 pepsi C/61)
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (¬ (a2 A/59 C/61)))`
[cnf]
    nnf of
      `∀ C/61.
         ((likes B/60 pepsi C/61)
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (¬ (a2 A/59 C/61)))`
[cnf]
    nnf of
      `(likes B/60 pepsi C/61)
       ∨ (¬ (likes B/60 cola C/61))
       ∨ (¬ (a2 A/59 C/61))`
[cnf] nnf of `likes B/60 pepsi C/61`
[cnf] nnf of `¬ (likes B/60 cola C/61)`
[cnf] nnf of `¬ (a2 A/59 C/61)`
[cnf]
    ... NNF:
      `∀ A/59 B/60:mu C/61.
         ((¬ (a2 A/59 C/61))
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (likes B/60 pepsi C/61))`
[cnf]
    ... miniscoped:
      `∀ A/59 B/60:mu C/61.
         ((likes B/60 pepsi C/61)
          ∨ (¬ (likes B/60 cola C/61))
          ∨ (¬ (a2 A/59 C/61)))`
[cnf] rename `A/59` to `A/118` :subst {}
[cnf] rename `B/60` to `B/119` :subst {A/59 → A/118}
[cnf] rename `C/61` to `C/120` :subst {A/59 → A/118, B/60 → B/119}
[cnf]
    ... skolemized:
      `(¬ (a2 A/118 C/120))
       ∨ (¬ (likes B/119 cola C/120))
       ∨ (likes B/119 pepsi C/120)`
[cnf]
    ... CNF:
      `likes B/119 pepsi C/120 ∨ ¬ likes B/119 cola C/120 ∨ 
         ¬ a2 A/118 C/120`
[cnf]
    reduce
      `∀ A/62 B/63:mu C/64:mu.
         ((possibly_likes B/63 C/64 A/62)
          ∨ (∀ D/65.
                 ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/62 B/63:mu C/64:mu.
         ((possibly_likes B/63 C/64 A/62)
          ∨ (∀ D/65.
                 ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
[cnf]
    nnf of
      `∀ B/63:mu C/64:mu.
         ((possibly_likes B/63 C/64 A/62)
          ∨ (∀ D/65.
                 ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
[cnf]
    nnf of
      `∀ C/64:mu.
         ((possibly_likes B/63 C/64 A/62)
          ∨ (∀ D/65.
                 ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
[cnf]
    nnf of
      `(possibly_likes B/63 C/64 A/62)
       ∨ (∀ D/65. ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))))`
[cnf] nnf of `possibly_likes B/63 C/64 A/62`
[cnf]
    nnf of `∀ D/65. ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))`
[cnf] nnf of `(¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65))`
[cnf] nnf of `¬ (likes B/63 C/64 D/65)`
[cnf] nnf of `¬ (a1 A/62 D/65)`
[cnf]
    ... NNF:
      `∀ A/62 B/63:mu C/64:mu.
         ((∀ D/65. ((¬ (a1 A/62 D/65)) ∨ (¬ (likes B/63 C/64 D/65))))
          ∨ (possibly_likes B/63 C/64 A/62))`
[cnf]
    ... miniscoped:
      `∀ A/62 B/63:mu C/64:mu.
         ((possibly_likes B/63 C/64 A/62)
          ∨ (∀ D/65.
                 ((¬ (likes B/63 C/64 D/65)) ∨ (¬ (a1 A/62 D/65)))))`
[cnf] rename `A/62` to `A/121` :subst {}
[cnf] rename `B/63` to `B/122` :subst {A/62 → A/121}
[cnf] rename `C/64` to `C/123` :subst {A/62 → A/121, B/63 → B/122}
[cnf]
    rename `D/65` to `D/124`
      :subst {A/62 → A/121, B/63 → B/122, C/64 → C/123}
[cnf]
    ... skolemized:
      `(¬ (likes B/122 C/123 D/124))
       ∨ (¬ (a1 A/121 D/124))
       ∨ (possibly_likes B/122 C/123 A/121)`
[cnf]
    ... CNF:
      `possibly_likes B/122 C/123 A/121 ∨ ¬ a1 A/121 D/124 ∨ 
         ¬ likes B/122 C/123 D/124`
[cnf]
    reduce
      `∀ A/66.
         (¬ (∀ B/67.
                ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/66.
         (¬ (∀ B/67.
                ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))))`
[cnf]
    nnf of
      `¬ (∀ B/67. ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))`
[cnf]
    nnf of `¬ ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67)))`
[cnf] nnf of `likes piotr pepsi B/67`
[cnf] nnf of `a3 A/66 B/67`
[cnf]
    ... NNF:
      `∀ A/66. (∃ B/67. ((a3 A/66 B/67) ∧ (likes piotr pepsi B/67)))`
[cnf]
    ... miniscoped:
      `∀ A/66. (∃ B/67. ((likes piotr pepsi B/67) ∧ (a3 A/66 B/67)))`
[cnf] rename `A/66` to `A/125` :subst {}
[skolem]
    creating skolem for
      `∃ B/67. ((likes piotr pepsi B/67) ∧ (a3 A/66 B/67))`
      with tyvars=[], vars=[A/125], subst={A/66 → A/125}
[skolem] new skolem symbol `sk_B1` with type `ι → ι`
[cnf] bind `B/67` to `sk_B1 A/125` :subst {A/66 → A/125}
[cnf]
    ... skolemized:
      `(a3 A/125 (sk_B1 A/125)) ∧ (likes piotr pepsi (sk_B1 A/125))`
[cnf] ... CNF: `a3 A/125 (sk_B1 A/125), likes piotr pepsi (sk_B1 A/125)`
[cnf]
    reduce
      `∀ A/68 B/69:mu C/70.
         ((likes B/69 pepsi C/70)
          ∨ (∀ D/71.
                 ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
          ∨ (¬ (a1 A/68 C/70)))`
      to CNF
[cnf]
    nnf of
      `∀ A/68 B/69:mu C/70.
         ((likes B/69 pepsi C/70)
          ∨ (∀ D/71.
                 ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
          ∨ (¬ (a1 A/68 C/70)))`
[cnf]
    nnf of
      `∀ B/69:mu C/70.
         ((likes B/69 pepsi C/70)
          ∨ (∀ D/71.
                 ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
          ∨ (¬ (a1 A/68 C/70)))`
[cnf]
    nnf of
      `∀ C/70.
         ((likes B/69 pepsi C/70)
          ∨ (∀ D/71.
                 ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
          ∨ (¬ (a1 A/68 C/70)))`
[cnf]
    nnf of
      `(likes B/69 pepsi C/70)
       ∨ (∀ D/71. ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
       ∨ (¬ (a1 A/68 C/70))`
[cnf] nnf of `likes B/69 pepsi C/70`
[cnf]
    nnf of `∀ D/71. ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71)))`
[cnf] nnf of `(¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))`
[cnf] nnf of `¬ (likes B/69 cola D/71)`
[cnf] nnf of `¬ (a1 C/70 D/71)`
[cnf] nnf of `¬ (a1 A/68 C/70)`
[cnf]
    ... NNF:
      `∀ A/68 B/69:mu C/70.
         ((¬ (a1 A/68 C/70))
          ∨ (∀ D/71.
                 ((¬ (a1 C/70 D/71)) ∨ (¬ (likes B/69 cola D/71))))
          ∨ (likes B/69 pepsi C/70))`
[cnf]
    ... miniscoped:
      `∀ A/68 B/69:mu C/70.
         ((likes B/69 pepsi C/70)
          ∨ (∀ D/71.
                 ((¬ (likes B/69 cola D/71)) ∨ (¬ (a1 C/70 D/71))))
          ∨ (¬ (a1 A/68 C/70)))`
[cnf] rename `A/68` to `A/127` :subst {}
[cnf] rename `B/69` to `B/128` :subst {A/68 → A/127}
[cnf] rename `C/70` to `C/129` :subst {A/68 → A/127, B/69 → B/128}
[cnf]
    rename `D/71` to `D/130`
      :subst {A/68 → A/127, B/69 → B/128, C/70 → C/129}
[cnf]
    ... skolemized:
      `(¬ (a1 A/127 C/129))
       ∨ (¬ (likes B/128 cola D/130))
       ∨ (¬ (a1 C/129 D/130))
       ∨ (likes B/128 pepsi C/129)`
[cnf]
    ... CNF:
      `likes B/128 pepsi C/129 ∨ ¬ a1 C/129 D/130 ∨ 
         ¬ likes B/128 cola D/130 ∨ ¬ a1 A/127 C/129`
[cnf]
    reduce
      `∀ A/72 B/73:mu C/74:mu.
         ((possibly_likes B/73 C/74 A/72)
          ∨ (∀ D/75.
                 ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
      to CNF
[cnf]
    nnf of
      `∀ A/72 B/73:mu C/74:mu.
         ((possibly_likes B/73 C/74 A/72)
          ∨ (∀ D/75.
                 ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
[cnf]
    nnf of
      `∀ B/73:mu C/74:mu.
         ((possibly_likes B/73 C/74 A/72)
          ∨ (∀ D/75.
                 ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
[cnf]
    nnf of
      `∀ C/74:mu.
         ((possibly_likes B/73 C/74 A/72)
          ∨ (∀ D/75.
                 ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
[cnf]
    nnf of
      `(possibly_likes B/73 C/74 A/72)
       ∨ (∀ D/75. ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))))`
[cnf] nnf of `possibly_likes B/73 C/74 A/72`
[cnf]
    nnf of `∀ D/75. ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))`
[cnf] nnf of `(¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75))`
[cnf] nnf of `¬ (likes B/73 C/74 D/75)`
[cnf] nnf of `¬ (a2 A/72 D/75)`
[cnf]
    ... NNF:
      `∀ A/72 B/73:mu C/74:mu.
         ((∀ D/75. ((¬ (a2 A/72 D/75)) ∨ (¬ (likes B/73 C/74 D/75))))
          ∨ (possibly_likes B/73 C/74 A/72))`
[cnf]
    ... miniscoped:
      `∀ A/72 B/73:mu C/74:mu.
         ((possibly_likes B/73 C/74 A/72)
          ∨ (∀ D/75.
                 ((¬ (likes B/73 C/74 D/75)) ∨ (¬ (a2 A/72 D/75)))))`
[cnf] rename `A/72` to `A/131` :subst {}
[cnf] rename `B/73` to `B/132` :subst {A/72 → A/131}
[cnf] rename `C/74` to `C/133` :subst {A/72 → A/131, B/73 → B/132}
[cnf]
    rename `D/75` to `D/134`
      :subst {A/72 → A/131, B/73 → B/132, C/74 → C/133}
[cnf]
    ... skolemized:
      `(¬ (likes B/132 C/133 D/134))
       ∨ (¬ (a2 A/131 D/134))
       ∨ (possibly_likes B/132 C/133 A/131)`
[cnf]
    ... CNF:
      `possibly_likes B/132 C/133 A/131 ∨ ¬ a2 A/131 D/134 ∨ 
         ¬ likes B/132 C/133 D/134`
[cnf]
    reduce
      `∀ A/76 B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))`
      to CNF
[cnf]
    nnf of
      `∀ A/76 B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))`
[cnf]
    nnf of `∀ B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))`
[cnf] nnf of `(likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77))`
[cnf] nnf of `likes piotr pepsi B/77`
[cnf] nnf of `¬ (a1 A/76 B/77)`
[cnf]
    ... NNF:
      `∀ A/76 B/77. ((¬ (a1 A/76 B/77)) ∨ (likes piotr pepsi B/77))`
[cnf]
    ... miniscoped:
      `∀ A/76 B/77. ((likes piotr pepsi B/77) ∨ (¬ (a1 A/76 B/77)))`
[cnf] rename `A/76` to `A/135` :subst {}
[cnf] rename `B/77` to `B/136` :subst {A/76 → A/135}
[cnf]
    ... skolemized: `(¬ (a1 A/135 B/136)) ∨ (likes piotr pepsi B/136)`
[cnf] ... CNF: `likes piotr pepsi B/136 ∨ ¬ a1 A/135 B/136`
[cnf]
    reduce `∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79)))`
      to CNF
[cnf]
    nnf of `∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79)))`
[cnf] nnf of `∀ B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79)))`
[cnf] nnf of `(likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))`
[cnf] nnf of `likes jan cola B/79`
[cnf] nnf of `¬ (a1 A/78 B/79)`
[cnf]
    ... NNF: `∀ A/78 B/79. ((¬ (a1 A/78 B/79)) ∨ (likes jan cola B/79))`
[cnf]
    ... miniscoped:
      `∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79)))`
[cnf] rename `A/78` to `A/137` :subst {}
[cnf] rename `B/79` to `B/138` :subst {A/78 → A/137}
[cnf] ... skolemized: `(¬ (a1 A/137 B/138)) ∨ (likes jan cola B/138)`
[cnf] ... CNF: `likes jan cola B/138 ∨ ¬ a1 A/137 B/138`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type.`
    into `val [file "../hoe.extra/tests/agt035.p" "mu_type"] mu : type.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
         (ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
         (ι → prop) → (ι → prop) → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "mand_type"] mand :
            (ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
         (ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
         (ι → prop) → (ι → prop) → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "mimplies_type"] mimplies :
            (ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
         (mu → ι → prop) → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
         (mu → ι → prop) → ι → prop.`
    into `val
            [file "../hoe.extra/tests/agt035.p" "mforall_ind_type"] mforall_ind :
            (mu → ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
         (ι → ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
         (ι → ι → prop) → (ι → prop) → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "mbox_type"] mbox :
            (ι → ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
         (ι → ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
         (ι → ι → prop) → (ι → prop) → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "mdia_type"] mdia :
            (ι → ι → prop) → (ι → prop) → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
         (ι → prop) → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
         (ι → prop) → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "mvalid_type"] mvalid :
            (ι → prop) → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
         ι → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
         ι → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "a1_type"] a1 :
            ι → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
         ι → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
         ι → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "a2_type"] a2 :
            ι → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
         ι → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
         ι → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "a3_type"] a3 :
            ι → ι → prop.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu.`
    into `val [file "../hoe.extra/tests/agt035.p" "jan_type"] jan : mu.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu.`
    into `val [file "../hoe.extra/tests/agt035.p" "piotr_type"] piotr : mu.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu.`
    into `val [file "../hoe.extra/tests/agt035.p" "cola_type"] cola : mu.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu.`
    into `val [file "../hoe.extra/tests/agt035.p" "pepsi_type"] pepsi : mu.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu.`
[cnf]
    convert `val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu.`
    into `val [file "../hoe.extra/tests/agt035.p" "beer_type"] beer : mu.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
         mu → mu → ι → prop.`
[cnf]
    convert
      `val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
         mu → mu → ι → prop.`
    into `val [file "../hoe.extra/tests/agt035.p" "likes_type"] likes :
            mu → mu → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
         mu → mu → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
         mu → mu → ι → prop.`
    into `val
            [file "../hoe.extra/tests/agt035.p" "very_much_likes_type"] very_much_likes :
            mu → mu → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
         mu → mu → ι → prop.`
[cnf]
    convert
      `val
         [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
         mu → mu → ι → prop.`
    into `val
            [file "../hoe.extra/tests/agt035.p" "possibly_likes_type"] possibly_likes :
            mu → mu → ι → prop.`
[cnf]
    convert
      `assert
         possibly_likes B/83 C/84 A/82 ∨ 
         ¬ a3 A/82 D/85 ∨ 
         ¬ likes B/83 C/84 D/85.`
[cnf]
    convert
      `assert
         possibly_likes B/83 C/84 A/82 ∨ 
         ¬ a3 A/82 D/85 ∨ 
         ¬ likes B/83 C/84 D/85.`
    into `assert
            possibly_likes X0 X1 X2 ∨ ¬ a3 X2 X3 ∨ ¬ likes X0 X1 X3.`
[cnf] convert `assert likes jan pepsi B/87 ∨ ¬ a2 A/86 B/87.`
[cnf]
    convert `assert likes jan pepsi B/87 ∨ ¬ a2 A/86 B/87.`
    into `assert likes jan pepsi X4 ∨ ¬ a2 X5 X4.`
[cnf] convert `assert likes piotr cola B/89 ∨ ¬ a1 A/88 B/89.`
[cnf]
    convert `assert likes piotr cola B/89 ∨ ¬ a1 A/88 B/89.`
    into `assert likes piotr cola X6 ∨ ¬ a1 X7 X6.`
[cnf]
    convert
      `assert
         likes B/91 cola C/92 ∨ 
         ¬ likes B/91 pepsi C/92 ∨ 
         ¬ a2 A/90 C/92.`
[cnf]
    convert
      `assert
         likes B/91 cola C/92 ∨ 
         ¬ likes B/91 pepsi C/92 ∨ 
         ¬ a2 A/90 C/92.`
    into `assert likes X8 cola X9 ∨ ¬ likes X8 pepsi X9 ∨ ¬ a2 X10 X9.`
[cnf] convert `val [internal] sk_D : mu → mu → ι → ι.`
[cnf]
    convert `val [internal] sk_D : mu → mu → ι → ι.`
    into `val [internal] sk_D : mu → mu → ι → ι.`
[cnf]
    convert
      `assert
         very_much_likes B/94 C/95 A/93 ∨ 
         ¬ very_much_likes B/94 C/95 (sk_D C/95 B/94 A/93).`
[cnf]
    convert
      `assert
         very_much_likes B/94 C/95 A/93 ∨ 
         ¬ very_much_likes B/94 C/95 (sk_D C/95 B/94 A/93).`
    into `assert
            very_much_likes X11 X12 X13 ∨ 
            ¬ very_much_likes X11 X12 (sk_D X12 X11 X13).`
[cnf]
    convert
      `assert
         very_much_likes B/94 C/95 A/93 ∨ a3 A/93 (sk_D C/95 B/94 A/93).`
[cnf]
    convert
      `assert
         very_much_likes B/94 C/95 A/93 ∨ a3 A/93 (sk_D C/95 B/94 A/93).`
    into `assert very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13).`
[cnf] convert `negated_goal ¬ mvalid (likes jan cola) # skolems: [].`
[cnf]
    convert `negated_goal ¬ mvalid (likes jan cola) # skolems: [].`
    into `negated_goal ¬ mvalid (likes jan cola) # skolems: [].`
[cnf] convert `val [internal] sk_A : ι.`
[cnf]
    convert `val [internal] sk_A : ι.` into `val [internal] sk_A : ι.`
[cnf] convert `assert ¬ likes jan cola sk_A.`
[cnf]
    convert `assert ¬ likes jan cola sk_A.`
    into `assert ¬ likes jan cola sk_A.`
[cnf] convert `val [internal] sk_B : ι → ι.`
[cnf]
    convert `val [internal] sk_B : ι → ι.`
    into `val [internal] sk_B : ι → ι.`
[cnf] convert `assert a1 A/98 (sk_B A/98).`
[cnf]
    convert `assert a1 A/98 (sk_B A/98).` into `assert a1 X14 (sk_B X14).`
[cnf] convert `assert likes piotr beer (sk_B A/98).`
[cnf]
    convert `assert likes piotr beer (sk_B A/98).`
    into `assert likes piotr beer (sk_B X14).`
[cnf] convert `assert likes jan cola B/101 ∨ ¬ a3 A/100 B/101.`
[cnf]
    convert `assert likes jan cola B/101 ∨ ¬ a3 A/100 B/101.`
    into `assert likes jan cola X15 ∨ ¬ a3 X16 X15.`
[cnf]
    convert
      `assert
         likes B/103 C/104 A/102 ∨ 
         ¬ a3 A/102 D/105 ∨ 
         ¬ very_much_likes B/103 C/104 D/105.`
[cnf]
    convert
      `assert
         likes B/103 C/104 A/102 ∨ 
         ¬ a3 A/102 D/105 ∨ 
         ¬ very_much_likes B/103 C/104 D/105.`
    into `assert
            likes X17 X18 X19 ∨ ¬ a3 X19 X20 ∨ 
            ¬ very_much_likes X17 X18 X20.`
[cnf]
    convert
      `assert zip_tseitin0 E/51 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/51.`
[cnf]
    convert
      `assert zip_tseitin0 E/51 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/51.`
    into `assert zip_tseitin0 X21 X22 X23 X24 ∨ ¬ likes X24 X23 X21.`
[cnf]
    convert `assert zip_tseitin0 E/51 D/50 C/49 B/48 ∨ a1 D/50 E/51.`
[cnf]
    convert `assert zip_tseitin0 E/51 D/50 C/49 B/48 ∨ a1 D/50 E/51.`
    into `assert zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21.`
[cnf]
    convert `val [internal] zip_tseitin0 : ι → ι → mu → mu → prop.`
[cnf]
    convert `val [internal] zip_tseitin0 : ι → ι → mu → mu → prop.`
    into `val [internal] zip_tseitin0 : ι → ι → mu → mu → prop.`
[cnf]
    convert
      `assert zip_tseitin1 E/52 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/52.`
[cnf]
    convert
      `assert zip_tseitin1 E/52 D/50 C/49 B/48 ∨ ¬ likes B/48 C/49 E/52.`
    into `assert zip_tseitin1 X25 X22 X23 X24 ∨ ¬ likes X24 X23 X25.`
[cnf]
    convert `assert zip_tseitin1 E/52 D/50 C/49 B/48 ∨ a2 D/50 E/52.`
[cnf]
    convert `assert zip_tseitin1 E/52 D/50 C/49 B/48 ∨ a2 D/50 E/52.`
    into `assert zip_tseitin1 X25 X22 X23 X24 ∨ a2 X22 X25.`
[cnf]
    convert `val [internal] zip_tseitin1 : ι → ι → mu → mu → prop.`
[cnf]
    convert `val [internal] zip_tseitin1 : ι → ι → mu → mu → prop.`
    into `val [internal] zip_tseitin1 : ι → ι → mu → mu → prop.`
[cnf] convert `val [internal] sk_E1 : ι → mu → mu → ι.`
[cnf]
    convert `val [internal] sk_E1 : ι → mu → mu → ι.`
    into `val [internal] sk_E1 : ι → mu → mu → ι.`
[cnf] convert `val [internal] sk_E : ι → mu → mu → ι.`
[cnf]
    convert `val [internal] sk_E : ι → mu → mu → ι.`
    into `val [internal] sk_E : ι → mu → mu → ι.`
[cnf]
    convert
      `assert
         very_much_likes B/107 C/108 D/109 ∨ 
         ¬ zip_tseitin1 (sk_E D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ zip_tseitin0 (sk_E1 D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ likes B/107 C/108 D/109 ∨ 
         ¬ a3 A/106 D/109.`
[cnf]
    convert
      `assert
         very_much_likes B/107 C/108 D/109 ∨ 
         ¬ zip_tseitin1 (sk_E D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ zip_tseitin0 (sk_E1 D/109 C/108 B/107) D/109 C/108 B/107 ∨ 
         ¬ likes B/107 C/108 D/109 ∨ 
         ¬ a3 A/106 D/109.`
    into `assert
            very_much_likes X26 X27 X28 ∨ 
            ¬ zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26 ∨ 
            ¬ zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
            ¬ likes X26 X27 X28 ∨ ¬ a3 X29 X28.`
[cnf] convert `assert likes piotr beer B/113 ∨ ¬ a1 A/112 B/113.`
[cnf]
    convert `assert likes piotr beer B/113 ∨ ¬ a1 A/112 B/113.`
    into `assert likes piotr beer X30 ∨ ¬ a1 X31 X30.`
[cnf]
    convert
      `assert
         likes B/115 cola C/116 ∨ 
         ¬ a1 C/116 D/117 ∨ 
         ¬ likes B/115 pepsi D/117 ∨ 
         ¬ a1 A/114 C/116.`
[cnf]
    convert
      `assert
         likes B/115 cola C/116 ∨ 
         ¬ a1 C/116 D/117 ∨ 
         ¬ likes B/115 pepsi D/117 ∨ 
         ¬ a1 A/114 C/116.`
    into `assert
            likes X32 cola X33 ∨ ¬ a1 X33 X34 ∨ 
            ¬ likes X32 pepsi X34 ∨ ¬ a1 X35 X33.`
[cnf]
    convert
      `assert
         likes B/119 pepsi C/120 ∨ 
         ¬ likes B/119 cola C/120 ∨ 
         ¬ a2 A/118 C/120.`
[cnf]
    convert
      `assert
         likes B/119 pepsi C/120 ∨ 
         ¬ likes B/119 cola C/120 ∨ 
         ¬ a2 A/118 C/120.`
    into `assert
            likes X36 pepsi X37 ∨ ¬ likes X36 cola X37 ∨ ¬ a2 X38 X37.`
[cnf]
    convert
      `assert
         possibly_likes B/122 C/123 A/121 ∨ 
         ¬ a1 A/121 D/124 ∨ 
         ¬ likes B/122 C/123 D/124.`
[cnf]
    convert
      `assert
         possibly_likes B/122 C/123 A/121 ∨ 
         ¬ a1 A/121 D/124 ∨ 
         ¬ likes B/122 C/123 D/124.`
    into `assert
            possibly_likes X39 X40 X41 ∨ ¬ a1 X41 X42 ∨ 
            ¬ likes X39 X40 X42.`
[cnf] convert `val [internal] sk_B1 : ι → ι.`
[cnf]
    convert `val [internal] sk_B1 : ι → ι.`
    into `val [internal] sk_B1 : ι → ι.`
[cnf] convert `assert a3 A/125 (sk_B1 A/125).`
[cnf]
    convert `assert a3 A/125 (sk_B1 A/125).`
    into `assert a3 X43 (sk_B1 X43).`
[cnf] convert `assert likes piotr pepsi (sk_B1 A/125).`
[cnf]
    convert `assert likes piotr pepsi (sk_B1 A/125).`
    into `assert likes piotr pepsi (sk_B1 X43).`
[cnf]
    convert
      `assert
         likes B/128 pepsi C/129 ∨ 
         ¬ a1 C/129 D/130 ∨ 
         ¬ likes B/128 cola D/130 ∨ 
         ¬ a1 A/127 C/129.`
[cnf]
    convert
      `assert
         likes B/128 pepsi C/129 ∨ 
         ¬ a1 C/129 D/130 ∨ 
         ¬ likes B/128 cola D/130 ∨ 
         ¬ a1 A/127 C/129.`
    into `assert
            likes X44 pepsi X45 ∨ ¬ a1 X45 X46 ∨ 
            ¬ likes X44 cola X46 ∨ ¬ a1 X47 X45.`
[cnf]
    convert
      `assert
         possibly_likes B/132 C/133 A/131 ∨ 
         ¬ a2 A/131 D/134 ∨ 
         ¬ likes B/132 C/133 D/134.`
[cnf]
    convert
      `assert
         possibly_likes B/132 C/133 A/131 ∨ 
         ¬ a2 A/131 D/134 ∨ 
         ¬ likes B/132 C/133 D/134.`
    into `assert
            possibly_likes X48 X49 X50 ∨ ¬ a2 X50 X51 ∨ 
            ¬ likes X48 X49 X51.`
[cnf] convert `assert likes piotr pepsi B/136 ∨ ¬ a1 A/135 B/136.`
[cnf]
    convert `assert likes piotr pepsi B/136 ∨ ¬ a1 A/135 B/136.`
    into `assert likes piotr pepsi X52 ∨ ¬ a1 X53 X52.`
[cnf] convert `assert likes jan cola B/138 ∨ ¬ a1 A/137 B/138.`
[cnf]
    convert `assert likes jan cola B/138 ∨ ¬ a1 A/137 B/138.`
    into `assert likes jan cola X54 ∨ ¬ a1 X55 X54.`
[zip.ho] problem is HO
[zip] terminate phase cnf
[zip]
    signature:
      {mu: type false, 
       mand: (ι → prop) → (ι → prop) → ι → prop false, 
       mimplies: (ι → prop) → (ι → prop) → ι → prop false, 
       mforall_ind: (mu → ι → prop) → ι → prop false, 
       mbox: (ι → ι → prop) → (ι → prop) → ι → prop false, 
       mdia: (ι → ι → prop) → (ι → prop) → ι → prop false, 
       mvalid: (ι → prop) → prop true, 
       a1: ι → ι → prop false, 
       a2: ι → ι → prop false, 
       a3: ι → ι → prop false, 
       jan: mu true, 
       piotr: mu false, 
       cola: mu true, 
       pepsi: mu false, 
       beer: mu false, 
       likes: mu → mu → ι → prop true, 
       very_much_likes: mu → mu → ι → prop false, 
       possibly_likes: mu → mu → ι → prop false, 
       zip_tseitin0: ι → ι → mu → mu → prop false, 
       zip_tseitin1: ι → ι → mu → mu → prop false, 
       sk_D: mu → mu → ι → ι false, 
       sk_A: ι false, 
       sk_B: ι → ι false, 
       sk_E: ι → mu → mu → ι false, 
       sk_E1: ι → mu → mu → ι false, 
       sk_B1: ι → ι false}
[zip]
    (classification:
     {(sk_B1 : ι → ι (skolem)),
      (sk_E1 : ι → mu → mu → ι (skolem)),
      (sk_E : ι → mu → mu → ι (skolem)),
      (sk_B : ι → ι (skolem)),
      (sk_A : ι (skolem)),
      (sk_D : mu → mu → ι → ι (skolem)),
      (zip_tseitin1 : ι → ι → mu → mu → prop (other)),
      (zip_tseitin0 : ι → ι → mu → mu → prop (other)),
      (possibly_likes : mu → mu → ι → prop (other)),
      (very_much_likes : mu → mu → ι → prop (other)),
      (likes : mu → mu → ι → prop (other)),
      (beer : mu (other)),
      (pepsi : mu (other)),
      (cola : mu (other)),
      (piotr : mu (other)),
      (jan : mu (other)),
      (a3 : ι → ι → prop (other)),
      (a2 : ι → ι → prop (other)),
      (a1 : ι → ι → prop (other)),
      (mvalid : (ι → prop) → prop (other)),
      (mdia : (ι → ι → prop) → (ι → prop) → ι → prop (other)),
      (mbox : (ι → ι → prop) → (ι → prop) → ι → prop (other)),
      (mforall_ind : (mu → ι → prop) → ι → prop (other)),
      (mimplies : (ι → prop) → (ι → prop) → ι → prop (other)),
      (mand : (ι → prop) → (ι → prop) → ι → prop (other)),
      (mu : type (other))})
[zip] start phase compute_prec
[compute_prec] 2 precedence constraint(s)
[zip] terminate phase compute_prec
[zip]
    precedence:
      [likes < a1 < cola < pepsi < a3 < a2 < jan < piotr < very_much_likes < 
         possibly_likes < zip_tseitin0 < zip_tseitin1 < beer < sk_B < 
         sk_B1 < sk_D < mvalid < sk_A < sk_E < sk_E1 < mand < mbox < mdia < 
         mforall_ind < mimplies < mu]
[zip] start phase compute_ord_select
[zip] ordering kbo
[zip] selection function: default
[zip] terminate phase compute_ord_select
[zip] start phase make_ctx
[zip] terminate phase make_ctx
[zip] start phase make_env
[] create new SAT solver
[] enable Avatar
[zip] register extension Avatar (split: false)
[zip.msat] check_real
[zip.heuristics] register heuristics...
[zip.ho] HO rules disabled
[ind_ty] setup inductive types calculus
[rewrite] register Rewriting to Env...
[zip.env] [ Adding rule rewrite_defs to env ]
[zip.env] trigger on_input_statement
[zip.env]
    clauses:
      forall (X0:mu) (X1:mu) X2 X3.
      [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1 
      forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2 
      forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3 
      forall (X8:mu) X9 X10.
      [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4 
      forall (X11:mu) (X12:mu) X13.
      [very_much_likes X11 X12 X13 ∨ 
       ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5 
      forall (X11:mu) (X12:mu) X13.
      [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6 
      [¬mvalid (likes jan cola)*]/7 
      [¬likes jan cola sk_A*]/8 
      forall X14. [a1 X14 (sk_B X14)*]/9 
      forall X14. [likes piotr beer (sk_B X14)*]/10 
      forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11 
      forall (X17:mu) (X18:mu) X19 X20.
      [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
       ¬very_much_likes X17 X18 X20*]/12 
      forall X21 X22 (X23:mu) (X24:mu).
      [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13 
      forall X21 X22 (X23:mu) (X24:mu).
      [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14 
      forall X22 (X23:mu) (X24:mu) X25.
      [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15 
      forall X22 (X23:mu) (X24:mu) X25.
      [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16 
      forall (X26:mu) (X27:mu) X28 X29.
      [very_much_likes X26 X27 X28 ∨ 
       ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
       ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
       ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17 
      forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18 
      forall (X32:mu) X33 X34 X35.
      [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ ¬likes X32 pepsi X34* ∨ 
       ¬a1 X35 X33*]/19 
      forall (X36:mu) X37 X38.
      [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20 
      forall (X39:mu) (X40:mu) X41 X42.
      [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
       ¬likes X39 X40 X42*]/21 
      forall X43. [a3 X43 (sk_B1 X43)*]/22 
      forall X43. [likes piotr pepsi (sk_B1 X43)*]/23 
      forall (X44:mu) X45 X46 X47.
      [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ ¬likes X44 cola X46* ∨ 
       ¬a1 X47 X45*]/24 
      forall (X48:mu) (X49:mu) X50 X51.
      [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
       ¬likes X48 X49 X51*]/25 
      forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26 
      forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27
    sos: 
[zip] terminate phase make_env
[zip] start phase pre_saturate
[zip] terminate phase pre_saturate
[zip] start phase saturate
[zip.env] rewrite clause `[¬mvalid (likes jan cola)*]/7`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `[¬mvalid (likes jan cola)*]/7`...
[zip.env] rewrite clause `[¬mvalid (likes jan cola)*]/7`...
[zip.saturate] ### step     0 ###
[zip.saturate]
    given (0 steps, penalty 1): `[¬mvalid (likes jan cola)*]/7`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `[¬mvalid (likes jan cola)*]/7`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env] rewrite clause `[¬likes jan cola sk_A*]/8`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `[¬likes jan cola sk_A*]/8`...
[zip.env] rewrite clause `[¬likes jan cola sk_A*]/8`...
[zip.saturate] ### step     1 ###
[zip.saturate] given (1 steps, penalty 1): `[¬likes jan cola sk_A*]/8`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,[¬likes jan cola sk_A*]/8}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `[¬likes jan cola sk_A*]/8`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`...
[zip.env]
    rewrite clause
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`...
[zip.saturate] ### step     2 ###
[zip.saturate]
    given (2 steps, penalty 1):
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`...
[zip.env]
    rewrite clause
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`...
[zip.saturate] ### step     3 ###
[zip.saturate]
    given (3 steps, penalty 1):
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env] rewrite clause `forall X14. [a1 X14 (sk_B X14)*]/9`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X14. [a1 X14 (sk_B X14)*]/9`...
[zip.env] rewrite clause `forall X14. [a1 X14 (sk_B X14)*]/9`...
[zip.saturate] ### step     4 ###
[zip.saturate]
    given (4 steps, penalty 1): `forall X14. [a1 X14 (sk_B X14)*]/9`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[0] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_B X14[0], X55[1] → X14[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[0] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] passive_lit=a1 X14 (sk_B X14)
         p=0.←.ε)
      with subst={X14[1] → X14[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X14. [a1 X14 (sk_B X14)*]/9[0] passive_lit=a1 X14 (sk_B X14)
         p=0.←.ε)
      with subst={X14[1] → X14[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X14. [a1 X14 (sk_B X14)*]/9`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola (sk_B X0)*]/28]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.saturate] ### step     5 ###
[zip.saturate]
    given (5 steps, penalty 1): `forall X0. [likes jan cola (sk_B X0)*]/28`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[0]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         passive_lit=likes jan cola (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall X0. [likes jan cola (sk_B X0)*]/28[0]
         passive_lit=likes jan cola (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/28`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env] rewrite clause `forall X43. [a3 X43 (sk_B1 X43)*]/22`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X43. [a3 X43 (sk_B1 X43)*]/22`...
[zip.env] rewrite clause `forall X43. [a3 X43 (sk_B1 X43)*]/22`...
[zip.saturate] ### step     6 ###
[zip.saturate]
    given (6 steps, penalty 1): `forall X43. [a3 X43 (sk_B1 X43)*]/22`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[0] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11[1]
         passive_lit=¬a3 X16 X15 p=1.←.ε)
      with subst={X15[1] → sk_B1 X43[0], X16[1] → X43[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[0] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] passive_lit=a3 X43 (sk_B1 X43)
         p=0.←.ε)
      with subst={X43[1] → X43[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[0] passive_lit=a3 X43 (sk_B1 X43)
         p=0.←.ε)
      with subst={X43[1] → X43[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X43. [a3 X43 (sk_B1 X43)*]/22`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola (sk_B1 X0)*]/29]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.saturate] ### step     7 ###
[zip.saturate]
    given (7 steps, penalty 1): `forall X0. [likes jan cola (sk_B1 X0)*]/29`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B1 X0)*]/29[0]
         s=likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0. [likes jan cola (sk_B1 X0)*]/29[1]
         passive_lit=likes jan cola (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B1 X0)*]/29[1]
         s=likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0. [likes jan cola (sk_B1 X0)*]/29[0]
         passive_lit=likes jan cola (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B1 X0)*]/29`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause `forall X14. [likes piotr beer (sk_B X14)*]/10`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X14. [likes piotr beer (sk_B X14)*]/10`...
[zip.env]
    rewrite clause `forall X14. [likes piotr beer (sk_B X14)*]/10`...
[zip.saturate] ### step     8 ###
[zip.saturate]
    given (8 steps, penalty 1):
      `forall X14. [likes piotr beer (sk_B X14)*]/10`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X14. [likes piotr beer (sk_B X14)*]/10[0]
         s=likes piotr beer (sk_B X14) t=true, t'=true)
      (forall X14. [likes piotr beer (sk_B X14)*]/10[1]
         passive_lit=likes piotr beer (sk_B X14) p=0.←.ε)
      with subst={X14[1] → X14[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [likes piotr beer (sk_B X14)*]/10[1]
         s=likes piotr beer (sk_B X14) t=true, t'=true)
      (forall X14. [likes piotr beer (sk_B X14)*]/10[0]
         passive_lit=likes piotr beer (sk_B X14) p=0.←.ε)
      with subst={X14[1] → X14[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X14. [likes piotr beer (sk_B X14)*]/10`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`...
[zip.env]
    rewrite clause `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`...
[zip.saturate] ### step     9 ###
[zip.saturate]
    given (9 steps, penalty 1):
      `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`
[zip.env]
    do binary inferences with current active set:
      `{[¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[0]
         s=likes piotr pepsi (sk_B1 X43) t=true, t'=true)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[1]
         passive_lit=likes piotr pepsi (sk_B1 X43) p=0.←.ε)
      with subst={X43[1] → X43[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[1]
         s=likes piotr pepsi (sk_B1 X43) t=true, t'=true)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[0]
         passive_lit=likes piotr pepsi (sk_B1 X43) p=0.←.ε)
      with subst={X43[1] → X43[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`...
[zip.saturate] ### step    10 ###
[zip.saturate]
    given (10 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1[0]
         passive_lit=¬a3 X2 X3 p=1.←.ε)
      with subst={X3[0] → sk_B1 X43[1], X43[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30]
[zip.env]
    rewrite clause
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`...
[zip.env]
    rewrite clause
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`...
[zip.saturate] ### step    11 ###
[zip.saturate]
    given (11 steps, penalty 1):
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`...
[zip.env]
    rewrite clause
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`...
[zip.saturate] ### step    12 ###
[zip.saturate]
    given (12 steps, penalty 1):
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[0]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[0] → sk_B X14[1], X14[1] → X7[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr cola (sk_B X0)*]/31]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.saturate] ### step    13 ###
[zip.saturate]
    given (13 steps, penalty 1):
      `forall X0. [likes piotr cola (sk_B X0)*]/31`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0. [likes piotr cola (sk_B X0)*]/31}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[0]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         passive_lit=likes piotr cola (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[0]
         passive_lit=likes piotr cola (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/31`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`...
[zip.env]
    rewrite clause
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`...
[zip.saturate] ### step    14 ###
[zip.saturate]
    given (14 steps, penalty 1):
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0. [likes piotr cola (sk_B X0)*]/31}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[0]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[0] → sk_B X14[1], X14[1] → X31[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [likes piotr beer (sk_B X0)*]/32`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr beer (sk_B X0)*]/32`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr beer (sk_B X0)*]/32]
[zip.env]
    rewrite clause `forall X0. [likes piotr beer (sk_B X0)*]/32`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr beer (sk_B X0)*]/32`...
[zip.sup]
    (subsumes
     :c1 likes piotr beer (sk_B X14)
     :c2 likes piotr beer (sk_B X0)
     :subst {X14[0] → X0[1]}
[zip.sup]
    forall X0. [likes piotr beer (sk_B X0)*]/32 subsumed by active set
[zip.saturate]
    given clause forall X0. [likes piotr beer (sk_B X0)*]/32 is redundant
[zip.env]
    rewrite clause
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`...
[zip.env]
    rewrite clause
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`...
[zip.saturate] ### step    16 ###
[zip.saturate]
    given (16 steps, penalty 1):
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0. [likes piotr cola (sk_B X0)*]/31}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[0]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[0] → sk_B X14[1], X14[1] → X53[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr pepsi (sk_B X0)*]/33]
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.saturate] ### step    17 ###
[zip.saturate]
    given (17 steps, penalty 1):
      `forall X0. [likes piotr pepsi (sk_B X0)*]/33`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[0]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         passive_lit=likes piotr pepsi (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[0]
         passive_lit=likes piotr pepsi (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/33`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.saturate] ### step    18 ###
[zip.saturate]
    given (18 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B1 X0)*]/29[1]
         s=likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30[0]
         passive_lit=¬likes X2 X1 (sk_B1 X0) p=0.←.ε)
      with subst={X1[0] → cola[1], X2[0] → jan[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[1]
         s=likes piotr pepsi (sk_B1 X43) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30[0]
         passive_lit=¬likes X2 X1 (sk_B1 X0) p=0.←.ε)
      with subst={X1[0] → pepsi[1], X2[0] → piotr[1], X43[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan cola X0*]/34, 
       forall X0. [possibly_likes piotr pepsi X0*]/35]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.saturate] ### step    19 ###
[zip.saturate]
    given (19 steps, penalty 1):
      `forall X0. [possibly_likes jan cola X0*]/34`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes jan cola X0*]/34[0]
         s=possibly_likes jan cola X0 t=true, t'=true)
      (forall X0. [possibly_likes jan cola X0*]/34[1]
         passive_lit=possibly_likes jan cola X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes jan cola X0*]/34[1]
         s=possibly_likes jan cola X0 t=true, t'=true)
      (forall X0. [possibly_likes jan cola X0*]/34[0]
         passive_lit=possibly_likes jan cola X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/34`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.saturate] ### step    20 ###
[zip.saturate]
    given (20 steps, penalty 1):
      `forall X0. [possibly_likes piotr pepsi X0*]/35`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr pepsi X0*]/35[0]
         s=possibly_likes piotr pepsi X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr pepsi X0*]/35[1]
         passive_lit=possibly_likes piotr pepsi X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr pepsi X0*]/35[1]
         s=possibly_likes piotr pepsi X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr pepsi X0*]/35[0]
         passive_lit=possibly_likes piotr pepsi X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/35`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`...
[zip.env]
    rewrite clause
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`...
[zip.saturate] ### step    21 ###
[zip.saturate]
    given (21 steps, penalty 1):
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[0]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[0] → piotr[1], X9[0] → sk_B X0[1]}
[zip.sup]
    sup, kind sup(0)
      (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23[1]
         s=likes piotr pepsi (sk_B1 X43) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[0]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[0] → piotr[1], X9[0] → sk_B1 X43[1]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ likes piotr cola (sk_B X0)*]/36`...
[zip.sup]
    demod:
      t=likes piotr cola (sk_B X0)[0],
      l=likes piotr cola (sk_B X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr cola (sk_B X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ likes piotr cola (sk_B X0)*]/36
      into forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/38
      using {(forall X0. [likes piotr cola (sk_B X0)*]/31
              :subst {X0[1] → X0[0]}[1])}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/38`...
[zip.sup]
    forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/38 is a semantic tautology
[zip.saturate]
    clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/38` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37]
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.saturate] ### step    22 ###
[zip.saturate]
    given (22 steps, penalty 1):
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`...
[zip.env]
    rewrite clause
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`...
[zip.saturate] ### step    23 ###
[zip.saturate]
    given (23 steps, penalty 1):
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`...
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`...
[zip.saturate] ### step    24 ###
[zip.saturate]
    given (24 steps, penalty 1):
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[0]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[0]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`...
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`...
[zip.saturate] ### step    25 ###
[zip.saturate]
    given (25 steps, penalty 1):
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[0]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[1]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[1]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[0]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`...
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`...
[zip.saturate] ### step    26 ###
[zip.saturate]
    given (26 steps, penalty 1):
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[0]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[0]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[1]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[0]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[0]
         passive_lit=zip_tseitin0 X21 X22 X23 X24 p=0.←.ε)
      with subst={X21[1] → X21[0], 
                  X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`...
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`...
[zip.saturate] ### step    27 ###
[zip.saturate]
    given (27 steps, penalty 1):
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[0]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[1]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[0]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[1]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[1]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[0]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[1]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[0]
         passive_lit=zip_tseitin1 X25 X22 X23 X24 p=0.←.ε)
      with subst={X22[1] → X22[0], 
                  X23[1] → X23[0], 
                  X24[1] → X24[0], 
                  X25[1] → X25[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`...
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`...
[zip.saturate] ### step    28 ###
[zip.saturate]
    given (28 steps, penalty 1):
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`...
[zip.env]
    rewrite clause
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`...
[zip.saturate] ### step    29 ###
[zip.saturate]
    given (29 steps, penalty 1):
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12[0] passive_lit=¬a3 X19 X20
         p=1.←.ε)
      with subst={X20[0] → sk_B1 X43[1], X43[1] → X19[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.saturate] ### step    30 ###
[zip.saturate]
    given (30 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`...
[zip.env]
    rewrite clause
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`...
[zip.saturate] ### step    31 ###
[zip.saturate]
    given (31 steps, penalty 1):
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[0] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X42[0] → sk_B X14[1], X14[1] → X41[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.saturate] ### step    32 ###
[zip.saturate]
    given (32 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[0]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X1[0] → cola[1], X2[0] → jan[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[0]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X1[0] → cola[1], X2[0] → piotr[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[0]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X1[0] → pepsi[1], X2[0] → piotr[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X14. [likes piotr beer (sk_B X14)*]/10[1]
         s=likes piotr beer (sk_B X14) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[0]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X1[0] → beer[1], X2[0] → piotr[1], X14[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/41`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/41`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/43`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/43`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan cola X0*]/41, 
       forall X0. [possibly_likes piotr cola X0*]/42, 
       forall X0. [possibly_likes piotr pepsi X0*]/43, 
       forall X0. [possibly_likes piotr beer X0*]/44]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/41`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/41`...
[zip.sup]
    (subsumes
     :c1 possibly_likes jan cola X0
     :c2 possibly_likes jan cola X0
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [possibly_likes jan cola X0*]/41 subsumed by active set
[zip.saturate]
    given clause forall X0. [possibly_likes jan cola X0*]/41 is redundant
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.saturate] ### step    34 ###
[zip.saturate]
    given (34 steps, penalty 1):
      `forall X0. [possibly_likes piotr cola X0*]/42`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr cola X0*]/42[0]
         s=possibly_likes piotr cola X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr cola X0*]/42[1]
         passive_lit=possibly_likes piotr cola X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr cola X0*]/42[1]
         s=possibly_likes piotr cola X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr cola X0*]/42[0]
         passive_lit=possibly_likes piotr cola X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr cola X0*]/42`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/43`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr pepsi X0*]/43`...
[zip.sup]
    (subsumes
     :c1 possibly_likes piotr pepsi X0
     :c2 possibly_likes piotr pepsi X0
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [possibly_likes piotr pepsi X0*]/43 subsumed by active set
[zip.saturate]
    given clause forall X0. [possibly_likes piotr pepsi X0*]/43 is redundant
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.saturate] ### step    36 ###
[zip.saturate]
    given (36 steps, penalty 1):
      `forall X0. [possibly_likes piotr beer X0*]/44`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr beer X0*]/44[0]
         s=possibly_likes piotr beer X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr beer X0*]/44[1]
         passive_lit=possibly_likes piotr beer X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes piotr beer X0*]/44[1]
         s=possibly_likes piotr beer X0 t=true, t'=true)
      (forall X0. [possibly_likes piotr beer X0*]/44[0]
         passive_lit=possibly_likes piotr beer X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [possibly_likes piotr beer X0*]/44`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`...
[zip.env]
    rewrite clause
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`...
[zip.saturate] ### step    37 ###
[zip.saturate]
    given (37 steps, penalty 1):
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`...
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`...
[zip.saturate] ### step    38 ###
[zip.saturate]
    given (38 steps, penalty 1):
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[0]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1[1]
         passive_lit=¬a3 X2 X3 p=1.←.ε)
      with subst={X2[1] → X13[0], X3[1] → sk_D X12 X11 X13[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[0]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11[1]
         passive_lit=¬a3 X16 X15 p=1.←.ε)
      with subst={X15[1] → sk_D X12 X11 X13[0], X16[1] → X13[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[0]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12[1] passive_lit=¬a3 X19 X20
         p=1.←.ε)
      with subst={X19[1] → X13[0], X20[1] → sk_D X12 X11 X13[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[0]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[1]
         passive_lit=a3 X13 (sk_D X12 X11 X13) p=1.←.ε)
      with subst={X11[1] → X11[0], X12[1] → X12[0], X13[1] → X13[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[1]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[0]
         passive_lit=a3 X13 (sk_D X12 X11 X13) p=1.←.ε)
      with subst={X11[1] → X11[0], X12[1] → X12[0], X13[1] → X13[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46, 
       forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.saturate] ### step    39 ###
[zip.saturate]
    given (39 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46[0]
         s=likes jan cola (sk_D X2 X1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46[1]
         passive_lit=likes jan cola (sk_D X2 X1 X0) p=1.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46[1]
         s=likes jan cola (sk_D X2 X1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46[0]
         passive_lit=likes jan cola (sk_D X2 X1 X0) p=1.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`...
[zip.env]
    rewrite clause
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`...
[zip.saturate] ### step    40 ###
[zip.saturate]
    given (40 steps, penalty 1):
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[0]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X34[0] → sk_B X14[1], X14[1] → X33[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.saturate] ### step    41 ###
[zip.saturate]
    given (41 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[0]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[0] → sk_B X14[1], X14[1] → X1[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.saturate] ### step    42 ###
[zip.saturate]
    given (42 steps, penalty 1):
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49[0]
         passive_lit=¬likes X1 pepsi (sk_B (sk_B X0)) p=1.←.ε)
      with subst={X1[0] → piotr[1], X0[1] → sk_B X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/50`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/50`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr cola (sk_B X0)*]/50]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/50`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr cola (sk_B X0)*]/50`...
[zip.sup]
    (subsumes
     :c1 likes piotr cola (sk_B X0)
     :c2 likes piotr cola (sk_B X0)
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [likes piotr cola (sk_B X0)*]/50 subsumed by active set
[zip.saturate]
    given clause forall X0. [likes piotr cola (sk_B X0)*]/50 is redundant
[zip.env]
    rewrite clause
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`...
[zip.env]
    rewrite clause
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`...
[zip.saturate] ### step    44 ###
[zip.saturate]
    given (44 steps, penalty 1):
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[0]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X46[0] → sk_B X14[1], X14[1] → X45[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.saturate] ### step    45 ###
[zip.saturate]
    given (45 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X14. [a1 X14 (sk_B X14)*]/9[1] s=a1 X14 (sk_B X14)
         t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[0]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[0] → sk_B X14[1], X14[1] → X1[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.saturate] ### step    46 ###
[zip.saturate]
    given (46 steps, penalty 1):
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52[0]
         passive_lit=¬likes X1 cola (sk_B (sk_B X0)) p=1.←.ε)
      with subst={X1[0] → jan[1], X0[1] → sk_B X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52[0]
         passive_lit=¬likes X1 cola (sk_B (sk_B X0)) p=1.←.ε)
      with subst={X1[0] → piotr[1], X0[1] → sk_B X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/54`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/54`...
[zip.saturate]
    inferred new clauses:
      [forall X0. [likes jan pepsi (sk_B X0)*]/53, 
       forall X0. [likes piotr pepsi (sk_B X0)*]/54]
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.saturate] ### step    47 ###
[zip.saturate]
    given (47 steps, penalty 1): `forall X0. [likes jan pepsi (sk_B X0)*]/53`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[0]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[1]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → pepsi[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[0]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_B X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[0]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49[1]
         passive_lit=¬likes X1 pepsi (sk_B (sk_B X0)) p=1.←.ε)
      with subst={X0[0] → sk_B X0[1], X1[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[0]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[1]
         passive_lit=likes jan pepsi (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[1]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[0]
         passive_lit=likes jan pepsi (sk_B X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/53`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.env]
    rewrite clause
      `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ likes jan cola (sk_B X0)*]/56`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B X0)[0], l=likes jan cola (sk_B X0)[1], r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ likes jan cola (sk_B X0)*]/56
      into forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/58
      using {(forall X0. [likes jan cola (sk_B X0)*]/28
              :subst {X0[1] → X0[0]}[1])}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/58`...
[zip.sup]
    forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/58 is a semantic tautology
[zip.saturate]
    clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/58` is trivial, dump
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/57`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/57`...
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan pepsi X0*]/55, 
       forall X0. [likes jan cola (sk_B X0)*]/57]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/57`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola (sk_B X0)*]/57`...
[zip.sup]
    (subsumes
     :c1 likes jan cola (sk_B X0)
     :c2 likes jan cola (sk_B X0)
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [likes jan cola (sk_B X0)*]/57 subsumed by active set
[zip.saturate]
    given clause forall X0. [likes jan cola (sk_B X0)*]/57 is redundant
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.saturate] ### step    49 ###
[zip.saturate]
    given (49 steps, penalty 1):
      `forall X0. [possibly_likes jan pepsi X0*]/55`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes jan pepsi X0*]/55[0]
         s=possibly_likes jan pepsi X0 t=true, t'=true)
      (forall X0. [possibly_likes jan pepsi X0*]/55[1]
         passive_lit=possibly_likes jan pepsi X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [possibly_likes jan pepsi X0*]/55[1]
         s=possibly_likes jan pepsi X0 t=true, t'=true)
      (forall X0. [possibly_likes jan pepsi X0*]/55[0]
         passive_lit=possibly_likes jan pepsi X0 p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan pepsi X0*]/55`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/54`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes piotr pepsi (sk_B X0)*]/54`...
[zip.sup]
    (subsumes
     :c1 likes piotr pepsi (sk_B X0)
     :c2 likes piotr pepsi (sk_B X0)
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [likes piotr pepsi (sk_B X0)*]/54 subsumed by active set
[zip.saturate]
    given clause forall X0. [likes piotr pepsi (sk_B X0)*]/54 is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.saturate] ### step    51 ###
[zip.saturate]
    given (51 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46[1]
         s=likes jan cola (sk_D X2 X1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45[0]
         passive_lit=¬likes X4 X3 (sk_D X2 X1 X0) p=1.←.ε)
      with subst={X3[0] → cola[1], 
                  X4[0] → jan[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0* ∨ possibly_likes jan cola X0* ∨ 
        very_much_likes X1 X2 X0*]/59`...
[zip.sup]
    forall X0 (X1:mu) (X2:mu).
    [very_much_likes X1 X2 X0* ∨ possibly_likes jan cola X0* ∨ 
     very_much_likes X1 X2 X0*]/59
    basic_simplifies into
      forall X0 (X1:mu) (X2:mu).
      [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60`...
[zip.sup]
    (subsumes
     :c1 possibly_likes jan cola X0
     :c2 [possibly_likes jan cola X0 ∨ ¬very_much_likes X1 X2 X0]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60
      using forall X0. [possibly_likes jan cola X0*]/34
      gives forall X0. [possibly_likes jan cola X0*]/61
[zip.env]
    clause `forall X0 (X1:mu) (X2:mu).
            [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60`
    simplified into `forall X0. [possibly_likes jan cola X0*]/61`
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/61`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/61`...
[zip.sup]
    (subsumes
     :c1 possibly_likes jan cola X0
     :c2 possibly_likes jan cola X0
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0. [possibly_likes jan cola X0*]/61 subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.saturate] ### step    53 ###
[zip.saturate]
    given (53 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`...
[zip.env]
    rewrite clause
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`...
[zip.saturate] ### step    54 ###
[zip.saturate]
    given (54 steps, penalty 1):
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15[1]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17[0]
         passive_lit=¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26 p=1.←.ε)
      with subst={X22[1] → X28[0], 
                  X23[1] → X27[0], 
                  X24[1] → X26[0], 
                  X25[1] → sk_E X28 X27 X26[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16[1]
         s=zip_tseitin1 X25 X22 X23 X24 t=true, t'=true)
      (forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17[0]
         passive_lit=¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26 p=1.←.ε)
      with subst={X22[1] → X28[0], 
                  X23[1] → X27[0], 
                  X24[1] → X26[0], 
                  X25[1] → sk_E X28 X27 X26[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62, 
       forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.saturate] ### step    55 ###
[zip.saturate]
    given (55 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[1]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62[0] passive_lit=¬a3 X3 X2 p=1.←.ε)
      with subst={X2[0] → sk_D X12 X11 X13[1], X13[1] → X3[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62[0] passive_lit=¬a3 X3 X2 p=1.←.ε)
      with subst={X2[0] → sk_B1 X43[1], X43[1] → X3[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬likes X4 X3 (sk_E (sk_D X2 X1 X0) X3 X4)]/64`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬likes X4 X3 (sk_E (sk_D X2 X1 X0) X3 X4)]/64`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬likes X4 X3 (sk_E (sk_D X2 X1 X0) X3 X4)]/64, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.saturate] ### step    56 ###
[zip.saturate]
    given (56 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6[1]
         s=a3 X13 (sk_D X12 X11 X13) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63[0] passive_lit=¬a3 X3 X2 p=1.←.ε)
      with subst={X2[0] → sk_D X12 X11 X13[1], X13[1] → X3[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X43. [a3 X43 (sk_B1 X43)*]/22[1] s=a3 X43 (sk_B1 X43)
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63[0] passive_lit=¬a3 X3 X2 p=1.←.ε)
      with subst={X2[0] → sk_B1 X43[1], X43[1] → X3[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        a2 (sk_D X2 X1 X0) (sk_E (sk_D X2 X1 X0) X3 X4)]/66`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        a2 (sk_D X2 X1 X0) (sk_E (sk_D X2 X1 X0) X3 X4)]/66`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        a2 (sk_D X2 X1 X0) (sk_E (sk_D X2 X1 X0) X3 X4)]/66, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.saturate] ### step    57 ###
[zip.saturate]
    given (57 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65[0]
         passive_lit=¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
         p=1.←.ε)
      with subst={X21[1] → sk_E1 (sk_B1 X0) X1 X2[0], 
                  X22[1] → sk_B1 X0[0], 
                  X23[1] → X1[0], 
                  X24[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65[0]
         passive_lit=¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
         p=1.←.ε)
      with subst={X21[1] → sk_E1 (sk_B1 X0) X1 X2[0], 
                  X22[1] → sk_B1 X0[0], 
                  X23[1] → X1[0], 
                  X24[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68, 
       forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.saturate] ### step    58 ###
[zip.saturate]
    given (58 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.saturate] ### step    59 ###
[zip.saturate]
    given (59 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.saturate] ### step    60 ###
[zip.saturate]
    given (60 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67[0]
         passive_lit=¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
         p=1.←.ε)
      with subst={X21[1] → sk_E1 (sk_B1 X0) X1 X2[0], 
                  X22[1] → sk_B1 X0[0], 
                  X23[1] → X1[0], 
                  X24[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14[1]
         s=zip_tseitin0 X21 X22 X23 X24 t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67[0]
         passive_lit=¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
         p=1.←.ε)
      with subst={X21[1] → sk_E1 (sk_B1 X0) X1 X2[0], 
                  X22[1] → sk_B1 X0[0], 
                  X23[1] → X1[0], 
                  X24[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70, 
       forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.saturate] ### step    61 ###
[zip.saturate]
    given (61 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.saturate] ### step    62 ###
[zip.saturate]
    given (62 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[0]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2[1]
         passive_lit=¬a2 X5 X4 p=1.←.ε)
      with subst={X4[1] → sk_E (sk_B1 X2) X1 X0[0], X5[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[0]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20[1]
         passive_lit=¬a2 X38 X37 p=2.←.ε)
      with subst={X37[1] → sk_E (sk_B1 X2) X1 X0[0], X38[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[0]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25[1] passive_lit=¬a2 X50 X51 p=1.←.ε)
      with subst={X50[1] → sk_B1 X2[0], X51[1] → sk_E (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[0]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         passive_lit=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[0]
         passive_lit=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X3 cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes X3 pepsi (sk_E (sk_B1 X2) X1 X0)*]/73`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X3 cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes X3 pepsi (sk_E (sk_B1 X2) X1 X0)*]/73`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X3 cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes X3 pepsi (sk_E (sk_B1 X2) X1 X0)*]/73, 
       forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.saturate] ### step    63 ###
[zip.saturate]
    given (63 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X2) X1 X0[0], X7[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X2) X1 X0[0], X31[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X2[0], X34[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X2[0], X42[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X2[0], X46[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X2) X1 X0[0], X53[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X2) X1 X0[0], X55[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X2) X1 X0[0], X1[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X2) X1 X0[0], X1[1] → sk_B1 X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69[1]
         passive_lit=¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → jan[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/84`...
[zip.sup]
    forall X0.
    [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/84
    basic_simplifies into
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)*]/85`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)*]/85`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76, 
       forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77, 
       forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78, 
       forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83, 
       forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86, 
       forall (X0:mu) (X1:mu) X2 X3.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)*]/85]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`...
[zip.saturate] ### step    64 ###
[zip.saturate]
    given (64 steps, penalty 1):
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X0) pepsi jan[0], X7[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X0) pepsi jan[0], 
                  X31[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X0[0], 
                  X34[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X0[0], 
                  X42[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X0[0], 
                  X46[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X0) pepsi jan[0], 
                  X53[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X0) pepsi jan[0], 
                  X55[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[1]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[1]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88, 
       forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89, 
       forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90, 
       forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.saturate] ### step    65 ###
[zip.saturate]
    given (65 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93[1]
         s=likes jan cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.saturate] ### step    66 ###
[zip.saturate]
    given (66 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87[0]
         s=likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87[1]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87[1]
         s=likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87[0]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.saturate] ### step    67 ###
[zip.saturate]
    given (67 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88[1]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.saturate] ### step    68 ###
[zip.saturate]
    given (68 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → piotr[0], X9[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.saturate] ### step    69 ###
[zip.saturate]
    given (69 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93[1]
         s=likes jan cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90[0]
         passive_lit=¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X1[0] → cola[1], X2[0] → jan[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87[1]
         s=likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90[0]
         passive_lit=¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X1[0] → cola[1], X2[0] → piotr[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90[0]
         passive_lit=¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X1[0] → pepsi[1], X2[0] → piotr[1], X0[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88[1]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90[0]
         passive_lit=¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X1[0] → beer[1], X2[0] → piotr[1], X0[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        possibly_likes jan cola (sk_B1 X0)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/97`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X0)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       possibly_likes jan cola (sk_B1 X0)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/97
      into forall X0.
           [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0)]/101
      using {(forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/101
    basic_simplifies into
      forall X0.
      [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0)*]/102
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/102`...
[zip.sup]
    forall X0.
    [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0)*]/102
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/102` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        possibly_likes piotr cola (sk_B1 X0)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/98`...
[zip.sup]
    demod:
      t=possibly_likes piotr cola (sk_B1 X0)[0],
      l=possibly_likes piotr cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       possibly_likes piotr cola (sk_B1 X0)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/98
      into forall X0.
           [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0)]/103
      using {(forall X0. [possibly_likes piotr cola X0*]/42
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/103
    basic_simplifies into
      forall X0.
      [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0)*]/104
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/104`...
[zip.sup]
    forall X0.
    [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0)*]/104
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/104` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        possibly_likes piotr pepsi (sk_B1 X0)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/99`...
[zip.sup]
    demod:
      t=possibly_likes piotr pepsi (sk_B1 X0)[0],
      l=possibly_likes piotr pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr pepsi (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       possibly_likes piotr pepsi (sk_B1 X0)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/99
      into forall X0.
           [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0)]/105
      using {(forall X0. [possibly_likes piotr pepsi X0*]/35
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/105
    basic_simplifies into
      forall X0.
      [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0)*]/106
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/106`...
[zip.sup]
    forall X0.
    [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0)*]/106
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/106` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        possibly_likes piotr beer (sk_B1 X0)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/100`...
[zip.sup]
    demod:
      t=possibly_likes piotr beer (sk_B1 X0)[0],
      l=possibly_likes piotr beer X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr beer (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       possibly_likes piotr beer (sk_B1 X0)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/100
      into forall X0.
           [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0)]/107
      using {(forall X0. [possibly_likes piotr beer X0*]/44
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/107
    basic_simplifies into
      forall X0.
      [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0)*]/108
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/108`...
[zip.sup]
    forall X0.
    [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0)*]/108
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/108` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.saturate] ### step    70 ###
[zip.saturate]
    given (70 steps, penalty 1):
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[1]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94[0]
         passive_lit=¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))
         p=3.←.ε)
      with subst={X1[0] → jan[1], X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94[0]
         passive_lit=¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))
         p=3.←.ε)
      with subst={X1[0] → piotr[1], X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109, 
       forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/109
      is redundant
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110`...
[zip.sup]
    (subsumes
     :c1 [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :c2 [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/110
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.saturate] ### step    73 ###
[zip.saturate]
    given (73 steps, penalty 1):
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95[0]
         passive_lit=¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))
         p=3.←.ε)
      with subst={X1[0] → jan[1], X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95[0]
         passive_lit=¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))
         p=3.←.ε)
      with subst={X1[0] → piotr[1], X0[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111, 
       forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.saturate] ### step    74 ###
[zip.saturate]
    given (74 steps, penalty 1):
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95,
        forall X0.
        [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/111}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90[1]
         passive_lit=¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan) p=2.←.ε)
      with subst={X0[1] → X0[0], X1[1] → pepsi[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E1 (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[1]
         passive_lit=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[1]
         s=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111[0]
         passive_lit=likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+*]/113`...
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+*]/113
    basic_simplifies into
      forall X0.
      [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)*]/114`...
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)*]/114
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        possibly_likes jan pepsi (sk_B1 X0)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/115`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X0)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ 
       possibly_likes jan pepsi (sk_B1 X0)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/115
      into forall X0.
           [¬likes jan pepsi (sk_B1 X0) ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ true ∨ 
            very_much_likes jan pepsi (sk_B1 X0)* ∨ 
            ¬likes jan pepsi (sk_B1 X0)]/119
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ true ∨ 
     very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/119
    basic_simplifies into
      forall X0.
      [true ∨ very_much_likes jan pepsi (sk_B1 X0)* ∨ 
       ¬likes jan pepsi (sk_B1 X0)]/120
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [true ∨ very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/120`...
[zip.sup]
    forall X0.
    [true ∨ very_much_likes jan pepsi (sk_B1 X0)* ∨ 
     ¬likes jan pepsi (sk_B1 X0)]/120
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [true ∨ very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/120` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118, 
       forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`...
[zip.saturate] ### step    75 ###
[zip.saturate]
    given (75 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95,
        forall X0.
        [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/111,
        forall X0.
        [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/117}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117[0]
         passive_lit=¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)]/121`...
[zip.sup]
    forall X0.
    [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)]/121
    basic_simplifies into
      forall X0.
      [very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112`...
[zip.sup]
    (subsumes
     :c1 [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :c2 [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/112
      is redundant
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`...
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`...
[zip.saturate] ### step    77 ###
[zip.saturate]
    given (77 steps, penalty 1):
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0) ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88,
        forall X0 (X1:mu) (X2:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
         possibly_likes X2 X1 (sk_B1 X0)]/90,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92,
        forall X0.
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94,
        forall X0 (X1:mu).
        [¬likes jan pepsi (sk_B1 X0) ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
         ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95,
        forall X0.
        [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/111,
        forall X0.
        [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/117,
        forall X0.
        [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
         very_much_likes jan pepsi (sk_B1 X0) ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/118}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2[1]
         passive_lit=¬a2 X5 X4 p=1.←.ε)
      with subst={X4[1] → sk_E (sk_B1 X0) pepsi jan[0], X5[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20[1]
         passive_lit=¬a2 X38 X37 p=2.←.ε)
      with subst={X37[1] → sk_E (sk_B1 X0) pepsi jan[0], X38[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25[1] passive_lit=¬a2 X50 X51 p=1.←.ε)
      with subst={X50[1] → sk_B1 X0[0], X51[1] → sk_E (sk_B1 X0) pepsi jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         passive_lit=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[1]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[1]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118[0]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124, 
       forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123
      using forall X0.
            [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/117
      gives forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
[zip.env]
    clause `forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123`
    simplified into `forall X0.
                     [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
                      ¬likes jan pepsi (sk_B1 X0)]/126`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`...
[zip.saturate] ### step    78 ###
[zip.saturate]
    given (78 steps, penalty 1):
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ possibly_likes X2 X1 (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126[0]
         s=very_much_likes jan pepsi (sk_B1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39[1]
         passive_lit=¬very_much_likes X2 X1 (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → pepsi[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126[0]
         s=very_much_likes jan pepsi (sk_B1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126[1]
         passive_lit=very_much_likes jan pepsi (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126[1]
         s=very_much_likes jan pepsi (sk_B1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126[0]
         passive_lit=very_much_likes jan pepsi (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.saturate]
    inferred new clauses:
      [forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127]
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.saturate] ### step    79 ###
[zip.saturate]
    given (79 steps, penalty 1):
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ ¬a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/128
[zip.env]
    clause `forall X0.
            [very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/128`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/128`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/128`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/128
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)
          ∨ possibly_likes X2 X1 (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
          possibly_likes X2 X1 (sk_B1 X0)]/125
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X1:mu) (X2:mu).
            [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/129
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬possibly_likes X2 X1 (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0)* ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/129
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/130
[zip.env]
    clause `forall X0 (X1:mu) (X2:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
             possibly_likes X2 X1 (sk_B1 X0)]/125`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/130`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/130`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/130`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/130
      subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/125
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
          likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/131
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/131
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/132
[zip.env]
    clause `forall X0 X1.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
             likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/132`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/132`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/132`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/132
      subsumed by active set
[zip.saturate]
    given clause forall X0 X1.
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
                  likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X1 cola (sk_E (sk_B1 X0) pepsi jan)
          ∨ likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
          likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X1:mu).
            [likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/133
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/133
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/134
[zip.env]
    clause `forall X0 (X1:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
             likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/134`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/134`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/134`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/134
      subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
                  likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
          likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)]/135
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0)]/135
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/136
[zip.env]
    clause `forall X0 X1.
            [very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96`
    simplified into `forall X0.
                     [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
                      ¬likes jan pepsi (sk_B1 X0)]/136`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/136`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/136`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/136
      subsumed by active set
[zip.saturate]
    given clause forall X0 X1.
                 [very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ likes X2 cola (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          likes X2 cola (sk_B1 X0)]/89
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X2:mu).
            [likes X2 cola (sk_B1 X0) ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/137
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes X2 cola (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [likes X2 cola (sk_B1 X0) ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/137
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X2:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)+*]/138
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)+*]/138
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/139
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             likes X2 cola (sk_B1 X0)]/89`
    simplified into `forall X0.
                     [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
                      ¬likes jan pepsi (sk_B1 X0)]/139`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/139`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/139`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/139
      subsumed by active set
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  likes X2 cola (sk_B1 X0)]/89
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ likes X2 pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          likes X2 pepsi (sk_B1 X0)]/91
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X2:mu).
            [likes X2 pepsi (sk_B1 X0) ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/140
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes X2 pepsi (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [likes X2 pepsi (sk_B1 X0) ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/140
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0 (X2:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)+*]/141
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)+*]/141
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/142
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             likes X2 pepsi (sk_B1 X0)]/91`
    simplified into `forall X0.
                     [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
                      ¬likes jan pepsi (sk_B1 X0)]/142`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/142`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/142`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/142
      subsumed by active set
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  likes X2 pepsi (sk_B1 X0)]/91
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.saturate] ### step    87 ###
[zip.saturate]
    given (87 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69[1]
         passive_lit=¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → jan[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/143`...
[zip.sup]
    forall X0.
    [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/143
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ 
       likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola X54 ∨ ¬a1 X55 X54]
     :c2 [¬a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X54[1] → sk_E1 (sk_B1 X0) pepsi jan[0], X55[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145
      using forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27
      gives forall X0.
            [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/146
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/146
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/147
[zip.env]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/147`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/147`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/147`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/147
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.saturate] ### step    89 ###
[zip.saturate]
    given (89 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69[1]
         passive_lit=¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → jan[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/148`...
[zip.sup]
    forall X0.
    [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/148
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ 
       likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150`...
[zip.sup]
    (subsumes
     :c1 [likes piotr cola X6 ∨ ¬a1 X7 X6]
     :c2 [¬a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)]
     :subst {X6[1] → sk_E1 (sk_B1 X0) pepsi jan[0], X7[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150
      using forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3
      gives forall X0.
            [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/151
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0)]/151
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/152
[zip.env]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150`
    simplified into `forall X0.
                     [¬likes jan pepsi (sk_B1 X0) ∨ 
                      very_much_likes jan pepsi (sk_B1 X0)*]/152`
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/152`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0)*]/152`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_B1 X0) ∨ very_much_likes jan pepsi (sk_B1 X0)*]/152
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.saturate] ### step    91 ###
[zip.saturate]
    given (91 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[0]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → piotr[0], 
                  X1[0] → beer[0], 
                  X0[1] → piotr[0], 
                  X1[1] → beer[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[0]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → piotr[0], 
                  X1[0] → beer[0], 
                  X0[1] → piotr[0], 
                  X1[1] → beer[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[0]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+*]/153`...
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+*]/153
    basic_simplifies into
      forall X0.
      [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/155
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)*]/154`...
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)*]/154
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/156
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/156`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/156]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`...
[zip.saturate] ### step    92 ###
[zip.saturate]
    given (92 steps, penalty 1):
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.saturate] ### step    93 ###
[zip.saturate]
    given (93 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → piotr[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → piotr[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → piotr[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → piotr[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → piotr[0], X9[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/157`...
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[1],
      r=true[1],
      subst={X43[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[2],
      r=true[2],
      subst={X43[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/157
      into forall X0.
           [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/160
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[2] → X0[0]}[2]), 
             (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/160
    basic_simplifies into
      forall X0.
      [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/161
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/158`...
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[1],
      r=true[1],
      subst={X43[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[2],
      r=true[2],
      subst={X43[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/158
      into forall X0.
           [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/162
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[2] → X0[0]}[2]), 
             (forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/162
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/163
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/163`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/163, 
       forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`...
[zip.saturate] ### step    94 ###
[zip.saturate]
    given (94 steps, penalty 1):
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/161}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/163`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/163`...
[zip.sup]
    (subsumes
     :c1 [likes jan pepsi X4 ∨ ¬a2 X5 X4]
     :c2 [¬a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X4[1] → sk_E (sk_B1 X0) pepsi piotr[0], X5[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/163
      using forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2
      gives forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164
[zip.env]
    clause `forall X0.
            [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/163`
    simplified into `forall X0.
                     [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                      likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`...
[zip.saturate] ### step    95 ###
[zip.saturate]
    given (95 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`
[zip.sup]
    (subsumes
     :c1 [likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[1]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.saturate] ### step    96 ###
[zip.saturate]
    given (96 steps, penalty 1):
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165[0]
         passive_lit=¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X1[0] → sk_B1 X2[1], 
                  X0[1] → piotr[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/166`...
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[1],
      r=true[1],
      subst={X43[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
       likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/166
      into forall X0.
           [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
            likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
            very_much_likes piotr pepsi (sk_B1 X0)]/167
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
     likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/167
    basic_simplifies into
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/168
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`...
[zip.saturate] ### step    97 ###
[zip.saturate]
    given (97 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[1]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X7[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X31[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X0[0], 
                  X34[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X0[0], 
                  X42[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X0[0], 
                  X46[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X53[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X55[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[1]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[1]
         s=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[1]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175, 
       forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176, 
       forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.saturate] ### step    98 ###
[zip.saturate]
    given (98 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175[1]
         s=likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.saturate] ### step    99 ###
[zip.saturate]
    given (99 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169[0]
         s=likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169[1]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169[1]
         s=likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169[0]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.saturate] ### step   100 ###
[zip.saturate]
    given (100 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[1]
         s=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.saturate] ### step   101 ###
[zip.saturate]
    given (101 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → piotr[0], X9[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
         p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/178`...
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[1],
      r=true[1],
      subst={X43[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/178
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/181
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     ¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+*]/181
    basic_simplifies into
      forall X0.
      [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/179`...
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[1],
      r=true[1],
      subst={X43[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/179
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ 
            very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
            a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/183
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ 
     very_much_likes piotr pepsi (sk_B1 X0) ∨ ¬true ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)*]/183
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
       very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184, 
       forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`...
[zip.saturate] ### step   102 ###
[zip.saturate]
    given (102 steps, penalty 1):
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0 X1.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/168,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175,
        forall X0.
        [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[1] → X0[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184
      using forall X0 X1.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
[zip.env]
    clause `forall X0.
            [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                      very_much_likes piotr pepsi (sk_B1 X0)]/185`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`...
[zip.saturate] ### step   103 ###
[zip.saturate]
    given (103 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/155,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185[0]
         s=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185[1]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185[1]
         s=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185[0]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ possibly_likes X2 X1 (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
          possibly_likes X2 X1 (sk_B1 X0)]/172
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X1:mu) (X2:mu).
            [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/186
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬possibly_likes X2 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/186
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/187
[zip.env]
    clause `forall X0 (X1:mu) (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             possibly_likes X2 X1 (sk_B1 X0)]/172`
    simplified into `forall X0.
                     [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/187`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/187`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/187`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/187
      subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/172
      is redundant
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/156`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/156`...
[zip.sup]
    (subsumes
     :c1 [likes jan pepsi X4 ∨ ¬a2 X5 X4]
     :c2 [¬a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X4[1] → sk_E (sk_B1 X0) beer piotr[0], X5[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0)]/156
      using forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2
      gives forall X0.
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188
[zip.env]
    clause `forall X0.
            [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/156`
    simplified into `forall X0.
                     [very_much_likes piotr beer (sk_B1 X0) ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`...
[zip.saturate] ### step   105 ###
[zip.saturate]
    given (105 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`
[zip.sup]
    (subsumes
     :c1 [likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :c2 [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X0) beer piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[1]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.saturate] ### step   106 ###
[zip.saturate]
    given (106 steps, penalty 1):
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189[0]
         passive_lit=¬a2 X1 (sk_E (sk_B1 X0) beer piotr) p=2.←.ε)
      with subst={X1[0] → sk_B1 X2[1], 
                  X0[1] → piotr[0], 
                  X1[1] → beer[0], 
                  X2[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0)]/190`...
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ ¬likes piotr beer (sk_B1 X0)]/190
    basic_simplifies into
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/191
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ ¬likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
          ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X1:mu).
            [¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/192
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/192
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/193
[zip.env]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176`
    simplified into `forall X0.
                     [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/193`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/193`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/193`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/193
      subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
                  ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ ¬likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
          ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X1:mu).
            [¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/194
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/194
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/195
[zip.env]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177`
    simplified into `forall X0.
                     [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/195`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/195`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/195`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/195
      subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
                  ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)
          ∨ a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
          very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
          likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/196
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
          very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/196
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/197
[zip.env]
    clause `forall X0 X1.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
             very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                      very_much_likes piotr pepsi (sk_B1 X0)]/197`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/197`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/197`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/197 subsumed by active set
[zip.saturate]
    given clause forall X0 X1.
                 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180
      is redundant
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`...
[zip.saturate] ### step   110 ###
[zip.saturate]
    given (110 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=likes jan cola (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[1]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) beer piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X0) beer piotr[0], X7[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X0) beer piotr[0], 
                  X31[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X0[0], 
                  X34[1] → sk_E1 (sk_B1 X0) beer piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X0[0], 
                  X42[1] → sk_E1 (sk_B1 X0) beer piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X0[0], 
                  X46[1] → sk_E1 (sk_B1 X0) beer piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X0) beer piotr[0], 
                  X53[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X0) beer piotr[0], 
                  X55[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) beer piotr[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) beer piotr[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[1]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[1]
         s=likes jan cola (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) beer piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) p=1.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[1]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204, 
       forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205, 
       forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.saturate] ### step   111 ###
[zip.saturate]
    given (111 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) beer piotr) p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204[1]
         s=likes jan cola (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) beer piotr) p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.saturate] ### step   112 ###
[zip.saturate]
    given (112 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198[0]
         s=likes piotr cola (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198[1]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198[1]
         s=likes piotr cola (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198[0]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.saturate] ### step   113 ###
[zip.saturate]
    given (113 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         s=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[1]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[1]
         s=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199[0]
         passive_lit=likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+*]/207`...
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+*]/207
    basic_simplifies into
      forall X0.
      [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)*]/208`...
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)*]/208
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`...
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`...
[zip.saturate] ### step   114 ###
[zip.saturate]
    given (114 steps, penalty 1):
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.saturate] ### step   115 ###
[zip.saturate]
    given (115 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0 X1.
        [¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/191,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204,
        forall X0.
        [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
         very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → piotr[0], X9[1] → sk_E1 (sk_B1 X0) beer piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[0]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[1]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → beer[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203[0]
         passive_lit=likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)
         p=3.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[1] → X0[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
          very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210
      using forall X0 X1.
            [¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
[zip.env]
    clause `forall X0.
            [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      very_much_likes piotr beer (sk_B1 X0)]/212`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`...
[zip.saturate] ### step   116 ###
[zip.saturate]
    given (116 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212[0]
         s=likes jan cola (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212[1]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) beer piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212[1]
         s=likes jan cola (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212[0]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) beer piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ likes X2 cola (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
          likes X2 cola (sk_B1 X0)]/171
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X2:mu).
            [likes X2 cola (sk_B1 X0) ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/213
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬likes X2 cola (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [likes X2 cola (sk_B1 X0) ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/213
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)+*]/214
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)+*]/214
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/215
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 cola (sk_B1 X0)]/171`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                      very_much_likes piotr pepsi (sk_B1 X0)]/215`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/215`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/215`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/215 subsumed by active set
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
                  likes X2 cola (sk_B1 X0)]/171
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ likes X2 pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
          likes X2 pepsi (sk_B1 X0)]/173
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X2:mu).
            [likes X2 pepsi (sk_B1 X0) ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/216
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [¬likes X2 pepsi (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [likes X2 pepsi (sk_B1 X0) ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          very_much_likes piotr pepsi (sk_B1 X0)]/216
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)+*]/217
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [very_much_likes piotr pepsi (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X2:mu).
         [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)+*]/217
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/185
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             very_much_likes piotr pepsi (sk_B1 X0)]/218
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 pepsi (sk_B1 X0)]/173`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                      very_much_likes piotr pepsi (sk_B1 X0)]/218`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/218`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/218`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/218 subsumed by active set
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
                  likes X2 pepsi (sk_B1 X0)]/173
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)
          ∨ possibly_likes X2 X1 (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
          ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
          possibly_likes X2 X1 (sk_B1 X0)]/201
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0 (X1:mu) (X2:mu).
            [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/219
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬possibly_likes X2 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu) (X2:mu).
         [possibly_likes X2 X1 (sk_B1 X0)* ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0)]/219
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0.
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/220
[zip.env]
    clause `forall X0 (X1:mu) (X2:mu).
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
             possibly_likes X2 X1 (sk_B1 X0)]/201`
    simplified into `forall X0.
                     [very_much_likes piotr beer (sk_B1 X0) ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/220`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/220`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/220`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/220 subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                  ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/201
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.saturate] ### step   120 ###
[zip.saturate]
    given (120 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144[0]
         passive_lit=¬a2 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → sk_B1 X2[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/221`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ 
     likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/221
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes X1 cola (sk_E1 (sk_B1 X0) beer piotr)
          ∨ ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
          ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0 (X1:mu).
            [¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/223
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0)]/223
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0.
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/224
[zip.env]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
             ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205`
    simplified into `forall X0.
                     [very_much_likes piotr beer (sk_B1 X0) ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/224`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/224`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/224`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/224 subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
                  ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205
      is redundant
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr)
          ∨ ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
          ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0 (X1:mu).
            [¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/225
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 (X1:mu).
         [¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0)]/225
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0.
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/226
[zip.env]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
             ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206`
    simplified into `forall X0.
                     [very_much_likes piotr beer (sk_B1 X0) ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/226`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/226`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/226`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/226 subsumed by active set
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
                  ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.saturate] ### step   123 ###
[zip.saturate]
    given (123 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[0]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → pepsi[1], 
                  X4[0] → piotr[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76[1]
         s=likes piotr beer (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[0]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → beer[1], 
                  X4[0] → piotr[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        possibly_likes piotr pepsi (sk_B1 X2) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/227`...
[zip.sup]
    demod:
      t=possibly_likes piotr pepsi (sk_B1 X2)[0],
      l=possibly_likes piotr pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr pepsi (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
       possibly_likes piotr pepsi (sk_B1 X2) ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/227
      into forall (X0:mu) (X1:mu) X2.
           [very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/229
      using {(forall X0. [possibly_likes piotr pepsi X0*]/35
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/229
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/230
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/230`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/230
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/230` is trivial, dump
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        possibly_likes piotr beer (sk_B1 X2) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/228`...
[zip.sup]
    demod:
      t=possibly_likes piotr beer (sk_B1 X2)[0],
      l=possibly_likes piotr beer X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr beer (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
       possibly_likes piotr beer (sk_B1 X2) ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/228
      into forall (X0:mu) (X1:mu) X2.
           [very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/231
      using {(forall X0. [possibly_likes piotr beer X0*]/44
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/231
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/232
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/232`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/232
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/232` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ a2 X1 (sk_E1 (sk_B1 X0) beer piotr)
          ∨ likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
          likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0.
            [likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)]/233
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
          very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)]/233
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/234
[zip.env]
    clause `forall X0 X1.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211`
    simplified into `forall X0.
                     [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                      ¬likes piotr beer (sk_B1 X0) ∨ 
                      very_much_likes piotr beer (sk_B1 X0)]/234`
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/234`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/234`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ very_much_likes piotr beer (sk_B1 X0)]/234
      subsumed by active set
[zip.saturate]
    given clause forall X0 X1.
                 [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.saturate] ### step   125 ###
[zip.saturate]
    given (125 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149[0]
         passive_lit=¬a2 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → sk_B1 X2[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/235`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ 
     likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/235
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/236
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/236`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/236]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.saturate] ### step   126 ###
[zip.saturate]
    given (126 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan pepsi (sk_B X0)*]/53[1]
         s=likes jan pepsi (sk_B X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82[0]
         passive_lit=¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))
         p=4.←.ε)
      with subst={X3[0] → jan[1], X0[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr pepsi (sk_B X0)*]/33[1]
         s=likes piotr pepsi (sk_B X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82[0]
         passive_lit=¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))
         p=4.←.ε)
      with subst={X3[0] → piotr[1], X0[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237, 
       forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237 subsumed by active set
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238`...
[zip.sup]
    (subsumes
     :c1 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238 subsumed by active set
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.saturate] ### step   129 ###
[zip.saturate]
    given (129 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola (sk_B X0)*]/28[1]
         s=likes jan cola (sk_B X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83[0]
         passive_lit=¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))
         p=4.←.ε)
      with subst={X3[0] → jan[1], X0[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes piotr cola (sk_B X0)*]/31[1]
         s=likes piotr cola (sk_B X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83[0]
         passive_lit=¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))
         p=4.←.ε)
      with subst={X3[0] → piotr[1], X0[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240`...
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239, 
       forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.saturate] ### step   130 ###
[zip.saturate]
    given (130 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → jan[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → pepsi[0], 
                  X0[1] → jan[0], 
                  X1[1] → pepsi[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[1]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0], 
                  X3[1] → pepsi[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E1 (sk_B1 X2) X1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[1]
         passive_lit=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[1]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[0]
         passive_lit=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+*]/241`...
[zip.sup]
    forall X0.
    [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+*]/241
    basic_simplifies into
      forall X0.
      [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/245
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/245`...
[zip.sup]
    forall X0.
    [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/245
    is a tautology
[zip.saturate]
    clause `forall X0.
            [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/245` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)*]/242`...
[zip.sup]
    forall X0.
    [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     very_much_likes jan pepsi (sk_B1 X0) ∨ 
     ¬likes jan pepsi (sk_B1 X0) ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)*]/242
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
       very_much_likes jan pepsi (sk_B1 X0) ∨ 
       ¬likes jan pepsi (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        possibly_likes jan pepsi (sk_B1 X2) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/243`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X2)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       possibly_likes jan pepsi (sk_B1 X2) ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/243
      into forall (X0:mu) (X1:mu) X2.
           [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ true ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/247
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/247
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/248
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/248`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/248
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/248` is trivial, dump
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246`...
[zip.sup]
    (subsumes
     :c1 [likes jan pepsi X4 ∨ ¬a2 X5 X4]
     :c2 [¬a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)
          ∨ very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]
     :subst {X4[1] → sk_E (sk_B1 X0) pepsi jan[0], X5[1] → sk_B1 X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
          very_much_likes jan pepsi (sk_B1 X0) ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246
      using forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2
      gives forall X0.
            [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)* ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)]/249
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)
          ∨ ¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)* ∨ 
          ¬likes jan pepsi (sk_B1 X0) ∨ 
          very_much_likes jan pepsi (sk_B1 X0)]/249
      using forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/126
      gives forall X0.
            [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/250
[zip.env]
    clause `forall X0.
            [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246`
    simplified into `forall X0.
                     [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
                      ¬likes jan pepsi (sk_B1 X0)]/250`
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/250`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/250`...
[zip.sup]
    (subsumes
     :c1 [¬likes jan pepsi (sk_B1 X0)
          ∨ very_much_likes jan pepsi (sk_B1 X0)]
     :c2 [very_much_likes jan pepsi (sk_B1 X0)
          ∨ ¬likes jan pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [very_much_likes jan pepsi (sk_B1 X0)* ∨ ¬likes jan pepsi (sk_B1 X0)]/250
      subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240`...
[zip.sup]
    (subsumes
     :c1 [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240 subsumed by active set
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ a2 X3 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]
     :subst {X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup]
    contextual literal cutting
      in forall (X0:mu) (X1:mu) X2 X3.
         [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
          ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
          ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
          likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244
      using forall (X0:mu) (X1:mu) X2.
            [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81
      gives forall (X0:mu) (X1:mu) X2.
            [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/251
[zip.env]
    clause `forall (X0:mu) (X1:mu) X2 X3.
            [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
             likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244`
    simplified into `forall (X0:mu) (X1:mu) X2.
                     [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                      very_much_likes X0 X1 (sk_B1 X2) ∨ 
                      ¬likes X0 X1 (sk_B1 X2) ∨ 
                      likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/251`
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/251`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/251`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/251 subsumed by active set
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2 X3.
                 [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
                  likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159`...
[zip.sup]
    (subsumes
     :c1 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ a2 X3 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]
     :subst {X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup]
    contextual literal cutting
      in forall (X0:mu) (X1:mu) X2 X3.
         [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
          likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
          ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
          likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159
      using forall (X0:mu) (X1:mu) X2.
            [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75
      gives forall (X0:mu) (X1:mu) X2.
            [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/252
[zip.env]
    clause `forall (X0:mu) (X1:mu) X2 X3.
            [very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
             likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159`
    simplified into `forall (X0:mu) (X1:mu) X2.
                     [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                      likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
                      ¬likes X0 X1 (sk_B1 X2) ∨ 
                      very_much_likes X0 X1 (sk_B1 X2)]/252`
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/252`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/252`...
[zip.sup]
    (subsumes
     :c1 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)]
     :c2 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/252
      subsumed by active set
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2 X3.
                 [very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
                  ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159
      is redundant
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200`...
[zip.sup]
    (subsumes
     :c1 [likes piotr beer X30 ∨ ¬a1 X31 X30]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)
          ∨ likes X2 cola (sk_B1 X0)]
     :subst {X30[1] → sk_B1 X0[0], X31[1] → X1[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
          ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
          likes X2 cola (sk_B1 X0)]/200
      using forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18
      gives forall X0 X1 (X2:mu).
            [likes X2 cola (sk_B1 X0) ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
             ¬a1 X1 (sk_B1 X0)* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/253
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
             likes X2 cola (sk_B1 X0)]/200`
    simplified into `forall X0 X1 (X2:mu).
                     [likes X2 cola (sk_B1 X0) ∨ 
                      ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                      ¬a1 X1 (sk_B1 X0)* ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                      very_much_likes piotr beer (sk_B1 X0)]/253`
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`...
[zip.saturate] ### step   135 ###
[zip.saturate]
    given (135 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239[1]
         s=likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253[0]
         passive_lit=¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)
         p=1.←.ε)
      with subst={X2[0] → jan[1], 
                  X0[1] → piotr[0], 
                  X1[1] → beer[0], 
                  X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80[1]
         s=likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253[0]
         passive_lit=¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)
         p=1.←.ε)
      with subst={X2[0] → piotr[1], 
                  X0[1] → piotr[0], 
                  X1[1] → beer[0], 
                  X2[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ likes jan cola (sk_B1 X0)]/254`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0 X1.
      [likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
       ¬a1 X1 (sk_B1 X0)+* ∨ likes jan cola (sk_B1 X0)]/254
      into forall X0 X1.
           [likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
            ¬likes piotr beer (sk_B1 X0) ∨ 
            very_much_likes piotr beer (sk_B1 X0) ∨ 
            very_much_likes piotr beer (sk_B1 X0) ∨ 
            likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
            ¬a1 X1 (sk_B1 X0)+* ∨ true]/256
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0 X1.
    [likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
     ¬a1 X1 (sk_B1 X0)+* ∨ true]/256
    basic_simplifies into
      forall X0 X1.
      [true ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/257
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [true ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/257`...
[zip.sup]
    forall X0 X1.
    [true ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/257
    is a semantic tautology
[zip.saturate]
    clause `forall X0 X1.
            [true ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/257` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)]/255`...
[zip.sup]
    forall X0 X1.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
     ¬a1 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)]/255
    basic_simplifies into
      forall X0 X1.
      [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/258
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/258`...
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/258]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/258`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/258`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)
          ∨ ¬likes piotr beer (sk_B1 X0)]
     :c2 [¬likes piotr cola (sk_B1 X0)
          ∨ ¬a1 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          very_much_likes piotr beer (sk_B1 X0)]/258
      using forall X0.
            [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/212
      gives forall X0 X1.
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             ¬a1 X1 (sk_B1 X0)+*]/259
[zip.sup]
    (subsumes
     :c1 [likes piotr beer X30 ∨ ¬a1 X31 X30]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ likes piotr beer (sk_B1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬a1 X1 (sk_B1 X0)]
     :subst {X30[1] → sk_B1 X0[0], X31[1] → X1[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1.
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
          ¬a1 X1 (sk_B1 X0)+*]/259
      using forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18
      gives forall X0 X1.
            [¬a1 X1 (sk_B1 X0)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/260
[zip.env]
    clause `forall X0 X1.
            [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/258`
    simplified into `forall X0 X1.
                     [¬a1 X1 (sk_B1 X0)+* ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                      likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
                      very_much_likes piotr beer (sk_B1 X0)]/260`
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`...
[zip.saturate] ### step   136 ###
[zip.saturate]
    given (136 steps, penalty 1):
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202`...
[zip.sup]
    (subsumes
     :c1 [likes piotr beer X30 ∨ ¬a1 X31 X30]
     :c2 [very_much_likes piotr beer (sk_B1 X0)
          ∨ likes piotr beer (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬a1 X1 (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)
          ∨ likes X2 pepsi (sk_B1 X0)]
     :subst {X30[1] → sk_B1 X0[0], X31[1] → X1[0]}
[zip.sup]
    contextual literal cutting
      in forall X0 X1 (X2:mu).
         [very_much_likes piotr beer (sk_B1 X0) ∨ 
          ¬likes piotr beer (sk_B1 X0) ∨ 
          likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
          ¬a1 X1 (sk_B1 X0)+* ∨ 
          ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
          likes X2 pepsi (sk_B1 X0)]/202
      using forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18
      gives forall X0 X1 (X2:mu).
            [likes X2 pepsi (sk_B1 X0) ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
             ¬a1 X1 (sk_B1 X0)* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/261
[zip.env]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
             likes X2 pepsi (sk_B1 X0)]/202`
    simplified into `forall X0 X1 (X2:mu).
                     [likes X2 pepsi (sk_B1 X0) ∨ 
                      ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                      ¬a1 X1 (sk_B1 X0)* ∨ 
                      likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                      very_much_likes piotr beer (sk_B1 X0)]/261`
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`...
[zip.saturate] ### step   137 ###
[zip.saturate]
    given (137 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.saturate] ### step   138 ###
[zip.saturate]
    given (138 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185[1]
         s=likes jan cola (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → piotr[1], 
                  X1[0] → pepsi[1], 
                  X3[0] → cola[1], 
                  X4[0] → jan[1], 
                  X0[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212[1]
         s=likes jan cola (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → piotr[1], 
                  X1[0] → beer[1], 
                  X3[0] → cola[1], 
                  X4[0] → jan[1], 
                  X0[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → pepsi[1], 
                  X4[0] → jan[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → pepsi[1], 
                  X4[0] → jan[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X3[0] → pepsi[1], 
                  X4[0] → jan[1], 
                  X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188[1]
         s=likes jan pepsi (sk_E (sk_B1 X0) beer piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → piotr[1], 
                  X1[0] → beer[1], 
                  X3[0] → pepsi[1], 
                  X4[0] → jan[1], 
                  X0[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164[1]
         s=likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[0]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → piotr[1], 
                  X1[0] → pepsi[1], 
                  X3[0] → pepsi[1], 
                  X4[0] → jan[1], 
                  X0[1] → X2[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        possibly_likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/262`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X0)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[2],
      r=true[2],
      subst={X43[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       possibly_likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/262
      into forall X0.
           [very_much_likes piotr pepsi (sk_B1 X0) ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ ¬true ∨ 
            very_much_likes piotr pepsi (sk_B1 X0)]/269
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ ¬true ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/269
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/270
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        possibly_likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/263`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X0)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       possibly_likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/263
      into forall X0.
           [very_much_likes piotr beer (sk_B1 X0) ∨ 
            ¬likes piotr beer (sk_B1 X0) ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
            ¬likes piotr beer (sk_B1 X0) ∨ 
            very_much_likes piotr beer (sk_B1 X0)]/271
      using {(forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr beer (sk_B1 X0) ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ very_much_likes piotr beer (sk_B1 X0)]/271
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/272
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/272`...
[zip.sup]
    forall X0.
    [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ very_much_likes piotr beer (sk_B1 X0)]/272
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/272` is trivial, dump
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        possibly_likes jan pepsi (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/264`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X2)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       possibly_likes jan pepsi (sk_B1 X2) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/264
      into forall (X0:mu) (X1:mu) X2.
           [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ true ∨ 
            a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/273
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/273
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)*]/274
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)*]/274`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)*]/274
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)*]/274` is trivial, dump
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        possibly_likes jan pepsi (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/265`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X2)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       possibly_likes jan pepsi (sk_B1 X2) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/265
      into forall (X0:mu) (X1:mu) X2.
           [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ true ∨ 
            a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/275
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/275
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/276
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/276`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/276
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/276` is trivial, dump
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        possibly_likes jan pepsi (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/266`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X2)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       possibly_likes jan pepsi (sk_B1 X2) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/266
      into forall (X0:mu) (X1:mu) X2.
           [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ true ∨ 
            a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/277
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/277
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/278
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/278`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/278
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/278` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        possibly_likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/267`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X0)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       possibly_likes jan pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       very_much_likes piotr beer (sk_B1 X0)]/267
      into forall X0.
           [¬likes piotr beer (sk_B1 X0) ∨ 
            very_much_likes piotr beer (sk_B1 X0) ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
            ¬likes piotr beer (sk_B1 X0) ∨ 
            very_much_likes piotr beer (sk_B1 X0)]/279
      using {(forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [¬likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ very_much_likes piotr beer (sk_B1 X0)]/279
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0)]/280
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0)]/280`...
[zip.sup]
    forall X0.
    [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ ¬likes piotr beer (sk_B1 X0)]/280
    is a semantic tautology
[zip.saturate]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0)]/280` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        possibly_likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes piotr pepsi (sk_B1 X0) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/268`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X0)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes piotr pepsi (sk_B1 X0)[0],
      l=likes piotr pepsi (sk_B1 X43)[2],
      r=true[2],
      subst={X43[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes piotr pepsi (sk_B1 X0)` into `true`
      using {X43[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
       possibly_likes jan pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
       ¬likes piotr pepsi (sk_B1 X0) ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/268
      into forall X0.
           [very_much_likes piotr pepsi (sk_B1 X0) ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ ¬true ∨ 
            very_much_likes piotr pepsi (sk_B1 X0)]/281
      using {(forall X43. [likes piotr pepsi (sk_B1 X43)*]/23
              :subst {X43[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ ¬true ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/281
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
       very_much_likes piotr pepsi (sk_B1 X0)]/282
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/282`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270, 
       forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/282]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`...
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`...
[zip.saturate] ### step   139 ###
[zip.saturate]
    given (139 steps, penalty 1):
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X7[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X31[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X0[0], 
                  X34[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X0[0], 
                  X42[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X0[0], 
                  X46[1] → sk_E1 (sk_B1 X0) pepsi piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X53[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X55[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) pepsi piotr[0], 
                  X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[1]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → piotr[0], X1[1] → pepsi[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[1]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/283`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/283`...
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/283
    is a tautology
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/283` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/284`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/284`...
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/284
    is a tautology
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/284` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/285`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/285`...
[zip.sup]
    forall X0 X1 (X2:mu).
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     ¬a1 X1 (sk_B1 X0)+* ∨ 
     ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
     likes X2 cola (sk_B1 X0)]/285
    is a tautology
[zip.saturate]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 cola (sk_B1 X0)]/285` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/286`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/286`...
[zip.sup]
    forall X0 (X1:mu) (X2:mu).
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
     possibly_likes X2 X1 (sk_B1 X0)]/286
    is a tautology
[zip.saturate]
    clause `forall X0 (X1:mu) (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             possibly_likes X2 X1 (sk_B1 X0)]/286` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/287`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/287`...
[zip.sup]
    forall X0 X1 (X2:mu).
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     ¬a1 X1 (sk_B1 X0)+* ∨ 
     ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
     likes X2 pepsi (sk_B1 X0)]/287
    is a tautology
[zip.saturate]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 pepsi (sk_B1 X0)]/287` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/288`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/288`...
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/288
    is a tautology
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/288` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/289`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/289`...
[zip.sup]
    forall X0.
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/289
    is a tautology
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/289` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/290`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/290`...
[zip.sup]
    forall X0 (X1:mu).
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
     ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/290
    is a tautology
[zip.saturate]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/290` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/291`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/291`...
[zip.sup]
    forall X0 (X1:mu).
    [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
     likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
     ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/291
    is a tautology
[zip.saturate]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/291` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/282`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/282`...
[zip.sup]
    (subsumes
     :c1 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)
          ∨ true]
     :c2 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)
          ∨ true
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    forall X0.
    [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
     very_much_likes piotr pepsi (sk_B1 X0)]/282 subsumed by active set
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
                  very_much_likes piotr pepsi (sk_B1 X0)]/282
      is redundant
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.saturate] ### step   141 ###
[zip.saturate]
    given (141 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.saturate] ### step   142 ###
[zip.saturate]
    given (142 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.saturate] inferred new clauses: []
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola X54 ∨ ¬a1 X55 X54]
     :c2 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
     :subst {X54[1] → sk_E1 (sk_B1 X2) X1 X0[0], X55[1] → sk_B1 X2[0]}
[zip.sup]
    contextual literal cutting
      in forall (X0:mu) (X1:mu) X2.
         [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
          likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
          a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
          ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222
      using forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27
      gives forall (X0:mu) (X1:mu) X2.
            [very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
             likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292
[zip.env]
    clause `forall (X0:mu) (X1:mu) X2.
            [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
             likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
             a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222`
    simplified into `forall (X0:mu) (X1:mu) X2.
                     [very_much_likes X0 X1 (sk_B1 X2) ∨ 
                      ¬likes X0 X1 (sk_B1 X2) ∨ 
                      likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
                      likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`...
[zip.saturate] ### step   143 ###
[zip.saturate]
    given (143 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
     :c2 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → X0[1], X1[0] → X1[1], X2[0] → X2[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → cola[0], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → jan[0], 
                  X1[0] → cola[0], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X2[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[1]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], 
                  X1[1] → X1[0], 
                  X2[1] → X2[0], 
                  X3[1] → cola[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261[1]
         passive_lit=¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr) p=1.←.ε)
      with subst={X0[0] → piotr[1], 
                  X1[0] → beer[1], 
                  X0[1] → X2[0], 
                  X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[1]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → X0[0], X1[1] → X1[0], X2[1] → X2[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/293`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/293
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/297
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/297
    basic_simplifies into
      forall X0.
      [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)]/298
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/298`...
[zip.sup]
    forall X0.
    [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)]/298
    is a tautology
[zip.saturate]
    clause `forall X0.
            [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
             very_much_likes jan cola (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) cola jan)]/298` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/294`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/294
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/299
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/299
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)]/300
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        possibly_likes jan cola (sk_B1 X2) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/295`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X2)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
       possibly_likes jan cola (sk_B1 X2) ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/295
      into forall (X0:mu) (X1:mu) X2.
           [likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ true ∨ 
            very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/301
      using {(forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ true ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/301
    basic_simplifies into
      forall (X0:mu) (X1:mu) X2.
      [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan cola (sk_E (sk_B1 X2) X1 X0)]/302
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/302`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
     very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
     likes jan cola (sk_E (sk_B1 X2) X1 X0)]/302
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E (sk_B1 X2) X1 X0)]/302` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ likes jan pepsi (sk_B1 X0)]/296`...
[zip.sup]
    forall X0 X1.
    [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
     ¬likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     very_much_likes piotr beer (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
     ¬a1 X1 (sk_B1 X0)+* ∨ likes jan pepsi (sk_B1 X0)]/296
    basic_simplifies into
      forall X0 X1.
      [likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
       very_much_likes piotr beer (sk_B1 X0) ∨ 
       ¬likes piotr beer (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/303
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/303`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300, 
       forall X0 X1.
       [likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/303]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`...
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`...
[zip.saturate] ### step   144 ###
[zip.saturate]
    given (144 steps, penalty 1):
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/300}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2[1]
         passive_lit=¬a2 X5 X4 p=1.←.ε)
      with subst={X4[1] → sk_E (sk_B1 X0) cola jan[0], X5[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20[1]
         passive_lit=¬a2 X38 X37 p=2.←.ε)
      with subst={X37[1] → sk_E (sk_B1 X0) cola jan[0], X38[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25[1] passive_lit=¬a2 X50 X51 p=1.←.ε)
      with subst={X50[1] → sk_B1 X0[0], X51[1] → sk_E (sk_B1 X0) cola jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149[1]
         passive_lit=¬a2 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0], 
                  X3[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         passive_lit=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[1]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[1]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[0]
         passive_lit=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) cola jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) cola jan)*]/305`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) cola jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) cola jan)*]/305`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/306`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/306`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/307`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/307
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ 
            likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ 
            likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/308
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ ¬true ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/308
    basic_simplifies into
      forall X0.
      [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)]/309
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304, 
       forall X0 (X1:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) cola jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) cola jan)*]/305, 
       forall X0 (X1:mu) (X2:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/306, 
       forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.saturate] ### step   145 ###
[zip.saturate]
    given (145 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/300,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[1]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0], 
                  X3[1] → pepsi[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4[1]
         passive_lit=¬likes X8 pepsi X9 p=1.←.ε)
      with subst={X8[1] → jan[0], X9[1] → sk_E (sk_B1 X0) cola jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[1]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) cola jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) cola jan) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) cola jan) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81[1]
         s=likes jan pepsi (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) cola jan) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[1]
         s=likes jan pepsi (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304[0]
         passive_lit=likes jan pepsi (sk_E (sk_B1 X0) cola jan) p=2.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        possibly_likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ very_much_likes jan cola (sk_B1 X0)]/310`...
[zip.sup]
    demod:
      t=possibly_likes jan pepsi (sk_B1 X0)[0],
      l=possibly_likes jan pepsi X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan pepsi (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
       possibly_likes jan pepsi (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ very_much_likes jan cola (sk_B1 X0)]/310
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ 
            likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ ¬true ∨ 
            very_much_likes jan cola (sk_B1 X0)]/312
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes jan pepsi X0*]/55
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ ¬true ∨ 
     very_much_likes jan cola (sk_B1 X0)]/312
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/313
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/313`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/311`...
[zip.sup]
    forall X0 X1.
    [very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
     ¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)*]/311
    basic_simplifies into
      forall X0 X1.
      [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/314
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/313, 
       forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`...
[zip.saturate] ### step   146 ###
[zip.saturate]
    given (146 steps, penalty 1):
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/300,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304,
        forall X0.
        [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/309}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309[0]
         s=likes piotr cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[1]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0], 
                  X3[1] → cola[0], 
                  X4[1] → piotr[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309[0]
         s=likes piotr cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309[1]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309[1]
         s=likes piotr cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309[0]
         passive_lit=likes piotr cola (sk_E1 (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        possibly_likes piotr cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/315`...
[zip.sup]
    demod:
      t=possibly_likes piotr cola (sk_B1 X0)[0],
      l=possibly_likes piotr cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes piotr cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       possibly_likes piotr cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/315
      into forall X0.
           [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/316
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes piotr cola X0*]/42
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/316
    basic_simplifies into
      forall X0.
      [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)]/317
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/317`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/317]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`...
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`...
[zip.saturate] ### step   147 ###
[zip.saturate]
    given (147 steps, penalty 1):
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/300,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304,
        forall X0.
        [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)]/309,
        forall X0 X1.
        [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0)]/314}`
[zip.env] apply binary rule superposition_active
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71[1]
         s=a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314[0]
         passive_lit=¬a2 X1 (sk_E (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X1[0] → sk_B1 X2[1], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300[1]
         s=a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314[0]
         passive_lit=¬a2 X1 (sk_E (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X1[0] → sk_B1 X0[1], X0[1] → X0[0]}
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/318`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)*]/318
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ 
            likes jan cola (sk_E (sk_B1 X0) cola jan)*]/320
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)*]/320
    basic_simplifies into
      forall X0.
      [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/321
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/321`...
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/319`...
[zip.sup]
    forall X0.
    [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ 
     likes jan cola (sk_E (sk_B1 X0) cola jan)*]/319
    basic_simplifies into
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/321, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`...
[zip.saturate] ### step   148 ###
[zip.saturate]
    given (148 steps, penalty 1):
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :c2 [¬a2 X1 (sk_E (sk_B1 X0) cola jan)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :c2 [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :c2 [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) cola jan)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[0]
         s=likes jan cola (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69[1]
         passive_lit=¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[0]
         s=likes jan cola (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[1]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0], 
                  X3[1] → cola[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[0]
         s=likes jan cola (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[1]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) cola jan) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[1]
         s=likes jan cola (sk_E (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322[0]
         passive_lit=likes jan cola (sk_E (sk_B1 X0) cola jan) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/323`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/323
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/325
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/325
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/326
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        possibly_likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ very_much_likes jan cola (sk_B1 X0)]/324`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X0)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       possibly_likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ very_much_likes jan cola (sk_B1 X0)]/324
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
            a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ ¬true ∨ 
            very_much_likes jan cola (sk_B1 X0)]/327
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
     a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ ¬true ∨ 
     very_much_likes jan cola (sk_B1 X0)]/327
    basic_simplifies into
      forall X0.
      [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
       very_much_likes jan cola (sk_B1 X0)]/328
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/328`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326, 
       forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/328]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`...
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`...
[zip.saturate] ### step   149 ###
[zip.saturate]
    given (149 steps, penalty 1):
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0)]/326}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3[1]
         passive_lit=¬a1 X7 X6 p=1.←.ε)
      with subst={X6[1] → sk_E1 (sk_B1 X0) cola jan[0], X7[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18[1]
         passive_lit=¬a1 X31 X30 p=1.←.ε)
      with subst={X30[1] → sk_E1 (sk_B1 X0) cola jan[0], X31[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19[1]
         passive_lit=¬a1 X33 X34 p=1.←.ε)
      with subst={X33[1] → sk_B1 X0[0], X34[1] → sk_E1 (sk_B1 X0) cola jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21[1] passive_lit=¬a1 X41 X42 p=1.←.ε)
      with subst={X41[1] → sk_B1 X0[0], X42[1] → sk_E1 (sk_B1 X0) cola jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24[1]
         passive_lit=¬a1 X45 X46 p=1.←.ε)
      with subst={X45[1] → sk_B1 X0[0], X46[1] → sk_E1 (sk_B1 X0) cola jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26[1]
         passive_lit=¬a1 X53 X52 p=1.←.ε)
      with subst={X52[1] → sk_E1 (sk_B1 X0) cola jan[0], X53[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27[1]
         passive_lit=¬a1 X55 X54 p=1.←.ε)
      with subst={X54[1] → sk_E1 (sk_B1 X0) cola jan[0], X55[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) cola jan[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51[1]
         passive_lit=¬a1 X1 X0 p=0.←.ε)
      with subst={X0[1] → sk_E1 (sk_B1 X0) cola jan[0], X1[1] → sk_B1 X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         passive_lit=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) p=2.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[1]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72[1]
         s=a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[1]
         s=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326[0]
         passive_lit=a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/329`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/329`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) cola jan)*]/330`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) cola jan)*]/330`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/331`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/331`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/332`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/332`...
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/333`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/333`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) cola jan)*]/334`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) cola jan)*]/334`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/336`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/336`...
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/337`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/337`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/329, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) cola jan)*]/330, 
       forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/331, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/332, 
       forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/333, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) cola jan)*]/334, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335, 
       forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/336, 
       forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/337]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.saturate] ### step   150 ###
[zip.saturate]
    given (150 steps, penalty 1):
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0.
        [very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
         very_much_likes jan cola (sk_B1 X0)]/326,
        forall X0.
        [very_much_likes jan cola (sk_B1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[1]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], 
                  X1[1] → cola[0], 
                  X2[1] → X0[0], 
                  X3[1] → cola[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[1]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) cola jan) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292[1]
         s=likes jan cola (sk_E1 (sk_B1 X2) X1 X0) t=true, t'=true)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) cola jan) p=1.←.ε)
      with subst={X0[1] → jan[0], X1[1] → cola[0], X2[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[1]
         s=likes jan cola (sk_E1 (sk_B1 X0) cola jan) t=true, t'=true)
      (forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335[0]
         passive_lit=likes jan cola (sk_E1 (sk_B1 X0) cola jan) p=1.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/338`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/338
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/341
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/341
    basic_simplifies into
      forall X0.
      [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/342
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/342`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/339`...
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/339
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/343
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/343
    basic_simplifies into
      forall X0.
      [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
       very_much_likes jan cola (sk_B1 X0)]/344
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/344`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        possibly_likes jan cola (sk_B1 X0) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/340`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X0)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → sk_B1 X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0],
      l=likes jan cola (sk_B1 X0)[2],
      r=true[2],
      subst={X0[2] → X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       possibly_likes jan cola (sk_B1 X0) ∨ 
       very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/340
      into forall X0.
           [very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
            very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
            likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/345
      using {(forall X0. [likes jan cola (sk_B1 X0)*]/29
              :subst {X0[2] → X0[0]}[2]), 
             (forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X0[0]}[1])}
[zip.sup]
    forall X0.
    [very_much_likes jan cola (sk_B1 X0) ∨ true ∨ 
     very_much_likes jan cola (sk_B1 X0) ∨ ¬true ∨ 
     likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/345
    basic_simplifies into
      forall X0.
      [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
       very_much_likes jan cola (sk_B1 X0)]/346
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/346`...
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/342, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/344, 
       forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/346]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/342`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/342`...
[zip.sup]
    (subsumes
     :c1 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :c2 [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :subst {X0[1] → X0[0]}
[zip.sup]
    contextual literal cutting
      in forall X0.
         [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
          very_much_likes jan cola (sk_B1 X0)]/342
      using forall X0.
            [very_much_likes jan cola (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322
      gives forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347
[zip.env]
    clause `forall X0.
            [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
             very_much_likes jan cola (sk_B1 X0)]/342`
    simplified into `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`
[zip.env]
    rewrite clause `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`...
[zip.env]
    rewrite clause `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`...
[zip.saturate] ### step   151 ###
[zip.saturate]
    given (151 steps, penalty 1):
      `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`
[zip.sup]
    (subsumes
     :c1 very_much_likes jan cola (sk_B1 X0)
     :c2 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 very_much_likes jan cola (sk_B1 X0)
     :c2 [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
     :subst {X0[0] → X0[1]}
[zip.sup]
    (subsumes
     :c1 very_much_likes jan cola (sk_B1 X0)
     :c2 [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) cola jan)]
     :subst {X0[0] → X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27,
        forall X0. [likes jan cola (sk_B X0)*]/28,
        forall X0. [likes jan cola (sk_B1 X0)*]/29,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall (X0:mu) (X1:mu) X2 X3.
        [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/185,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall X0.
        [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/212,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0 X1 (X2:mu).
        [likes X2 cola (sk_B1 X0) ∨ 
         ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/253,
        forall X0 X1.
        [¬a1 X1 (sk_B1 X0)+* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/260,
        forall X0 X1 (X2:mu).
        [likes X2 pepsi (sk_B1 X0) ∨ 
         ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
         ¬a1 X1 (sk_B1 X0)* ∨ 
         likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
         very_much_likes piotr beer (sk_B1 X0)]/261,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
         likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292,
        forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347[0]
         s=very_much_likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39[1]
         passive_lit=¬very_much_likes X2 X1 (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0], X1[1] → cola[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347[0]
         s=very_much_likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347[1]
         passive_lit=very_much_likes jan cola (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347[1]
         s=very_much_likes jan cola (sk_B1 X0) t=true, t'=true)
      (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347[0]
         passive_lit=very_much_likes jan cola (sk_B1 X0) p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env]
    rewrite clause `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola X0*]/348]
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.saturate] ### step   152 ###
[zip.saturate]
    given (152 steps, penalty 1): `forall X0. [likes jan cola X0*]/348`
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 likes jan cola (sk_B X0)
     :subst {X0[0] → sk_B X0[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 likes jan cola (sk_B1 X0)
     :subst {X0[0] → sk_B1 X0[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes jan cola X54 ∨ ¬a1 X55 X54]
     :subst {X0[0] → X54[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes jan cola X15 ∨ ¬a3 X16 X15]
     :subst {X0[0] → X15[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)]
     :subst {X0[0] → sk_D X2 X1 X0[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)
          ∨ very_much_likes piotr pepsi (sk_B1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X0) pepsi piotr[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ ¬likes piotr beer (sk_B1 X0)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X0) beer piotr[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [¬a1 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X0) beer piotr[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]
     :subst {X0[0] → sk_E1 (sk_B1 X2) X1 X0[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X2) X1 X0[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes X2 pepsi (sk_B1 X0)
          ∨ ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)
          ∨ ¬a1 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X0) beer piotr[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes X2 cola (sk_B1 X0)
          ∨ ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)
          ∨ ¬a1 X1 (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) beer piotr)
          ∨ very_much_likes piotr beer (sk_B1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X0) beer piotr[1]}
[zip.sup]
    (subsumes
     :c1 likes jan cola X0
     :c2 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)]
     :subst {X0[0] → sk_E (sk_B1 X2) X1 X0[1]}
[zip.env]
    do binary inferences with current active set:
      `{forall (X0:mu) (X1:mu) X2 X3.
        [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1,
        forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2,
        forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3,
        forall (X8:mu) X9 X10.
        [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ 
         ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5,
        forall (X11:mu) (X12:mu) X13.
        [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6,
        [¬mvalid (likes jan cola)*]/7,
        [¬likes jan cola sk_A*]/8,
        forall X14. [a1 X14 (sk_B X14)*]/9,
        forall X14. [likes piotr beer (sk_B X14)*]/10,
        forall (X17:mu) (X18:mu) X19 X20.
        [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
         ¬very_much_likes X17 X18 X20*]/12,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13,
        forall X21 X22 (X23:mu) (X24:mu).
        [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15,
        forall X22 (X23:mu) (X24:mu) X25.
        [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16,
        forall (X26:mu) (X27:mu) X28 X29.
        [very_much_likes X26 X27 X28 ∨ 
         ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
         ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
         ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17,
        forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18,
        forall (X32:mu) X33 X34 X35.
        [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
         ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19,
        forall (X36:mu) X37 X38.
        [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20,
        forall (X39:mu) (X40:mu) X41 X42.
        [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
         ¬likes X39 X40 X42*]/21,
        forall X43. [a3 X43 (sk_B1 X43)*]/22,
        forall X43. [likes piotr pepsi (sk_B1 X43)*]/23,
        forall (X44:mu) X45 X46 X47.
        [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
         ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24,
        forall (X48:mu) (X49:mu) X50 X51.
        [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
         ¬likes X48 X49 X51*]/25,
        forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30,
        forall X0. [likes piotr cola (sk_B X0)*]/31,
        forall X0. [likes piotr pepsi (sk_B X0)*]/33,
        forall X0. [possibly_likes jan cola X0*]/34,
        forall X0. [possibly_likes piotr pepsi X0*]/35,
        forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37,
        forall X0 (X1:mu) (X2:mu).
        [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39,
        forall X0 (X1:mu) (X2:mu).
        [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40,
        forall X0. [possibly_likes piotr cola X0*]/42,
        forall X0. [possibly_likes piotr beer X0*]/44,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
         possibly_likes X4 X3 X0]/45,
        forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
        [very_much_likes X1 X2 X0 ∨ 
         ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48,
        forall X0 (X1:mu).
        [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49,
        forall X0 X1 (X2:mu).
        [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51,
        forall X0 (X1:mu).
        [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52,
        forall X0. [likes jan pepsi (sk_B X0)*]/53,
        forall X0. [possibly_likes jan pepsi X0*]/55,
        forall (X0:mu) (X1:mu) X2 X3.
        [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
         ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/62,
        forall (X0:mu) (X1:mu) X2 X3.
        [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
         ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
         very_much_likes X0 X1 X2]/63,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65,
        forall X0 (X1:mu) (X2:mu).
        [very_much_likes X2 X1 (sk_B1 X0) ∨ 
         ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
         ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69,
        forall (X0:mu) (X1:mu) X2.
        [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70,
        forall (X0:mu) (X1:mu) X2.
        [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71,
        forall (X0:mu) (X1:mu) X2.
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/74,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 cola (sk_B1 X2)]/77,
        forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
         possibly_likes X4 X3 (sk_B1 X2)]/78,
        forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         ¬a1 X3 (sk_B1 X2)+* ∨ 
         ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         likes X4 pepsi (sk_B1 X2)]/79,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82,
        forall (X0:mu) (X1:mu) X2 (X3:mu).
        [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
         ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
         likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
         ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83,
        forall X0.
        [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
         ¬likes jan pepsi (sk_B1 X0)]/126,
        forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127,
        forall X0.
        [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164,
        forall X0.
        [very_much_likes piotr beer (sk_B1 X0) ∨ 
         ¬likes piotr beer (sk_B1 X0) ∨ 
         likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188,
        forall (X0:mu) (X1:mu) X2.
        [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
         very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
         likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239,
        forall X0.
        [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
         very_much_likes piotr pepsi (sk_B1 X0)]/270,
        forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347,
        forall X0. [likes jan cola X0*]/348}`
[zip.env] apply binary rule superposition_active
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45[1]
         passive_lit=¬likes X4 X3 (sk_D X2 X1 X0) p=1.←.ε)
      with subst={X0[0] → sk_D X2 X1 X0[1], X3[1] → cola[0], X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40[1]
         passive_lit=¬likes X2 X1 (sk_B X0) p=0.←.ε)
      with subst={X0[0] → sk_B X0[1], X1[1] → cola[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69[1]
         passive_lit=¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) p=1.←.ε)
      with subst={X0[0] → sk_E (sk_B1 X2) X1 X0[1], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74[1]
         passive_lit=¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → sk_E (sk_B1 X2) X1 X0[1], 
                  X3[1] → cola[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → sk_E1 (sk_B1 X2) X1 X0[1], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70[1]
         passive_lit=¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0) p=0.←.ε)
      with subst={X0[0] → sk_E1 (sk_B1 X2) X1 X0[1], 
                  X0[1] → jan[0], 
                  X1[1] → cola[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78[1]
         passive_lit=¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0) p=3.←.ε)
      with subst={X0[0] → sk_E1 (sk_B1 X2) X1 X0[1], 
                  X3[1] → cola[0], 
                  X4[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30[1]
         passive_lit=¬likes X2 X1 (sk_B1 X0) p=0.←.ε)
      with subst={X0[0] → sk_B1 X0[1], X1[1] → cola[0], X2[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52[1]
         passive_lit=¬likes X1 cola (sk_B (sk_B X0)) p=1.←.ε)
      with subst={X0[0] → sk_B (sk_B X0)[1], X1[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83[1]
         passive_lit=¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))
         p=4.←.ε)
      with subst={X0[0] → sk_B (sk_E1 (sk_B1 X2) X1 X0)[1], X3[1] → jan[0]}
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      (forall X0. [likes jan cola X0*]/348[1] passive_lit=likes jan cola X0
         p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[0] s=likes jan cola X0
         t=true, t'=true)
      ([¬likes jan cola sk_A*]/8[1] passive_lit=¬likes jan cola sk_A
         p=0.←.ε)
      with subst={X0[0] → sk_A[1]}
[zip.env] apply binary rule superposition_passive
[zip.sup]
    sup, kind sup(0)
      (forall X0. [likes jan cola X0*]/348[1] s=likes jan cola X0
         t=true, t'=true)
      (forall X0. [likes jan cola X0*]/348[0] passive_lit=likes jan cola X0
         p=0.←.ε)
      with subst={X0[1] → X0[0]}
[zip.sup] ... cancel, will yield a bool tautology
[zip.env] apply binary rule ctx_narrow
[zip.env] apply binary rule narrow_term_defs
[zip.env] rewrite clause `forall X0. [likes jan cola X0*]/348`...
[zip.env] do unary inferences
[zip.env] apply unary rule equality_resolution
[zip.env] apply unary rule equality_factoring
[zip.env] apply unary rule narrow_lit_defs
[zip.env] apply unary rule ind_types.exhaustiveness
[zip.env] apply unary rule ind_types.acyclicity
[zip.env] apply unary rule avatar_check_empty
[zip.env] apply generating rule avatar.lemmas (full: false)
[zip.env] apply generating rule avatar_check_sat (full: false)
[zip.avatar] SAT-solver reports "SAT"
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/349`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/349`...
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/350`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/350`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/351`...
[zip.sup]
    demod:
      t=very_much_likes jan cola (sk_B1 X0)[0],
      l=very_much_likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `very_much_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0], l=likes jan cola X0[2], r=true[2],
      subst={X0[2] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → sk_B1 X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/351
      into forall X0.
           [true ∨ ¬true ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/360
      using {(forall X0. [likes jan cola X0*]/348
              :subst {X0[2] → sk_B1 X0[0]}[2]), 
             (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [true ∨ ¬true ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)*]/360
    basic_simplifies into
      forall X0. [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true]/361
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0. [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true]/361`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [possibly_likes jan cola (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/352`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X2)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [possibly_likes jan cola (sk_B1 X2) ∨ 
       a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
       ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/352
      into forall (X0:mu) (X1:mu) X2.
           [true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/362
      using {(forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/362`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/362
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/362` is trivial, dump
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/353`...
[zip.sup]
    demod:
      t=very_much_likes jan cola (sk_B1 X0)[0],
      l=very_much_likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `very_much_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0], l=likes jan cola X0[2], r=true[2],
      subst={X0[2] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → sk_B1 X0[0]}[2]
[zip.sup]
    demod:
      t=likes jan cola (sk_E (sk_B1 X0) cola jan)[0],
      l=likes jan cola X0[3],
      r=true[3],
      subst={X0[3] → sk_E (sk_B1 X0) cola jan[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_E (sk_B1 X0) cola jan)` into `
      true` using {X0[3] → sk_E (sk_B1 X0) cola jan[0]}[3]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_E (sk_B1 X0) cola jan)+*]/353
      into [true ∨ ¬true+* ∨ ¬true*]/363
      using {(forall X0. [likes jan cola X0*]/348
              :subst {X0[3] → sk_E (sk_B1 X0) cola jan[0]}[3]), 
             (forall X0. [likes jan cola X0*]/348
              :subst {X0[2] → sk_B1 X0[0]}[2]), 
             (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    [true ∨ ¬true+* ∨ ¬true*]/363 basic_simplifies into [true*]/364
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `[true*]/364`...
[zip.env]
    rewrite clause
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes jan cola (sk_B1 X0) ∨ 
        a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/354`...
[zip.sup]
    demod:
      t=very_much_likes jan cola (sk_B1 X0)[0],
      l=very_much_likes jan cola (sk_B1 X0)[1],
      r=true[1],
      subst={X0[1] → X0[0]}
[zip.sup]
    demod: rewrite `very_much_likes jan cola (sk_B1 X0)` into `true`
      using {X0[1] → X0[0]}[1]
[zip.sup]
    demod:
      t=likes jan cola (sk_B1 X0)[0], l=likes jan cola X0[2], r=true[2],
      subst={X0[2] → sk_B1 X0[0]}
[zip.sup]
    demod: rewrite `likes jan cola (sk_B1 X0)` into `true`
      using {X0[2] → sk_B1 X0[0]}[2]
[zip.sup]
    demodulate
      forall X0.
      [very_much_likes jan cola (sk_B1 X0) ∨ 
       ¬likes jan cola (sk_B1 X0) ∨ 
       a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/354
      into forall X0.
           [true ∨ ¬true ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/365
      using {(forall X0. [likes jan cola X0*]/348
              :subst {X0[2] → sk_B1 X0[0]}[2]), 
             (forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347
              :subst {X0[1] → X0[0]}[1])}
[zip.sup]
    forall X0.
    [true ∨ ¬true ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)*]/365
    basic_simplifies into
      forall X0. [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ true]/366
    with {}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall X0. [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ true]/366`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [possibly_likes jan cola (sk_B1 X2) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/355`...
[zip.sup]
    demod:
      t=possibly_likes jan cola (sk_B1 X2)[0],
      l=possibly_likes jan cola X0[1],
      r=true[1],
      subst={X0[1] → sk_B1 X2[0]}
[zip.sup]
    demod: rewrite `possibly_likes jan cola (sk_B1 X2)` into `true`
      using {X0[1] → sk_B1 X2[0]}[1]
[zip.sup]
    demodulate
      forall (X0:mu) (X1:mu) X2.
      [possibly_likes jan cola (sk_B1 X2) ∨ 
       very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
       likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/355
      into forall (X0:mu) (X1:mu) X2.
           [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
            ¬likes X0 X1 (sk_B1 X2) ∨ 
            likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/367
      using {(forall X0. [possibly_likes jan cola X0*]/34
              :subst {X0[1] → sk_B1 X2[0]}[1])}
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/367`...
[zip.sup]
    forall (X0:mu) (X1:mu) X2.
    [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
     ¬likes X0 X1 (sk_B1 X2) ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/367
    is a semantic tautology
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/367` is trivial, dump
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/356`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [possibly_likes jan cola X0*]/356`...
[zip.env]
    rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/357`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause `forall X0. [likes jan pepsi (sk_B X0)*]/357`...
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/358`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env]
    rewrite clause
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/358`...
[zip.env] rewrite clause `⊥/359`...
[zip.sup] @[neg_reflect did not simplify the clause @]
[zip.env] rewrite clause `⊥/359`...
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/349, 
       forall X0. [possibly_likes jan cola X0*]/350, 
       forall X0. [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true]/361, 
       [true*]/364, 
       forall X0. [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ true]/366, 
       forall X0. [possibly_likes jan cola X0*]/356, 
       forall X0. [likes jan pepsi (sk_B X0)*]/357, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/358, 
       ⊥/359]
# done 152 iterations in s
[zip]
    final precedence:
      [likes < a1 < cola < pepsi < a3 < a2 < jan < piotr < very_much_likes < 
         possibly_likes < zip_tseitin0 < zip_tseitin1 < beer < sk_B < 
         sk_B1 < sk_D < mvalid < sk_A < sk_E < sk_E1 < mand < mbox < mdia < 
         mforall_ind < mimplies < mu]
[zip] terminate phase saturate
[zip] start phase print_result
# SZS status Theorem for '../hoe.extra/tests/agt035.p'
# SZS output start Refutation
* assert [file "../hoe.extra/tests/agt035.p" "45"]
    ∀ A/47 B/48:mu C/49:mu D/50.
      ((¬ (a3 A/47 D/50))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (∀ E/51. ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
       ∨ (¬ (∀ E/52. ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
       ∨ (very_much_likes B/48 C/49 D/50)). by
  '45' in '../hoe.extra/tests/agt035.p'
* assert [internal]
    ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
    (zip_tseitin0 E/51 D/50 C/49 B/48). by
  define zip_tseitin0 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* forall X21 X22 (X23:mu) (X24:mu).
  [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* assert [file "../hoe.extra/tests/agt035.p" "50"]
    ∀ A/66.
      (¬ (∀ B/67. ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))). by
  '50' in '../hoe.extra/tests/agt035.p'
* forall X43. a3 X43 (sk_B1 X43) by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "50"]
           ∀ A/66.
             (¬ (∀ B/67.
                    ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))).
* assert [internal]
    ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
    (zip_tseitin1 E/52 D/50 C/49 B/48). by
  define zip_tseitin1 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* forall X22 (X23:mu) (X24:mu) X25.
  [zip_tseitin1 X25 X22 X23 X24 ∨ a2 X22 X25] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48).
* val [internal] zip_tseitin1 : ι → ι → mu → mu → prop. by
  define zip_tseitin1 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* val [internal] zip_tseitin0 : ι → ι → mu → mu → prop. by
  define zip_tseitin0 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* assert
    ∀ A/47 B/48:mu C/49:mu D/50.
      ((very_much_likes B/48 C/49 D/50)
       ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
       ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (a3 A/47 D/50))). by
  esa 'cnf.tseitin'
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50))., 
         val [internal] zip_tseitin1 : ι → ι → mu → mu → prop., 
         assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48)., 
         val [internal] zip_tseitin0 : ι → ι → mu → mu → prop., 
         assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* forall (X26:mu) (X27:mu) X28 X29.
  [very_much_likes X26 X27 X28
   ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
   ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
   ∨ ¬likes X26 X27 X28
   ∨ ¬a3 X29 X28] by
  esa 'cnf'
    with assert
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((very_much_likes B/48 C/49 D/50)
              ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
              ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (a3 A/47 D/50))).
* forall (X0:mu) (X1:mu) X2 X3.
  [a2 X2 (sk_E X2 X1 X0)
   ∨ ¬a3 X3 X2
   ∨ ¬likes X0 X1 X2
   ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
   ∨ very_much_likes X0 X1 X2] by
  inf 'sup-'
    with forall X22 (X23:mu) (X24:mu) X25.
         [zip_tseitin1 X25 X22 X23 X24 ∨ a2 X22 X25], 
         forall (X26:mu) (X27:mu) X28 X29.
         [very_much_likes X26 X27 X28
          ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
          ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
          ∨ ¬likes X26 X27 X28
          ∨ ¬a3 X29 X28]
* forall X0 (X1:mu) (X2:mu).
  [very_much_likes X2 X1 (sk_B1 X0)
   ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
   ∨ ¬likes X2 X1 (sk_B1 X0)
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X0:mu) (X1:mu) X2 X3.
         [a2 X2 (sk_E X2 X1 X0)
          ∨ ¬a3 X3 X2
          ∨ ¬likes X0 X1 X2
          ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
          ∨ very_much_likes X0 X1 X2]
* forall (X0:mu) (X1:mu) X2.
  [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]
* assert [file "../hoe.extra/tests/agt035.p" "37"]
    ∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))). by
  '37' in '../hoe.extra/tests/agt035.p'
* forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "37"]
           ∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))).
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4]
* assert [file "../hoe.extra/tests/agt035.p" "58"]
    ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))). by
  '58' in '../hoe.extra/tests/agt035.p'
* forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "58"]
           ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))).
* forall (X0:mu) (X1:mu) X2.
  [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* assert [file "../hoe.extra/tests/agt035.p" "29"]
    ∀ A/31 B/32:mu C/33.
      ((likes B/32 cola C/33)
       ∨ (¬ (likes B/32 pepsi C/33))
       ∨ (¬ (a2 A/31 C/33))). by
  '29' in '../hoe.extra/tests/agt035.p'
* forall (X8:mu) X9 X10.
  [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "29"]
           ∀ A/31 B/32:mu C/33.
             ((likes B/32 cola C/33)
              ∨ (¬ (likes B/32 pepsi C/33))
              ∨ (¬ (a2 A/31 C/33))).
* forall (X0:mu) (X1:mu) X2 X3.
  [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)], 
         forall (X8:mu) X9 X10.
         [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9]
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall (X0:mu) (X1:mu) X2 X3.
         [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)]
* forall (X0:mu) (X1:mu) X2.
  [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  simp 'simplify'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'clc'
    with forall (X0:mu) (X1:mu) X2.
         [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* forall X21 X22 (X23:mu) (X24:mu).
  [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* forall (X0:mu) (X1:mu) X2.
  [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
   ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)], 
         forall (X0:mu) (X1:mu) X2.
         [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* assert [file "../hoe.extra/tests/agt035.p" "65"]
    ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))). by
  '65' in '../hoe.extra/tests/agt035.p'
* forall X15 X16. [likes jan cola X15 ∨ ¬a3 X16 X15] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "65"]
           ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))).
* forall X0. likes jan cola (sk_B1 X0) by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall X15 X16. [likes jan cola X15 ∨ ¬a3 X16 X15]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬true
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0), 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'simplify'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬true
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan pepsi (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4]
* forall X0 X1.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬a2 X1 (sk_E (sk_B1 X0) cola jan)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) cola jan)], 
         forall (X8:mu) X9 X10.
         [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9]
* forall X0 X1.
  [¬a2 X1 (sk_E (sk_B1 X0) cola jan)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0 X1.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) cola jan)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X0 X1.
         [¬a2 X1 (sk_E (sk_B1 X0) cola jan)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'simplify'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X22 (X23:mu) (X24:mu) X25.
  [zip_tseitin1 X25 X22 X23 X24 ∨ ¬likes X24 X23 X25] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48).
* forall (X0:mu) (X1:mu) X2 X3.
  [¬likes X0 X1 (sk_E X2 X1 X0)
   ∨ ¬a3 X3 X2
   ∨ ¬likes X0 X1 X2
   ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
   ∨ very_much_likes X0 X1 X2] by
  inf 'sup-'
    with forall X22 (X23:mu) (X24:mu) X25.
         [zip_tseitin1 X25 X22 X23 X24 ∨ ¬likes X24 X23 X25], 
         forall (X26:mu) (X27:mu) X28 X29.
         [very_much_likes X26 X27 X28
          ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
          ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
          ∨ ¬likes X26 X27 X28
          ∨ ¬a3 X29 X28]
* forall X0 (X1:mu) (X2:mu).
  [very_much_likes X2 X1 (sk_B1 X0)
   ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
   ∨ ¬likes X2 X1 (sk_B1 X0)
   ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X0:mu) (X1:mu) X2 X3.
         [¬likes X0 X1 (sk_E X2 X1 X0)
          ∨ ¬a3 X3 X2
          ∨ ¬likes X0 X1 X2
          ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
          ∨ very_much_likes X0 X1 X2]
* forall (X0:mu) (X1:mu) X2.
  [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E1 (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* forall (X0:mu) (X1:mu) X2.
  [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) cola jan)], 
         forall (X0:mu) (X1:mu) X2.
         [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [¬likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X0. very_much_likes jan cola (sk_B1 X0) by
  inf 'clc'
    with forall X0.
         [¬likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)], 
         forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* assert [file "../hoe.extra/tests/agt035.p" "41"]
    ∀ A/43 B/44:mu C/45:mu.
      ((likes B/44 C/45 A/43)
       ∨ (∀ D/46.
              ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))))). by
  '41' in '../hoe.extra/tests/agt035.p'
* forall (X17:mu) (X18:mu) X19 X20.
  [likes X17 X18 X19 ∨ ¬a3 X19 X20 ∨ ¬very_much_likes X17 X18 X20] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "41"]
           ∀ A/43 B/44:mu C/45:mu.
             ((likes B/44 C/45 A/43)
              ∨ (∀ D/46.
                     ((¬ (very_much_likes B/44 C/45 D/46))
                      ∨ (¬ (a3 A/43 D/46))))).
* forall X0 (X1:mu) (X2:mu).
  [¬very_much_likes X2 X1 (sk_B1 X0) ∨ likes X2 X1 X0] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X17:mu) (X18:mu) X19 X20.
         [likes X17 X18 X19
          ∨ ¬a3 X19 X20
          ∨ ¬very_much_likes X17 X18 X20]
* forall X0. likes jan cola X0 by
  inf 'sup-'
    with forall X0. very_much_likes jan cola (sk_B1 X0), 
         forall X0 (X1:mu) (X2:mu).
         [¬very_much_likes X2 X1 (sk_B1 X0) ∨ likes X2 X1 X0]
* assert [file "../hoe.extra/tests/agt035.p" "21"]
    ¬ (∀ A/38. (likes jan cola A/38)). by
  '21' in '../hoe.extra/tests/agt035.p'
* ¬likes jan cola sk_A by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "21"]
           ¬ (∀ A/38. (likes jan cola A/38)).
* ⊥ by inf 'sup-' with forall X0. likes jan cola X0, ¬likes jan cola sk_A

# SZS output end Refutation
[zip] terminate phase print_result
[zip] start phase print_dot
[zip] terminate phase print_dot
[zip] start phase check_proof
[zip] terminate phase check_proof
[zip] start phase print_stats
[zip] terminate phase print_stats
[zip] start phase exit
[zip] terminate phase exit
[zip] run time: 
