; define provers

[benchmark]

db_file = benchs.db
timeout = 120
logLevel = info
memory = 512000

; default profile
profile = test

; profile for tests
[test]

timeout = 30
provers = spass,zip-gc-lemma,zip

; profile for benchmarking
[bench]

timeout = 120
provers = spass,eprover,zip-gc-lemma,zip-lemma,zip

; here be provers

[spass]

cmd = SPASS -TPTP -TimeLimit={time} -PGiven=0 -Memory=512000000 {file}
unsat = proof found
sat = completion found

[eprover]

cmd = eprover -xAuto -tAuto --cpu-limit={time} --memory-limit=512 --tstp-in -l0 {file}
unsat = # Proof found
sat = # No proof found

[zip-gc-lemma]

setup = ./zipperposition.native -kb kb_gc_lemma -kb-clear;
    ./zipperposition.native -kb kb_gc_lemma -kb-load ./builtin.theory
cmd = ./zipperposition.native {file} -timeout {time} -calculus delayed -kb kb_gc_lemma
unsat = SZS Status Theorem
sat = SZS Status CounterSatisfiable
stats = % json_stats: (.*)$

[zip-lemma]

setup = ./zipperposition.native -kb kb_lemma -kb-clear;
    ./zipperposition.native -kb kb_lemma -kb-load ./builtin_lemma.theory
cmd = ./zipperposition.native {file} -timeout {time} -calculus delayed -kb kb_lemma
unsat = SZS Status Theorem
sat = SZS Status CounterSatisfiable

[zip]

cmd = ./zipperposition.native {file} -timeout {time} -calculus delayed -no-theories
unsat = SZS Status Theorem
sat = SZS Status CounterSatisfiable

[iprover]

cmd = iproveropt --eprover_path ~/bin --instantiation_flag true --time_out_real {time} {file}
unsat = SZS Status (Theorem|Unsatisfiable)
sat = SZS status CounterSatisfiable
