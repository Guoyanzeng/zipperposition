OASISFormat: 0.4
Name:        zipperposition
Version:     dev
Homepage:    https://github.com/c-cube/zipperposition
Authors:     Simon Cruanes
License:     BSD-3-clause
LicenseFile: LICENSE
Plugins:     META (0.3), DevFiles (0.3)
OCamlVersion: >= 4.00.1
BuildTools: ocamlbuild
FilesAB: src/const.ml.ab
AlphaFeatures: compiled_setup_ml

Synopsis:  Superposition theorem prover, for first order logic with equality.
Description:
    Zipperposition is an experimental theorem prover based on
    superposition. It aims at being flexible and extensible while retaining
    decent performance (using indexing, for instance).

Flag "meta"
  Description:  Enable plugin for the meta-prover
  Default:      false

Flag "depqbf"
  Description:  Use depqbf solver
  Default:      false

Flag "quantor"
  Description:  Use quantor solver
  Default:      false

Library "libzipperposition"
  Path:             src/
  Pack:             true
  Modules:          ClauseQueue, Clause, Const, Extensions,
                    Literal, Literals, CompactClause, Ctx, Proof, ProofState,
                    Saturate, Selection, PFormula, Theories, AC,
                    PEnv, Params, Env, Monome, ArithLit, Signals, Multisets,
                    Ctx_intf, Clause_intf, Env_intf, ProofState_intf,
                    BBox, BBox_intf, ClauseContext,
                    BoolSolver, BoolSolver_intf, Induction_helpers,
                    calculi/Avatar, calculi/Induction, calculi/Induction_simple,
                    calculi/Superposition, calculi/Chaining,
                    calculi/EnumTypes, calculi/ArithInt, calculi/Heuristics
  InternalModules:  lib/LazyGraph, lib/SmallSet,
                    lib/UnionFind, lib/Choice, lib/Mixtbl, lib/Signal,
                    msat/Zipperposition_msat
                    , quantor/Zipperposition_quantor  # TODO make plugins
                    , depqbf/Zipperposition_depqbf
  BuildDepends:     containers, containers.advanced, sequence, gen, unix,
                    zarith, containers.io, logtk, dynlink, qbf, msat,
                    qbf.quantor, qbf.depqbf,
                    ppx_deriving.std

Library "libzipperposition_meta"
  Path:             src/meta/
  Pack:             false
  Modules:          MetaProverState
  FindlibName:      meta
  FindlibParent:    libzipperposition
  Build$:           flag(meta)
  Install$:         flag(meta)
  BuildDepends:     libzipperposition,logtk,logtk.meta

# TODO
Library "libzipperposition_quantor"
  Path:             src/quantor/
  Modules:          Zipperposition_quantor
  BuildDepends:     libzipperposition, qbf, qbf.quantor
  FindlibParent:    libzipperposition
  FindlibName:      quantor
  Build$:           flag(quantor)
  Install$:         flag(quantor)

# TODO
Library "libzipperposition_depqbf"
  Path:             src/depqbf
  Modules:          Zipperposition_depqbf
  BuildDepends:     libzipperposition, qbf, qbf.depqbf
  FindlibParent:    libzipperposition
  FindlibName:      depqbf
  Build$:           flag(depqbf)
  Install$:         flag(depqbf)

# main executable for the prover
Executable zipperposition
  Path:             src/
  Install:          true
  CompiledObject:   native
  MainIs:           zipperposition.ml
  BuildDepends:     containers,sequence,unix,logtk,logtk.parsers,dynlink,
                    libzipperposition,qbf,qbf.quantor

Document libzipperposition
  Title:                Documentation for Zipperposition
  Type:                 ocamlbuild (0.3)
  BuildTools+:          ocamldoc
  Install$:             true
  XOCamlbuildPath:      .
  XOCamlbuildLibraries: libzipperposition

Test all
  Command:      $run_tests
  TestTools:    run_tests
  Run$:         flag(tests)

Executable run_tests
  Path:             tests/
  Install:          false
  CompiledObject:   native
  MainIs:           run_tests.ml
  Build$:           flag(tests)
  BuildDepends:     containers, logtk, logtk.parsers, logtk.arbitrary,
                    libzipperposition, libzipperposition.arbitrary, qcheck

SourceRepository head
  Type: git
  Location: https://github.com/c-cube/zipperposition
  Browser: https://github.com/c-cube/zipperposition/tree/master/src
