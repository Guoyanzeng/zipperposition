(D) 2016-01-15 improve polymorphism using benchmarks from sledgehammer @bench @optim
(D) 2016-01-15 rewrite rules on TypedSTerm, for preprocessing (e.g. set rewrite rules in CNF) @refactor
(D) 2016-01-15 curried application `@` in FOTerm + indices + orderings + syntax @refactor @zf
(D) 2016-01-15 repair induction, improve it with mutual/nested induction  p:1
(D) 2016-01-15 add better generalization in induction id:1 @calculus
(D) 2016-01-15 add locked storage for Avatar @optim
(D) 2016-01-16 proper calculus for (co)data with mutual types (based on EnumTypes) @calculus
(D) 2016-01-22 update doc/api_intro.txt @doc
(D) 2016-01-22 add arithmetic into ZF @arith
(D) 2016-01-29 see if can improve featureVector (no translation overhead, adaptability, trail) @optim
(D) 2016-02-19 update readme @doc
(D) 2016-02-29 add inductive preds into .zf (translate to new data internally? or regular rewrite?) @zf
(D) 2016-04-03 in induction, allow sub-constants to have induction performed on them (up to some depth) --> nested induction
(A) 2016-04-05 deal with lemmas: if lemma "f x y = ..." introduced, might have to do induction on either x, or y, but not both
(A) 2016-04-06 test polymorphic goal
(A) 2016-04-06 forbid non-closed terms in ZF (close terms in tptp rather than in type infer)
(D) 2016-04-06 benchmarks from sledgehammer in new syntax, large scale test script @bench
(A) 2016-04-07 do not enable induction if all data are non-recursive? or case analysis only?
(D) 2016-04-08 benchmark/optimize term rewriting
(D) 2016-04-08 syntax for projectors in data (--> records)
(B) 2016-04-08 explicit schema for (fun/ind pred) induction (explain how to do induction on `even`) in syntax+induction
(A) 2016-05-14 add set of used rewrite rules in modulo proofs
(B) 2016-01-15 question answering
(A) 2016-04-26 parse tptp: use `definition` for rewrite rules
