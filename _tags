# OASIS_START
# DO NOT EDIT (digest: d648b4e99d086866a444c45ea23b3bfc)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library logtk
"src/logtk.cmxs": use_logtk
"src/symbol.cmx": for-pack(Logtk)
"src/hash.cmx": for-pack(Logtk)
"src/hashcons.cmx": for-pack(Logtk)
"src/term.cmx": for-pack(Logtk)
"src/formula.cmx": for-pack(Logtk)
"src/util.cmx": for-pack(Logtk)
"src/unif.cmx": for-pack(Logtk)
"src/type.cmx": for-pack(Logtk)
"src/substs.cmx": for-pack(Logtk)
"src/signature.cmx": for-pack(Logtk)
"src/typeInference.cmx": for-pack(Logtk)
"src/lex_tptp.cmx": for-pack(Logtk)
"src/ast_tptp.cmx": for-pack(Logtk)
"src/parse_tptp.cmx": for-pack(Logtk)
"src/comparison.cmx": for-pack(Logtk)
"src/partialOrder.cmx": for-pack(Logtk)
"src/precedence.cmx": for-pack(Logtk)
"src/ordering.cmx": for-pack(Logtk)
"src/position.cmx": for-pack(Logtk)
"src/cnf.cmx": for-pack(Logtk)
"src/index.cmx": for-pack(Logtk)
"src/dtree.cmx": for-pack(Logtk)
"src/fingerprint.cmx": for-pack(Logtk)
"src/rewriting.cmx": for-pack(Logtk)
"src/featureVector.cmx": for-pack(Logtk)
"src/util_tptp.cmx": for-pack(Logtk)
"src/skolem.cmx": for-pack(Logtk)
"src/HO.cmx": for-pack(Logtk)
"src/lib/sequence.cmx": for-pack(Logtk)
"src/lib/bij.cmx": for-pack(Logtk)
"src/lib/cache.cmx": for-pack(Logtk)
<src/*.ml{,i}>: pkg_unix
<src/*.ml{,i}>: pkg_num
<src/lib/*.ml{,i}>: pkg_unix
<src/lib/*.ml{,i}>: pkg_num
# Library logtk_meta
"src/meta/logtk_meta.cmxs": use_logtk_meta
"src/meta/metaPattern.cmx": for-pack(Logtk_meta)
"src/meta/metaKB.cmx": for-pack(Logtk_meta)
"src/meta/metaReasoner.cmx": for-pack(Logtk_meta)
"src/meta/metaProver.cmx": for-pack(Logtk_meta)
"src/meta/ast_theory.cmx": for-pack(Logtk_meta)
"src/meta/lex_theory.cmx": for-pack(Logtk_meta)
"src/meta/parse_theory.cmx": for-pack(Logtk_meta)
"src/meta/signal.cmx": for-pack(Logtk_meta)
"src/meta/multiMap.cmx": for-pack(Logtk_meta)
<src/meta/*.ml{,i}>: use_logtk
<src/meta/*.ml{,i}>: pkg_datalog
<src/meta/*.ml{,i}>: pkg_unix
<src/meta/*.ml{,i}>: pkg_num
# Executable run_tests
"tests/run_tests.native": use_logtk
"tests/run_tests.native": pkg_oUnit
"tests/run_tests.native": pkg_unix
"tests/run_tests.native": pkg_num
<tests/*.ml{,i}>: use_logtk
<tests/*.ml{,i}>: pkg_oUnit
<tests/*.ml{,i}>: pkg_unix
<tests/*.ml{,i}>: pkg_num
# Executable check_tptp
"tools/check_tptp.native": use_logtk
"tools/check_tptp.native": pkg_unix
"tools/check_tptp.native": pkg_num
# Executable cnf_of_tptp
"tools/cnf_of_tptp.native": use_logtk
"tools/cnf_of_tptp.native": pkg_unix
"tools/cnf_of_tptp.native": pkg_num
# Executable detect_theories
"tools/detect_theories.native": use_logtk_meta
"tools/detect_theories.native": use_logtk
"tools/detect_theories.native": pkg_datalog
"tools/detect_theories.native": pkg_unix
"tools/detect_theories.native": pkg_num
<tools/*.ml{,i}>: use_logtk_meta
<tools/*.ml{,i}>: use_logtk
<tools/*.ml{,i}>: pkg_datalog
<tools/*.ml{,i}>: pkg_unix
<tools/*.ml{,i}>: pkg_num
# OASIS_STOP
true: use_menhir
<**/*.cmx>: inline(10)
