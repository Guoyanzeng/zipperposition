[zip.saturate] ### step     0 ###
[zip.saturate]
    given (0 steps, penalty 1): `[¬mvalid (likes jan cola)*]/7`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     1 ###
[zip.saturate] given (1 steps, penalty 1): `[¬likes jan cola sk_A*]/8`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     2 ###
[zip.saturate]
    given (2 steps, penalty 1):
      `forall X15 X16. [likes jan cola X15* ∨ ¬a3 X16 X15+*]/11`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     3 ###
[zip.saturate]
    given (3 steps, penalty 1):
      `forall X54 X55. [likes jan cola X54* ∨ ¬a1 X55 X54+*]/27`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     4 ###
[zip.saturate]
    given (4 steps, penalty 1): `forall X14. [a1 X14 (sk_B X14)*]/9`
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola (sk_B X0)*]/28]
[zip.saturate] ### step     5 ###
[zip.saturate]
    given (5 steps, penalty 1): `forall X0. [likes jan cola (sk_B X0)*]/28`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     6 ###
[zip.saturate]
    given (6 steps, penalty 1): `forall X43. [a3 X43 (sk_B1 X43)*]/22`
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola (sk_B1 X0)*]/29]
[zip.saturate] ### step     7 ###
[zip.saturate]
    given (7 steps, penalty 1): `forall X0. [likes jan cola (sk_B1 X0)*]/29`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     8 ###
[zip.saturate]
    given (8 steps, penalty 1):
      `forall X14. [likes piotr beer (sk_B X14)*]/10`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step     9 ###
[zip.saturate]
    given (9 steps, penalty 1):
      `forall X43. [likes piotr pepsi (sk_B1 X43)*]/23`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    10 ###
[zip.saturate]
    given (10 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [possibly_likes X0 X1 X2* ∨ ¬a3 X2 X3+* ∨ ¬likes X0 X1 X3*]/1`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30]
[zip.saturate] ### step    11 ###
[zip.saturate]
    given (11 steps, penalty 1):
      `forall X4 X5. [likes jan pepsi X4* ∨ ¬a2 X5 X4+*]/2`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    12 ###
[zip.saturate]
    given (12 steps, penalty 1):
      `forall X6 X7. [likes piotr cola X6* ∨ ¬a1 X7 X6+*]/3`
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr cola (sk_B X0)*]/31]
[zip.saturate] ### step    13 ###
[zip.saturate]
    given (13 steps, penalty 1):
      `forall X0. [likes piotr cola (sk_B X0)*]/31`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    14 ###
[zip.saturate]
    given (14 steps, penalty 1):
      `forall X30 X31. [likes piotr beer X30* ∨ ¬a1 X31 X30+*]/18`
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr beer (sk_B X0)*]/32]
[zip.saturate]
    given clause forall X0. [likes piotr beer (sk_B X0)*]/32 is redundant
[zip.saturate] ### step    16 ###
[zip.saturate]
    given (16 steps, penalty 1):
      `forall X52 X53. [likes piotr pepsi X52* ∨ ¬a1 X53 X52+*]/26`
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr pepsi (sk_B X0)*]/33]
[zip.saturate] ### step    17 ###
[zip.saturate]
    given (17 steps, penalty 1):
      `forall X0. [likes piotr pepsi (sk_B X0)*]/33`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    18 ###
[zip.saturate]
    given (18 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B1 X0)+* ∨ possibly_likes X2 X1 X0]/30`
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan cola X0*]/34, 
       forall X0. [possibly_likes piotr pepsi X0*]/35]
[zip.saturate] ### step    19 ###
[zip.saturate]
    given (19 steps, penalty 1):
      `forall X0. [possibly_likes jan cola X0*]/34`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    20 ###
[zip.saturate]
    given (20 steps, penalty 1):
      `forall X0. [possibly_likes piotr pepsi X0*]/35`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    21 ###
[zip.saturate]
    given (21 steps, penalty 1):
      `forall (X8:mu) X9 X10.
       [likes X8 cola X9 ∨ ¬likes X8 pepsi X9+* ∨ ¬a2 X10 X9*]/4`
[zip.saturate]
    clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/38` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37]
[zip.saturate] ### step    22 ###
[zip.saturate]
    given (22 steps, penalty 1):
      `forall X0 X1. [¬a2 X1 (sk_B1 X0)+* ∨ likes piotr cola (sk_B1 X0)*]/37`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    23 ###
[zip.saturate]
    given (23 steps, penalty 1):
      `forall (X36:mu) X37 X38.
       [likes X36 pepsi X37* ∨ ¬likes X36 cola X37 ∨ ¬a2 X38 X37+*]/20`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    24 ###
[zip.saturate]
    given (24 steps, penalty 1):
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ ¬likes X24 X23 X21]/13`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    25 ###
[zip.saturate]
    given (25 steps, penalty 1):
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ ¬likes X24 X23 X25]/15`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    26 ###
[zip.saturate]
    given (26 steps, penalty 1):
      `forall X21 X22 (X23:mu) (X24:mu).
       [zip_tseitin0 X21 X22 X23 X24* ∨ a1 X22 X21]/14`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    27 ###
[zip.saturate]
    given (27 steps, penalty 1):
      `forall X22 (X23:mu) (X24:mu) X25.
       [zip_tseitin1 X25 X22 X23 X24* ∨ a2 X22 X25]/16`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    28 ###
[zip.saturate]
    given (28 steps, penalty 1):
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ 
        ¬very_much_likes X11 X12 (sk_D X12 X11 X13)+*]/5`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    29 ###
[zip.saturate]
    given (29 steps, penalty 1):
      `forall (X17:mu) (X18:mu) X19 X20.
       [likes X17 X18 X19* ∨ ¬a3 X19 X20+* ∨ 
        ¬very_much_likes X17 X18 X20*]/12`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39]
[zip.saturate] ### step    30 ###
[zip.saturate]
    given (30 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬very_much_likes X2 X1 (sk_B1 X0)+* ∨ likes X2 X1 X0]/39`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    31 ###
[zip.saturate]
    given (31 steps, penalty 1):
      `forall (X39:mu) (X40:mu) X41 X42.
       [possibly_likes X39 X40 X41* ∨ ¬a1 X41 X42+* ∨ 
        ¬likes X39 X40 X42*]/21`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40]
[zip.saturate] ### step    32 ###
[zip.saturate]
    given (32 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes X2 X1 (sk_B X0)+* ∨ possibly_likes X2 X1 X0]/40`
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan cola X0*]/41, 
       forall X0. [possibly_likes piotr cola X0*]/42, 
       forall X0. [possibly_likes piotr pepsi X0*]/43, 
       forall X0. [possibly_likes piotr beer X0*]/44]
[zip.saturate]
    given clause forall X0. [possibly_likes jan cola X0*]/41 is redundant
[zip.saturate] ### step    34 ###
[zip.saturate]
    given (34 steps, penalty 1):
      `forall X0. [possibly_likes piotr cola X0*]/42`
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0. [possibly_likes piotr pepsi X0*]/43 is redundant
[zip.saturate] ### step    36 ###
[zip.saturate]
    given (36 steps, penalty 1):
      `forall X0. [possibly_likes piotr beer X0*]/44`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    37 ###
[zip.saturate]
    given (37 steps, penalty 1):
      `forall (X48:mu) (X49:mu) X50 X51.
       [possibly_likes X48 X49 X50* ∨ ¬a2 X50 X51+* ∨ 
        ¬likes X48 X49 X51*]/25`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    38 ###
[zip.saturate]
    given (38 steps, penalty 1):
      `forall (X11:mu) (X12:mu) X13.
       [very_much_likes X11 X12 X13 ∨ a3 X13 (sk_D X12 X11 X13)*]/6`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46, 
       forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47]
[zip.saturate] ### step    39 ###
[zip.saturate]
    given (39 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X1 X2 X0 ∨ likes jan cola (sk_D X2 X1 X0)*]/46`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    40 ###
[zip.saturate]
    given (40 steps, penalty 1):
      `forall (X32:mu) X33 X34 X35.
       [likes X32 cola X33* ∨ ¬a1 X33 X34+* ∨ 
        ¬likes X32 pepsi X34* ∨ ¬a1 X35 X33*]/19`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48]
[zip.saturate] ### step    41 ###
[zip.saturate]
    given (41 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 pepsi (sk_B X0)* ∨ likes X2 cola X0]/48`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49]
[zip.saturate] ### step    42 ###
[zip.saturate]
    given (42 steps, penalty 1):
      `forall X0 (X1:mu).
       [likes X1 cola (sk_B X0) ∨ ¬likes X1 pepsi (sk_B (sk_B X0))+*]/49`
[zip.saturate]
    inferred new clauses: [forall X0. [likes piotr cola (sk_B X0)*]/50]
[zip.saturate]
    given clause forall X0. [likes piotr cola (sk_B X0)*]/50 is redundant
[zip.saturate] ### step    44 ###
[zip.saturate]
    given (44 steps, penalty 1):
      `forall (X44:mu) X45 X46 X47.
       [likes X44 pepsi X45* ∨ ¬a1 X45 X46+* ∨ 
        ¬likes X44 cola X46* ∨ ¬a1 X47 X45*]/24`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51]
[zip.saturate] ### step    45 ###
[zip.saturate]
    given (45 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [¬a1 X1 X0+* ∨ ¬likes X2 cola (sk_B X0)* ∨ likes X2 pepsi X0]/51`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52]
[zip.saturate] ### step    46 ###
[zip.saturate]
    given (46 steps, penalty 1):
      `forall X0 (X1:mu).
       [likes X1 pepsi (sk_B X0) ∨ ¬likes X1 cola (sk_B (sk_B X0))+*]/52`
[zip.saturate]
    inferred new clauses:
      [forall X0. [likes jan pepsi (sk_B X0)*]/53, 
       forall X0. [likes piotr pepsi (sk_B X0)*]/54]
[zip.saturate] ### step    47 ###
[zip.saturate]
    given (47 steps, penalty 1): `forall X0. [likes jan pepsi (sk_B X0)*]/53`
[zip.saturate]
    clause `forall X0 X1. [¬a2 X1 (sk_B X0)+* ∨ true]/58` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0. [possibly_likes jan pepsi X0*]/55, 
       forall X0. [likes jan cola (sk_B X0)*]/57]
[zip.saturate]
    given clause forall X0. [likes jan cola (sk_B X0)*]/57 is redundant
[zip.saturate] ### step    49 ###
[zip.saturate]
    given (49 steps, penalty 1):
      `forall X0. [possibly_likes jan pepsi X0*]/55`
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0. [likes piotr pepsi (sk_B X0)*]/54 is redundant
[zip.saturate] ### step    51 ###
[zip.saturate]
    given (51 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ ¬likes X4 X3 (sk_D X2 X1 X0)+* ∨ 
        possibly_likes X4 X3 X0]/45`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60]
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/60
      is redundant
[zip.saturate] ### step    53 ###
[zip.saturate]
    given (53 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        ¬very_much_likes X4 X3 (sk_D X2 X1 X0)+* ∨ likes X4 X3 X0]/47`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    54 ###
[zip.saturate]
    given (54 steps, penalty 1):
      `forall (X26:mu) (X27:mu) X28 X29.
       [very_much_likes X26 X27 X28 ∨ 
        ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26+* ∨ 
        ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26 ∨ 
        ¬likes X26 X27 X28 ∨ ¬a3 X29 X28*]/17`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62, 
       forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63]
[zip.saturate] ### step    55 ###
[zip.saturate]
    given (55 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [¬likes X0 X1 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ 
        ¬likes X0 X1 X2 ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/62`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬likes X4 X3 (sk_E (sk_D X2 X1 X0) X3 X4)]/64, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65]
[zip.saturate] ### step    56 ###
[zip.saturate]
    given (56 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [a2 X2 (sk_E X2 X1 X0) ∨ ¬a3 X3 X2+* ∨ ¬likes X0 X1 X2 ∨ 
        ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0* ∨ 
        very_much_likes X0 X1 X2]/63`
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu) (X3:mu) (X4:mu).
       [very_much_likes X1 X2 X0 ∨ 
        very_much_likes X4 X3 (sk_D X2 X1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_D X2 X1 X0) X3 X4) (sk_D X2 X1 X0) X3 X4+* ∨ 
        ¬likes X4 X3 (sk_D X2 X1 X0) ∨ 
        a2 (sk_D X2 X1 X0) (sk_E (sk_D X2 X1 X0) X3 X4)]/66, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67]
[zip.saturate] ### step    57 ###
[zip.saturate]
    given (57 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]/65`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68, 
       forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69]
[zip.saturate] ### step    58 ###
[zip.saturate]
    given (58 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/68`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    59 ###
[zip.saturate]
    given (59 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/69`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    60 ###
[zip.saturate]
    given (60 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [very_much_likes X2 X1 (sk_B1 X0) ∨ 
        ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2+* ∨ 
        ¬likes X2 X1 (sk_B1 X0) ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]/67`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70, 
       forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71]
[zip.saturate] ### step    61 ###
[zip.saturate]
    given (61 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/70`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    62 ###
[zip.saturate]
    given (62 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/71`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X3 cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes X3 pepsi (sk_E (sk_B1 X2) X1 X0)*]/73, 
       forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74]
[zip.saturate] ### step    63 ###
[zip.saturate]
    given (63 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/72`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76, 
       forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77, 
       forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78, 
       forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82, 
       forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83, 
       forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86, 
       forall (X0:mu) (X1:mu) X2 X3.
       [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)*]/85]
[zip.saturate] ### step    64 ###
[zip.saturate]
    given (64 steps, penalty 1):
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/86`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88, 
       forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/89, 
       forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90, 
       forall X0 X1 (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/91, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92, 
       forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95]
[zip.saturate] ### step    65 ###
[zip.saturate]
    given (65 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/93`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    66 ###
[zip.saturate]
    given (66 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/87`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    67 ###
[zip.saturate]
    given (67 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi jan)*]/88`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    68 ###
[zip.saturate]
    given (68 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)*]/92`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96]
[zip.saturate] ### step    69 ###
[zip.saturate]
    given (69 steps, penalty 1):
      `forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/90`
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/102` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/104` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/106` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [true ∨ ¬likes jan pepsi (sk_B1 X0) ∨ 
             very_much_likes jan pepsi (sk_B1 X0)*]/108` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    70 ###
[zip.saturate]
    given (70 steps, penalty 1):
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/94`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/109, 
       forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/110]
[zip.saturate]
    given clause forall X0.
                 [likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/109
      is redundant
[zip.saturate]
    given clause forall X0.
                 [likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/110
      is redundant
[zip.saturate] ### step    73 ###
[zip.saturate]
    given (73 steps, penalty 1):
      `forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi jan))+*]/95`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111, 
       forall X0.
       [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/112]
[zip.saturate] ### step    74 ###
[zip.saturate]
    given (74 steps, penalty 1):
      `forall X0.
       [likes jan pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/111`
[zip.saturate]
    clause `forall X0.
            [true ∨ very_much_likes jan pepsi (sk_B1 X0)* ∨ 
             ¬likes jan pepsi (sk_B1 X0)]/120` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118, 
       forall X0 X1.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116]
[zip.saturate] ### step    75 ###
[zip.saturate]
    given (75 steps, penalty 1):
      `forall X0.
       [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/117`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122]
[zip.saturate]
    given clause forall X0.
                 [likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0)]/112
      is redundant
[zip.saturate] ### step    77 ###
[zip.saturate]
    given (77 steps, penalty 1):
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ ¬likes jan pepsi (sk_B1 X0)]/118`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)*]/123, 
       forall X0 (X1:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124, 
       forall X0 (X1:mu) (X2:mu).
       [¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/125]
[zip.saturate] ### step    78 ###
[zip.saturate]
    given (78 steps, penalty 1):
      `forall X0.
       [very_much_likes jan pepsi (sk_B1 X0)* ∨ 
        ¬likes jan pepsi (sk_B1 X0)]/126`
[zip.saturate]
    inferred new clauses:
      [forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127]
[zip.saturate] ### step    79 ###
[zip.saturate]
    given (79 steps, penalty 1):
      `forall X0. [¬likes jan pepsi (sk_B1 X0)+* ∨ likes jan pepsi X0]/127`
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0.
                 [very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)*]/122
      is redundant
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes X2 X1 (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/125
      is redundant
[zip.saturate]
    given clause forall X0 X1.
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
                  likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/116
      is redundant
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes X1 cola (sk_E (sk_B1 X0) pepsi jan) ∨ 
                  likes X1 pepsi (sk_E (sk_B1 X0) pepsi jan)*]/124
      is redundant
[zip.saturate]
    given clause forall X0 X1.
                 [very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi jan)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/96
      is redundant
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  likes X2 cola (sk_B1 X0)]/89
      is redundant
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  likes X2 pepsi (sk_B1 X0)]/91
      is redundant
[zip.saturate] ### step    87 ###
[zip.saturate]
    given (87 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/81`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144]
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E1 (sk_B1 X0) pepsi jan)*]/145
      is redundant
[zip.saturate] ### step    89 ###
[zip.saturate]
    given (89 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/75`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149]
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi jan)* ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi jan)*]/150
      is redundant
[zip.saturate] ### step    91 ###
[zip.saturate]
    given (91 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X2) X1 X0)*]/76`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/156]
[zip.saturate] ### step    92 ###
[zip.saturate]
    given (92 steps, penalty 1):
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/155`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    93 ###
[zip.saturate]
    given (93 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)*]/80`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/163, 
       forall (X0:mu) (X1:mu) X2 X3.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159]
[zip.saturate] ### step    94 ###
[zip.saturate]
    given (94 steps, penalty 1):
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/161`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    95 ###
[zip.saturate]
    given (95 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi piotr)*]/164`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165]
[zip.saturate] ### step    96 ###
[zip.saturate]
    given (96 steps, penalty 1):
      `forall X0 X1.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)*]/165`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168]
[zip.saturate] ### step    97 ###
[zip.saturate]
    given (97 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/168`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/171, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/172, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/173, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174, 
       forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175, 
       forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176, 
       forall X0 (X1:mu).
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177]
[zip.saturate] ### step    98 ###
[zip.saturate]
    given (98 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/175`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step    99 ###
[zip.saturate]
    given (99 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/169`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   100 ###
[zip.saturate]
    given (100 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/170`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   101 ###
[zip.saturate]
    given (101 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/174`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/184, 
       forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180]
[zip.saturate] ### step   102 ###
[zip.saturate]
    given (102 steps, penalty 1):
      `forall X0.
       [¬likes piotr pepsi (sk_E (sk_B1 X0) pepsi piotr)+* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) pepsi piotr)]/182`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   103 ###
[zip.saturate]
    given (103 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/185`
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/172
      is redundant
[zip.saturate] ### step   105 ###
[zip.saturate]
    given (105 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/188`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189]
[zip.saturate] ### step   106 ###
[zip.saturate]
    given (106 steps, penalty 1):
      `forall X0 X1.
       [¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/189`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191]
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
                  ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/176
      is redundant
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
                  ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/177
      is redundant
[zip.saturate]
    given clause forall X0 X1.
                 [likes jan cola (sk_E (sk_B1 X0) pepsi piotr) ∨ 
                  very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/180
      is redundant
[zip.saturate] ### step   110 ###
[zip.saturate]
    given (110 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/191`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 cola (sk_B1 X0)]/200, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/201, 
       forall X0 X1 (X2:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/202, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203, 
       forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204, 
       forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205, 
       forall X0 (X1:mu).
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206]
[zip.saturate] ### step   111 ###
[zip.saturate]
    given (111 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) beer piotr)*]/204`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   112 ###
[zip.saturate]
    given (112 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/198`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   113 ###
[zip.saturate]
    given (113 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) beer piotr)*]/199`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/210]
[zip.saturate] ### step   114 ###
[zip.saturate]
    given (114 steps, penalty 1):
      `forall X0.
       [¬likes piotr beer (sk_E (sk_B1 X0) beer piotr)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)]/209`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   115 ###
[zip.saturate]
    given (115 steps, penalty 1):
      `forall X0.
       [very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) beer piotr)*]/203`
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211]
[zip.saturate] ### step   116 ###
[zip.saturate]
    given (116 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/212`
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
                  likes X2 cola (sk_B1 X0)]/171
      is redundant
[zip.saturate]
    given clause forall X0 X1 (X2:mu).
                 [very_much_likes piotr pepsi (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) pepsi piotr)* ∨ 
                  ¬a1 X1 (sk_B1 X0)+* ∨ 
                  ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
                  likes X2 pepsi (sk_B1 X0)]/173
      is redundant
[zip.saturate]
    given clause forall X0 (X1:mu) (X2:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
                  ¬likes X2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                  possibly_likes X2 X1 (sk_B1 X0)]/201
      is redundant
[zip.saturate] ### step   120 ###
[zip.saturate]
    given (120 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/144`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/222]
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  likes X1 cola (sk_E1 (sk_B1 X0) beer piotr) ∨ 
                  ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/205
      is redundant
[zip.saturate]
    given clause forall X0 (X1:mu).
                 [very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  likes X1 pepsi (sk_E1 (sk_B1 X0) beer piotr) ∨ 
                  ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) beer piotr))+*]/206
      is redundant
[zip.saturate] ### step   123 ###
[zip.saturate]
    given (123 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬likes X4 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/78`
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/230` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/232` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0 X1.
                 [likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
                  ¬likes piotr beer (sk_B1 X0) ∨ 
                  very_much_likes piotr beer (sk_B1 X0) ∨ 
                  ¬a2 X1 (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X0) beer piotr)*]/211
      is redundant
[zip.saturate] ### step   125 ###
[zip.saturate]
    given (125 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0)]/149`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/236]
[zip.saturate] ### step   126 ###
[zip.saturate]
    given (126 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 pepsi (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/82`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237, 
       forall (X0:mu) (X1:mu) X2.
       [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238]
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes jan cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/237
      is redundant
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes piotr cola (sk_E1 (sk_B1 X2) X1 X0) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/238
      is redundant
[zip.saturate] ### step   129 ###
[zip.saturate]
    given (129 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0) ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        likes X3 pepsi (sk_E1 (sk_B1 X2) X1 X0) ∨ 
        ¬likes X3 cola (sk_B (sk_E1 (sk_B1 X2) X1 X0))+*]/83`
[zip.saturate]
    inferred new clauses:
      [forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239, 
       forall (X0:mu) (X1:mu) X2.
       [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240]
[zip.saturate] ### step   130 ###
[zip.saturate]
    given (130 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/239`
[zip.saturate]
    clause `forall X0.
            [¬likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)+* ∨ 
             very_much_likes jan pepsi (sk_B1 X0) ∨ 
             ¬likes jan pepsi (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/245` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/248` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
        very_much_likes jan pepsi (sk_B1 X0) ∨ 
        ¬likes jan pepsi (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246, 
       forall (X0:mu) (X1:mu) X2 X3.
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244]
[zip.saturate]
    given clause forall X0.
                 [a2 (sk_B1 X0) (sk_E (sk_B1 X0) pepsi jan)* ∨ 
                  very_much_likes jan pepsi (sk_B1 X0) ∨ 
                  ¬likes jan pepsi (sk_B1 X0) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X0) pepsi jan)]/246
      is redundant
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2.
                 [likes piotr pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/240
      is redundant
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2 X3.
                 [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
                  likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]/244
      is redundant
[zip.saturate]
    given clause forall (X0:mu) (X1:mu) X2 X3.
                 [very_much_likes X0 X1 (sk_B1 X2) ∨ 
                  ¬likes X0 X1 (sk_B1 X2) ∨ 
                  likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
                  ¬a2 X3 (sk_E1 (sk_B1 X2) X1 X0)+* ∨ 
                  likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)]/159
      is redundant
[zip.saturate] ### step   135 ###
[zip.saturate]
    given (135 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [likes X2 cola (sk_B1 X0) ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/253`
[zip.saturate]
    clause `forall X0 X1.
            [true ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
             likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             likes jan pepsi (sk_E (sk_B1 X0) beer piotr)*]/257` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0 X1.
       [likes piotr cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/258]
[zip.saturate] ### step   136 ###
[zip.saturate]
    given (136 steps, penalty 1):
      `forall X0 X1.
       [¬a1 X1 (sk_B1 X0)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/260`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   137 ###
[zip.saturate]
    given (137 steps, penalty 1):
      `forall X0 X1 (X2:mu).
       [likes X2 pepsi (sk_B1 X0) ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) beer piotr)+* ∨ 
        ¬a1 X1 (sk_B1 X0)* ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)* ∨ 
        very_much_likes piotr beer (sk_B1 X0)]/261`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   138 ###
[zip.saturate]
    given (138 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 (X3:mu) (X4:mu).
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X4 X3 (sk_E (sk_B1 X2) X1 X0)+* ∨ 
        possibly_likes X4 X3 (sk_B1 X2)]/74`
[zip.saturate]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
             ¬likes piotr beer (sk_B1 X0) ∨ 
             very_much_likes piotr beer (sk_B1 X0)]/272` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)*]/274` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes piotr cola (sk_E1 (sk_B1 X2) X1 X0)*]/276` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ true ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/278` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) beer piotr)* ∨ true ∨ 
             very_much_likes piotr beer (sk_B1 X0) ∨ 
             ¬likes piotr beer (sk_B1 X0)]/280` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270, 
       forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/282]
[zip.saturate] ### step   139 ###
[zip.saturate]
    given (139 steps, penalty 1):
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
        very_much_likes piotr pepsi (sk_B1 X0)]/270`
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/283` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr beer (sk_E1 (sk_B1 X0) pepsi piotr)*]/284` is trivial, dump
[zip.saturate]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 pepsi (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 cola (sk_B1 X0)]/285` is trivial, dump
[zip.saturate]
    clause `forall X0 (X1:mu) (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬likes X2 X1 (sk_E1 (sk_B1 X0) pepsi piotr)+* ∨ 
             possibly_likes X2 X1 (sk_B1 X0)]/286` is trivial, dump
[zip.saturate]
    clause `forall X0 X1 (X2:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             ¬a1 X1 (sk_B1 X0)+* ∨ 
             ¬likes X2 cola (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ 
             likes X2 pepsi (sk_B1 X0)]/287` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes piotr pepsi (sk_E1 (sk_B1 X0) pepsi piotr)*]/288` is trivial, dump
[zip.saturate]
    clause `forall X0.
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes jan cola (sk_E1 (sk_B1 X0) pepsi piotr)*]/289` is trivial, dump
[zip.saturate]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes X1 cola (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/290` is trivial, dump
[zip.saturate]
    clause `forall X0 (X1:mu).
            [very_much_likes piotr pepsi (sk_B1 X0) ∨ Τ ∨ 
             likes X1 pepsi (sk_E1 (sk_B1 X0) pepsi piotr) ∨ 
             ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) pepsi piotr))+*]/291` is trivial, dump
[zip.saturate] inferred new clauses: []
[zip.saturate]
    given clause forall X0.
                 [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) pepsi piotr)* ∨ true ∨ 
                  very_much_likes piotr pepsi (sk_B1 X0)]/282
      is redundant
[zip.saturate] ### step   141 ###
[zip.saturate]
    given (141 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 cola (sk_B1 X2)]/77`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   142 ###
[zip.saturate]
    given (142 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2 X3 (X4:mu).
       [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ 
        ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
        ¬a1 X3 (sk_B1 X2)+* ∨ 
        ¬likes X4 cola (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        likes X4 pepsi (sk_B1 X2)]/79`
[zip.saturate] inferred new clauses: []
[zip.saturate] ### step   143 ###
[zip.saturate]
    given (143 steps, penalty 1):
      `forall (X0:mu) (X1:mu) X2.
       [very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan cola (sk_E (sk_B1 X2) X1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X2) X1 X0)*]/292`
[zip.saturate]
    clause `forall X0.
            [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
             very_much_likes jan cola (sk_B1 X0) ∨ 
             likes jan cola (sk_E (sk_B1 X0) cola jan)]/298` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)* ∨ true ∨ 
             very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan cola (sk_E (sk_B1 X2) X1 X0)]/302` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300, 
       forall X0 X1.
       [likes jan pepsi (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        very_much_likes piotr beer (sk_B1 X0) ∨ 
        ¬likes piotr beer (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) beer piotr)*]/303]
[zip.saturate] ### step   144 ###
[zip.saturate]
    given (144 steps, penalty 1):
      `forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/300`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304, 
       forall X0 (X1:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X1 cola (sk_E (sk_B1 X0) cola jan) ∨ 
        likes X1 pepsi (sk_E (sk_B1 X0) cola jan)*]/305, 
       forall X0 (X1:mu) (X2:mu).
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/306, 
       forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309]
[zip.saturate] ### step   145 ###
[zip.saturate]
    given (145 steps, penalty 1):
      `forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan) ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan pepsi (sk_E (sk_B1 X0) cola jan)*]/304`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/313, 
       forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314]
[zip.saturate] ### step   146 ###
[zip.saturate]
    given (146 steps, penalty 1):
      `forall X0.
       [likes piotr cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/309`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)]/317]
[zip.saturate] ### step   147 ###
[zip.saturate]
    given (147 steps, penalty 1):
      `forall X0 X1.
       [¬a2 X1 (sk_E (sk_B1 X0) cola jan)+* ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/314`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [likes jan cola (sk_E (sk_B1 X0) cola jan)* ∨ 
        a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/321, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322]
[zip.saturate] ### step   148 ###
[zip.saturate]
    given (148 steps, penalty 1):
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E (sk_B1 X0) cola jan)*]/322`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326, 
       forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/328]
[zip.saturate] ### step   149 ###
[zip.saturate]
    given (149 steps, penalty 1):
      `forall X0.
       [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/326`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr cola (sk_E1 (sk_B1 X0) cola jan)*]/329, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr beer (sk_E1 (sk_B1 X0) cola jan)*]/330, 
       forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 pepsi (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 cola (sk_B1 X0)]/331, 
       forall X0 (X1:mu) (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        ¬likes X2 X1 (sk_E1 (sk_B1 X0) cola jan)+* ∨ 
        possibly_likes X2 X1 (sk_B1 X0)]/332, 
       forall X0 X1 (X2:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ ¬a1 X1 (sk_B1 X0)+* ∨ 
        ¬likes X2 cola (sk_E1 (sk_B1 X0) cola jan)* ∨ 
        likes X2 pepsi (sk_B1 X0)]/333, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes piotr pepsi (sk_E1 (sk_B1 X0) cola jan)*]/334, 
       forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335, 
       forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 cola (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 pepsi (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/336, 
       forall X0 (X1:mu).
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes X1 pepsi (sk_E1 (sk_B1 X0) cola jan) ∨ 
        ¬likes X1 cola (sk_B (sk_E1 (sk_B1 X0) cola jan))+*]/337]
[zip.saturate] ### step   150 ###
[zip.saturate]
    given (150 steps, penalty 1):
      `forall X0.
       [very_much_likes jan cola (sk_B1 X0) ∨ 
        likes jan cola (sk_E1 (sk_B1 X0) cola jan)*]/335`
[zip.saturate]
    inferred new clauses:
      [forall X0.
       [¬likes jan cola (sk_E (sk_B1 X0) cola jan)+* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/342, 
       forall X0.
       [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ 
        very_much_likes jan cola (sk_B1 X0)]/344, 
       forall X0.
       [likes jan pepsi (sk_E (sk_B1 X0) cola jan)* ∨ true ∨ 
        very_much_likes jan cola (sk_B1 X0)]/346]
[zip.saturate] ### step   151 ###
[zip.saturate]
    given (151 steps, penalty 1):
      `forall X0. [very_much_likes jan cola (sk_B1 X0)*]/347`
[zip.saturate]
    inferred new clauses: [forall X0. [likes jan cola X0*]/348]
[zip.saturate] ### step   152 ###
[zip.saturate]
    given (152 steps, penalty 1): `forall X0. [likes jan cola X0*]/348`
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ very_much_likes X0 X1 (sk_B1 X2)]/362` is trivial, dump
[zip.saturate]
    clause `forall (X0:mu) (X1:mu) X2.
            [true ∨ very_much_likes X0 X1 (sk_B1 X2) ∨ 
             ¬likes X0 X1 (sk_B1 X2) ∨ 
             likes jan pepsi (sk_E (sk_B1 X2) X1 X0)*]/367` is trivial, dump
[zip.saturate]
    inferred new clauses:
      [forall X0 (X1:mu) (X2:mu).
       [possibly_likes jan cola X0* ∨ very_much_likes X1 X2 X0*]/349, 
       forall X0. [possibly_likes jan cola X0*]/350, 
       forall X0. [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)* ∨ true]/361, 
       [true*]/364, 
       forall X0. [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)* ∨ true]/366, 
       forall X0. [possibly_likes jan cola X0*]/356, 
       forall X0. [likes jan pepsi (sk_B X0)*]/357, 
       forall (X0:mu) (X1:mu) X2.
       [likes jan pepsi (sk_E1 (sk_B1 X2) X1 X0)* ∨ 
        very_much_likes X0 X1 (sk_B1 X2) ∨ ¬likes X0 X1 (sk_B1 X2) ∨ 
        likes jan pepsi (sk_E (sk_B1 X2) X1 X0)]/358, 
       ⊥/359]
# done 152 iterations in s
# SZS status Theorem for '../hoe.extra/tests/agt035.p'
# SZS output start Refutation
* assert [file "../hoe.extra/tests/agt035.p" "45"]
    ∀ A/47 B/48:mu C/49:mu D/50.
      ((¬ (a3 A/47 D/50))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (∀ E/51. ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
       ∨ (¬ (∀ E/52. ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
       ∨ (very_much_likes B/48 C/49 D/50)). by
  '45' in '../hoe.extra/tests/agt035.p'
* assert [internal]
    ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
    (zip_tseitin0 E/51 D/50 C/49 B/48). by
  define zip_tseitin0 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* forall X21 X22 (X23:mu) (X24:mu).
  [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* assert [file "../hoe.extra/tests/agt035.p" "50"]
    ∀ A/66.
      (¬ (∀ B/67. ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))). by
  '50' in '../hoe.extra/tests/agt035.p'
* forall X43. a3 X43 (sk_B1 X43) by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "50"]
           ∀ A/66.
             (¬ (∀ B/67.
                    ((¬ (likes piotr pepsi B/67)) ∨ (¬ (a3 A/66 B/67))))).
* assert [internal]
    ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
    (zip_tseitin1 E/52 D/50 C/49 B/48). by
  define zip_tseitin1 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* forall X22 (X23:mu) (X24:mu) X25.
  [zip_tseitin1 X25 X22 X23 X24 ∨ a2 X22 X25] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48).
* val [internal] zip_tseitin1 : ι → ι → mu → mu → prop. by
  define zip_tseitin1 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* val [internal] zip_tseitin0 : ι → ι → mu → mu → prop. by
  define zip_tseitin0 
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50)).
* assert
    ∀ A/47 B/48:mu C/49:mu D/50.
      ((very_much_likes B/48 C/49 D/50)
       ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
       ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
       ∨ (¬ (likes B/48 C/49 D/50))
       ∨ (¬ (a3 A/47 D/50))). by
  esa 'cnf.tseitin'
    with assert [file "../hoe.extra/tests/agt035.p" "45"]
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((¬ (a3 A/47 D/50))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (∀ E/51.
                         ((¬ (a1 D/50 E/51)) ∨ (likes B/48 C/49 E/51))))
              ∨ (¬ (∀ E/52.
                         ((¬ (a2 D/50 E/52)) ∨ (likes B/48 C/49 E/52))))
              ∨ (very_much_likes B/48 C/49 D/50))., 
         val [internal] zip_tseitin1 : ι → ι → mu → mu → prop., 
         assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48)., 
         val [internal] zip_tseitin0 : ι → ι → mu → mu → prop., 
         assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* forall (X26:mu) (X27:mu) X28 X29.
  [very_much_likes X26 X27 X28
   ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
   ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
   ∨ ¬likes X26 X27 X28
   ∨ ¬a3 X29 X28] by
  esa 'cnf'
    with assert
           ∀ A/47 B/48:mu C/49:mu D/50.
             ((very_much_likes B/48 C/49 D/50)
              ∨ (¬ (∀ E/52. (zip_tseitin1 E/52 D/50 C/49 B/48)))
              ∨ (¬ (∀ E/51. (zip_tseitin0 E/51 D/50 C/49 B/48)))
              ∨ (¬ (likes B/48 C/49 D/50))
              ∨ (¬ (a3 A/47 D/50))).
* forall (X0:mu) (X1:mu) X2 X3.
  [a2 X2 (sk_E X2 X1 X0)
   ∨ ¬a3 X3 X2
   ∨ ¬likes X0 X1 X2
   ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
   ∨ very_much_likes X0 X1 X2] by
  inf 'sup-'
    with forall X22 (X23:mu) (X24:mu) X25.
         [zip_tseitin1 X25 X22 X23 X24 ∨ a2 X22 X25], 
         forall (X26:mu) (X27:mu) X28 X29.
         [very_much_likes X26 X27 X28
          ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
          ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
          ∨ ¬likes X26 X27 X28
          ∨ ¬a3 X29 X28]
* forall X0 (X1:mu) (X2:mu).
  [very_much_likes X2 X1 (sk_B1 X0)
   ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
   ∨ ¬likes X2 X1 (sk_B1 X0)
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X0:mu) (X1:mu) X2 X3.
         [a2 X2 (sk_E X2 X1 X0)
          ∨ ¬a3 X3 X2
          ∨ ¬likes X0 X1 X2
          ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
          ∨ very_much_likes X0 X1 X2]
* forall (X0:mu) (X1:mu) X2.
  [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]
* assert [file "../hoe.extra/tests/agt035.p" "37"]
    ∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))). by
  '37' in '../hoe.extra/tests/agt035.p'
* forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "37"]
           ∀ A/27 B/28. ((likes jan pepsi B/28) ∨ (¬ (a2 A/27 B/28))).
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4]
* assert [file "../hoe.extra/tests/agt035.p" "58"]
    ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))). by
  '58' in '../hoe.extra/tests/agt035.p'
* forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "58"]
           ∀ A/78 B/79. ((likes jan cola B/79) ∨ (¬ (a1 A/78 B/79))).
* forall (X0:mu) (X1:mu) X2.
  [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X2) X1 X0)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* assert [file "../hoe.extra/tests/agt035.p" "29"]
    ∀ A/31 B/32:mu C/33.
      ((likes B/32 cola C/33)
       ∨ (¬ (likes B/32 pepsi C/33))
       ∨ (¬ (a2 A/31 C/33))). by
  '29' in '../hoe.extra/tests/agt035.p'
* forall (X8:mu) X9 X10.
  [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "29"]
           ∀ A/31 B/32:mu C/33.
             ((likes B/32 cola C/33)
              ∨ (¬ (likes B/32 pepsi C/33))
              ∨ (¬ (a2 A/31 C/33))).
* forall (X0:mu) (X1:mu) X2 X3.
  [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [likes jan pepsi (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)], 
         forall (X8:mu) X9 X10.
         [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9]
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall (X0:mu) (X1:mu) X2 X3.
         [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ ¬a2 X3 (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)]
* forall (X0:mu) (X1:mu) X2.
  [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  simp 'simplify'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)]
* forall (X0:mu) (X1:mu) X2.
  [very_much_likes X0 X1 (sk_B1 X2)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
   ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)] by
  inf 'clc'
    with forall (X0:mu) (X1:mu) X2.
         [likes jan cola (sk_E1 (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* forall X21 X22 (X23:mu) (X24:mu).
  [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/51) ∨ (¬ (a1 D/50 E/51))) ⇒
           (zip_tseitin0 E/51 D/50 C/49 B/48).
* forall (X0:mu) (X1:mu) X2.
  [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
   ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall (X0:mu) (X1:mu) X2.
         [very_much_likes X0 X1 (sk_B1 X2)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ likes jan cola (sk_E (sk_B1 X2) X1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X2) X1 X0)], 
         forall (X0:mu) (X1:mu) X2.
         [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ a2 (sk_B1 X2) (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* assert [file "../hoe.extra/tests/agt035.p" "65"]
    ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))). by
  '65' in '../hoe.extra/tests/agt035.p'
* forall X15 X16. [likes jan cola X15 ∨ ¬a3 X16 X15] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "65"]
           ∀ A/41 B/42. ((likes jan cola B/42) ∨ (¬ (a3 A/41 B/42))).
* forall X0. likes jan cola (sk_B1 X0) by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall X15 X16. [likes jan cola X15 ∨ ¬a3 X16 X15]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬true
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0), 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'simplify'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬true
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan pepsi (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X4 X5. [likes jan pepsi X4 ∨ ¬a2 X5 X4]
* forall X0 X1.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ ¬a2 X1 (sk_E (sk_B1 X0) cola jan)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan pepsi (sk_E (sk_B1 X0) cola jan)], 
         forall (X8:mu) X9 X10.
         [likes X8 cola X9 ∨ ¬likes X8 pepsi X9 ∨ ¬a2 X10 X9]
* forall X0 X1.
  [¬a2 X1 (sk_E (sk_B1 X0) cola jan)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0 X1.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ ¬a2 X1 (sk_E (sk_B1 X0) cola jan)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X0.
  [likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a2 (sk_B1 X0) (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X0 X1.
         [¬a2 X1 (sk_E (sk_B1 X0) cola jan)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'simplify'
    with forall X0.
         [likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X22 (X23:mu) (X24:mu) X25.
  [zip_tseitin1 X25 X22 X23 X24 ∨ ¬likes X24 X23 X25] by
  esa 'cnf'
    with assert [internal]
           ((likes B/48 C/49 E/52) ∨ (¬ (a2 D/50 E/52))) ⇒
           (zip_tseitin1 E/52 D/50 C/49 B/48).
* forall (X0:mu) (X1:mu) X2 X3.
  [¬likes X0 X1 (sk_E X2 X1 X0)
   ∨ ¬a3 X3 X2
   ∨ ¬likes X0 X1 X2
   ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
   ∨ very_much_likes X0 X1 X2] by
  inf 'sup-'
    with forall X22 (X23:mu) (X24:mu) X25.
         [zip_tseitin1 X25 X22 X23 X24 ∨ ¬likes X24 X23 X25], 
         forall (X26:mu) (X27:mu) X28 X29.
         [very_much_likes X26 X27 X28
          ∨ ¬zip_tseitin1 (sk_E X28 X27 X26) X28 X27 X26
          ∨ ¬zip_tseitin0 (sk_E1 X28 X27 X26) X28 X27 X26
          ∨ ¬likes X26 X27 X28
          ∨ ¬a3 X29 X28]
* forall X0 (X1:mu) (X2:mu).
  [very_much_likes X2 X1 (sk_B1 X0)
   ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
   ∨ ¬likes X2 X1 (sk_B1 X0)
   ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X0:mu) (X1:mu) X2 X3.
         [¬likes X0 X1 (sk_E X2 X1 X0)
          ∨ ¬a3 X3 X2
          ∨ ¬likes X0 X1 X2
          ∨ ¬zip_tseitin0 (sk_E1 X2 X1 X0) X2 X1 X0
          ∨ very_much_likes X0 X1 X2]
* forall (X0:mu) (X1:mu) X2.
  [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ a1 X22 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall (X0:mu) (X1:mu) X2.
         [a1 (sk_B1 X2) (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ likes jan cola (sk_E1 (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [a1 (sk_B1 X0) (sk_E1 (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)], 
         forall X54 X55. [likes jan cola X54 ∨ ¬a1 X55 X54]
* forall (X0:mu) (X1:mu) X2.
  [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
   ∨ ¬likes X0 X1 (sk_B1 X2)
   ∨ very_much_likes X0 X1 (sk_B1 X2)] by
  inf 'sup-'
    with forall X21 X22 (X23:mu) (X24:mu).
         [zip_tseitin0 X21 X22 X23 X24 ∨ ¬likes X24 X23 X21], 
         forall X0 (X1:mu) (X2:mu).
         [very_much_likes X2 X1 (sk_B1 X0)
          ∨ ¬zip_tseitin0 (sk_E1 (sk_B1 X0) X1 X2) (sk_B1 X0) X1 X2
          ∨ ¬likes X2 X1 (sk_B1 X0)
          ∨ ¬likes X2 X1 (sk_E (sk_B1 X0) X1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_B1 X0)
   ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  inf 'sup-'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E1 (sk_B1 X0) cola jan)], 
         forall (X0:mu) (X1:mu) X2.
         [¬likes X0 X1 (sk_E1 (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_E (sk_B1 X2) X1 X0)
          ∨ ¬likes X0 X1 (sk_B1 X2)
          ∨ very_much_likes X0 X1 (sk_B1 X2)]
* forall X0.
  [very_much_likes jan cola (sk_B1 X0)
   ∨ very_much_likes jan cola (sk_B1 X0)
   ∨ ¬true
   ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)] by
  simp 'demod'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_B1 X0)
          ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)], 
         forall X0. likes jan cola (sk_B1 X0)
* forall X0.
  [¬likes jan cola (sk_E (sk_B1 X0) cola jan)
   ∨ very_much_likes jan cola (sk_B1 X0)] by
  simp 'simplify'
    with forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ very_much_likes jan cola (sk_B1 X0)
          ∨ ¬true
          ∨ ¬likes jan cola (sk_E (sk_B1 X0) cola jan)]
* forall X0. very_much_likes jan cola (sk_B1 X0) by
  inf 'clc'
    with forall X0.
         [¬likes jan cola (sk_E (sk_B1 X0) cola jan)
          ∨ very_much_likes jan cola (sk_B1 X0)], 
         forall X0.
         [very_much_likes jan cola (sk_B1 X0)
          ∨ likes jan cola (sk_E (sk_B1 X0) cola jan)]
* assert [file "../hoe.extra/tests/agt035.p" "41"]
    ∀ A/43 B/44:mu C/45:mu.
      ((likes B/44 C/45 A/43)
       ∨ (∀ D/46.
              ((¬ (very_much_likes B/44 C/45 D/46)) ∨ (¬ (a3 A/43 D/46))))). by
  '41' in '../hoe.extra/tests/agt035.p'
* forall (X17:mu) (X18:mu) X19 X20.
  [likes X17 X18 X19 ∨ ¬a3 X19 X20 ∨ ¬very_much_likes X17 X18 X20] by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "41"]
           ∀ A/43 B/44:mu C/45:mu.
             ((likes B/44 C/45 A/43)
              ∨ (∀ D/46.
                     ((¬ (very_much_likes B/44 C/45 D/46))
                      ∨ (¬ (a3 A/43 D/46))))).
* forall X0 (X1:mu) (X2:mu).
  [¬very_much_likes X2 X1 (sk_B1 X0) ∨ likes X2 X1 X0] by
  inf 'sup-'
    with forall X43. a3 X43 (sk_B1 X43), 
         forall (X17:mu) (X18:mu) X19 X20.
         [likes X17 X18 X19
          ∨ ¬a3 X19 X20
          ∨ ¬very_much_likes X17 X18 X20]
* forall X0. likes jan cola X0 by
  inf 'sup-'
    with forall X0. very_much_likes jan cola (sk_B1 X0), 
         forall X0 (X1:mu) (X2:mu).
         [¬very_much_likes X2 X1 (sk_B1 X0) ∨ likes X2 X1 X0]
* assert [file "../hoe.extra/tests/agt035.p" "21"]
    ¬ (∀ A/38. (likes jan cola A/38)). by
  '21' in '../hoe.extra/tests/agt035.p'
* ¬likes jan cola sk_A by
  esa 'cnf'
    with assert [file "../hoe.extra/tests/agt035.p" "21"]
           ¬ (∀ A/38. (likes jan cola A/38)).
* ⊥ by inf 'sup-' with forall X0. likes jan cola X0, ¬likes jan cola sk_A

# SZS output end Refutation
